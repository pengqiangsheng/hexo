{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/README.md","path":"README.md","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/2.png","path":"images/2.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/15.png","path":"images/15.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/20.png","path":"images/20.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/love.png","path":"images/love.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/yang-2.png","path":"images/yang-2.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/sea.png","path":"images/sea.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/yang-1.png","path":"images/yang-1.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/12.jpg","path":"uploads/12.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/default.css","path":"uploads/default.css","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/13.jpg","path":"uploads/13.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/alipay.jpg","path":"uploads/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/message.json","path":"js/live2d/message.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/mycoding.js","path":"js/src/mycoding.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/md5.js","path":"js/src/md5.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/gitalk.css","path":"js/src/gitalk.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/css/live2d.css","path":"js/live2d/css/live2d.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/gitalk.min.js","path":"js/src/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/js/message.js","path":"js/live2d/js/message.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/model.json","path":"js/live2d/model/tia/model.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/js/live2d.js","path":"js/live2d/js/live2d.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere3.mtn","path":"js/live2d/model/tia/motions/Breath Dere3.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere2.mtn","path":"js/live2d/model/tia/motions/Breath Dere2.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere1.mtn","path":"js/live2d/model/tia/motions/Breath Dere1.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath2.mtn","path":"js/live2d/model/tia/motions/Breath2.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath1.mtn","path":"js/live2d/model/tia/motions/Breath1.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath4.mtn","path":"js/live2d/model/tia/motions/Breath4.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath5.mtn","path":"js/live2d/model/tia/motions/Breath5.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath6.mtn","path":"js/live2d/model/tia/motions/Breath6.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath3.mtn","path":"js/live2d/model/tia/motions/Breath3.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath8.mtn","path":"js/live2d/model/tia/motions/Breath8.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Fail.mtn","path":"js/live2d/model/tia/motions/Fail.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sleeping.mtn","path":"js/live2d/model/tia/motions/Sleeping.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Success.mtn","path":"js/live2d/model/tia/motions/Success.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei1.mtn","path":"js/live2d/model/tia/motions/Sukebei1.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei2.mtn","path":"js/live2d/model/tia/motions/Sukebei2.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei3.mtn","path":"js/live2d/model/tia/motions/Sukebei3.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath9.mtn","path":"js/live2d/model/tia/motions/Breath9.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath7.mtn","path":"js/live2d/model/tia/motions/Breath7.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere2.mtn","path":"js/live2d/model/tia/motions/Touch Dere2.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere4.mtn","path":"js/live2d/model/tia/motions/Touch Dere4.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere5.mtn","path":"js/live2d/model/tia/motions/Touch Dere5.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere3.mtn","path":"js/live2d/model/tia/motions/Touch Dere3.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere1.mtn","path":"js/live2d/model/tia/motions/Touch Dere1.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch1.mtn","path":"js/live2d/model/tia/motions/Touch1.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere6.mtn","path":"js/live2d/model/tia/motions/Touch Dere6.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch3.mtn","path":"js/live2d/model/tia/motions/Touch3.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch5.mtn","path":"js/live2d/model/tia/motions/Touch5.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch2.mtn","path":"js/live2d/model/tia/motions/Touch2.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/WakeUp.mtn","path":"js/live2d/model/tia/motions/WakeUp.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/model.moc","path":"js/live2d/model/tia/model.moc","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch6.mtn","path":"js/live2d/model/tia/motions/Touch6.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch4.mtn","path":"js/live2d/model/tia/motions/Touch4.mtn","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/live2d/model/tia/textures/default-costume.png","path":"js/live2d/model/tia/textures/default-costume.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1555118038307},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1555118038307},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1555118038307},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1555118038308},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1555118038308},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1555118038308},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1555118038308},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1555118038309},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1555118038309},{"_id":"themes/next/_config.yml","hash":"4d191c2eb69dab4a8c61f9ff9dc3b5f48e3141c2","modified":1557451412378},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1555118038308},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1555118038309},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1555118038310},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1555118038309},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1555118038310},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1555118038330},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器.md","hash":"72bdc2bb1e258d4e8930c7166e7505aad9de774f","modified":1556783565560},{"_id":"source/_posts/Centos-cp-去掉覆盖提醒.md","hash":"5f696e5366ca214740ad27d302bf70a850d52d39","modified":1555669260512},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用.md","hash":"266adfabd865f2e5abc86b9a6a68c97dff2233a9","modified":1556783296892},{"_id":"source/_posts/github更新项目.md","hash":"c722d72a9b866c1db9f20f778d3c6f7cff09846d","modified":1555118038288},{"_id":"source/_posts/中国福州鼓山半日游.md","hash":"c7da80ded35cc12b9a3f1b3d16abed734a3c15da","modified":1556882393530},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站.md","hash":"96c711fed3bb1398bad29539d98e7bcf9a09eb24","modified":1557493729180},{"_id":"source/_posts/关于php执行shell命令的一些体会.md","hash":"095e1ac3432ada7e8da3fae12c4a26cc031d78f0","modified":1555671529933},{"_id":"source/_posts/小飞机ss-ssr的部署方法.md","hash":"0f006d7576dc570bccde8ac094933863ad248dc3","modified":1556882405372},{"_id":"source/_posts/深海迷航联机教程.md","hash":"be614ef4431b9639fe751b947b15d020ac9d0c3b","modified":1556882591094},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略.md","hash":"5325f4220cc7022fe51e3b1794af14b8cdff3091","modified":1555118038293},{"_id":"source/categories/index.md","hash":"909524bb22c76bf33e363cbc9f79303cdb286959","modified":1555118038307},{"_id":"source/message/index.html","hash":"7d1f5611f531064e5fdb4da3284abb90c7f58efa","modified":1557451932981},{"_id":"source/about/index.md","hash":"d1b4ed746b35b5e2a45d2cf81d8b8a75a23152ed","modified":1555118038306},{"_id":"source/_posts/经典游戏贪吃蛇Snake.md","hash":"f09f69a784cd9372fe2c26f6314181fa5315bb91","modified":1555118038306},{"_id":"source/_posts/hexo生成博文插入图片的办法.md","hash":"cde13028a710a52c7c1c0a9df7a7dccba2fe0632","modified":1555118038292},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1555118038310},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1555118038310},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1555118038311},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1555118038311},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1555118038311},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1555118038311},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1555118038312},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1555118038312},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用.md","hash":"67b81187e91a57f4defd4edbef6afed89ed8b98a","modified":1556783360496},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1555118038312},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1555118038312},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1555118038312},{"_id":"themes/next/layout/_layout.swig","hash":"43ff99fe8db15db2bef940c7865f0a5df235b2cd","modified":1557731406663},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1555118038313},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1555118038310},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1555118038313},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1555118038313},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1555118038329},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1555118038328},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1555118038312},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1555118038329},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1555118038330},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1555118038330},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1555118038330},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1555118038329},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1555118038331},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1555118038330},{"_id":"themes/next/source/README.md","hash":"edf475100653154cb1e6371bfc80ff75a6dac24f","modified":1557493084977},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1555118038422},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1555118038422},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1555118038422},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038358},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/4.png","hash":"74034a1c777eaf0e985eba67f978b61afcdf074b","modified":1556782949609},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/1.png","hash":"714f18c793cc8979d09f11a8d1eadb0e6084c086","modified":1556781459801},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/3.jpg","hash":"1aa62e60532a1c8404ca0a6ea9409e19fbbc7479","modified":1556676068388},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/1.png","hash":"65c5707f2d23012069c2de614f6947c6be97cffb","modified":1555919649182},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/11.png","hash":"880051c9e4747572c2c5f6f5e9afbf0fde6b9fdb","modified":1555935532420},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/14.png","hash":"73b760da6d38a09353ebc1f38f8b795c66f4972a","modified":1555935651042},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/15.png","hash":"d18ed5d3648c291e49dbc0bc1bed40d2ce1869d4","modified":1555935667523},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/12.png","hash":"14431912fe38559fbbb225c3c2f1dd2e3f3ae3dc","modified":1555935550050},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/2.png","hash":"10e320411cb6ce4e701d19e17a4643ecc8a55d67","modified":1555919676630},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/10.png","hash":"3303e4be158ea69930af26f9b9dcbd275f8cbcca","modified":1555935489291},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/13.png","hash":"432e634272c28b650858d7df402bd8b4c6809999","modified":1555935576742},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/4.png","hash":"5bde7a7eafa70f18bf5a4d758223ab1b2cb33744","modified":1555919906101},{"_id":"source/_posts/github更新项目/1.png","hash":"8438130b2f3e11894b4eb2c660dfc3cc6fde0588","modified":1555118038289},{"_id":"source/_posts/github更新项目/10.png","hash":"a71c19e2ccc42a9cb5111f89a68ff66568e252a2","modified":1555118038289},{"_id":"source/_posts/github更新项目/11.png","hash":"58bd0437205b96ae49edf1f0a797609be4f210fe","modified":1555118038289},{"_id":"source/_posts/github更新项目/2.png","hash":"2a5455c520beaa7e3958de11d157f0838d04d065","modified":1555118038290},{"_id":"source/_posts/github更新项目/3.png","hash":"a861934f1955b9e2426b40caed9adf7f26c14102","modified":1555118038290},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/3.png","hash":"2a51ac03740a8535ee036a70abdf00443563ca3b","modified":1555919687579},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/6.png","hash":"ae2bc0adbd8e7719c22673aaa6e9683270984535","modified":1555919926865},{"_id":"source/_posts/github更新项目/4.png","hash":"a59cf1dedcb055676cffeca7ee4aa0e8a9d159c0","modified":1555118038291},{"_id":"source/_posts/github更新项目/6.png","hash":"c7188ea8d8ceb0bbfeebc02eda0edac1d0d41924","modified":1555118038292},{"_id":"source/_posts/github更新项目/5.png","hash":"1a7159ba66d6e820782cee2f96f7ab39c917c1cb","modified":1555118038291},{"_id":"source/_posts/github更新项目/7.png","hash":"e552db539e9f53916614153bdf45289d2c09f208","modified":1555118038292},{"_id":"source/_posts/github更新项目/8.png","hash":"352af871d4c98c6709ef1e85248216540474e10b","modified":1555118038292},{"_id":"source/_posts/github更新项目/9.png","hash":"7bb3bb24af7902db57360f82a81a41495ead7f00","modified":1555118038292},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/7.png","hash":"53f57f428da37879d1060487de0e785039065d93","modified":1555919950951},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/5.png","hash":"097989916463b095e995205c353e0ba14ee03c89","modified":1555919921136},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/9.png","hash":"24abb7b462ac45dfe6f9b7b187e7de68fc5ecc58","modified":1555920653628},{"_id":"source/_posts/中国福州鼓山半日游/1.jpg","hash":"154611c7ac7a1ec3bdbe4842d6cefb973ad8d849","modified":1556881368000},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/8.png","hash":"45dbea8ba36606b4df2e60b7090042b092075eb7","modified":1555920612542},{"_id":"source/_posts/中国福州鼓山半日游/11.jpg","hash":"a2db6754f1c2cc0df20786145a7adedb94ca360d","modified":1556881398000},{"_id":"source/_posts/中国福州鼓山半日游/2.jpg","hash":"54cc46f90f9086913fc4f8fc1f0c18f366a79f0c","modified":1556881368000},{"_id":"source/_posts/中国福州鼓山半日游/3.jpg","hash":"bebc51fbc35c309ae502499db07d3a67548c251f","modified":1556881368000},{"_id":"source/_posts/中国福州鼓山半日游/5.jpg","hash":"64e1fda895cb4a7e29d21fc1a80199d4878d2d1d","modified":1556881368000},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/11.png","hash":"8c441d1719179408ceefabe403d8e640d288d167","modified":1557493566859},{"_id":"source/_posts/中国福州鼓山半日游/8.jpg","hash":"59af45c2a157a388cc3b879b83b5c07abde0712e","modified":1556881398000},{"_id":"source/_posts/中国福州鼓山半日游/13.jpg","hash":"cc54124a2aaaca074b15d0f7054474a1e194c485","modified":1556881410432},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/7.png","hash":"a87ad4720b6eac58b126d9c71ff9ed928ecbd3b7","modified":1557490491502},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/5.png","hash":"b24d4424b52b70131283056e54b5e98e2296e45d","modified":1557489508102},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/9.png","hash":"1423c1b7fc40c02e78f62ad68dd46cbb5a530784","modified":1557491951538},{"_id":"source/_posts/关于php执行shell命令的一些体会/2.png","hash":"baf21b50d4ca12c15e6e5dfa2b0747f47b69da9b","modified":1555665001046},{"_id":"source/_posts/关于php执行shell命令的一些体会/3.png","hash":"d6f18912d673b58b48a6c169f58b8ec64569f548","modified":1555667197001},{"_id":"source/_posts/关于php执行shell命令的一些体会/4.png","hash":"697d6ac7eafdd0618381fe6a6740eefd8516c0fa","modified":1555667394268},{"_id":"source/_posts/关于php执行shell命令的一些体会/huanhu.gif","hash":"ee39c93e350369e20b07046556db99ee7f8f6585","modified":1555670282313},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/4.png","hash":"180597f0f91c456a8fe1f88aa20a3576df1829d9","modified":1557489380629},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/3.png","hash":"959635d6e99721bb3145155243c60d06ed52ecd1","modified":1557489273256},{"_id":"source/_posts/小飞机ss-ssr的部署方法/10.png","hash":"47f7e4ebd2b8c8f8fafdf648486adc12d4704575","modified":1556852664000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/1.png","hash":"7aa03b190497a5ee80e2a2ad2db846fd5f0d7d07","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/13.png","hash":"469a2135fbc2cf00dd39e1e0bab8a985cff9ee6b","modified":1556852664000},{"_id":"source/_posts/关于php执行shell命令的一些体会/1.png","hash":"6fe22fbe7289e528317bde46bc8e25dac17c157f","modified":1555669445633},{"_id":"source/_posts/小飞机ss-ssr的部署方法/12.png","hash":"2d765e58c9d068ad3fe31db99c3574403aa6bf17","modified":1556852664000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/3.png","hash":"308486a45422bca4e614271d304d3456866ebe7b","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/2.png","hash":"cad2d06d21d3f39516cbfb7ac4f6790c3c44ff7b","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/7.png","hash":"4c3ddea8e18976ceae761697cc0812e8a6c3d1d6","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/6.jpg","hash":"32d3882038cdd211eded39da5e9d3fd092a3cef1","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/9.png","hash":"c67c9ee59904f100dcb2fb8e6df7813089711b45","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/8.png","hash":"5eebe8d006637d78c3c5395de7119d7ea54f477d","modified":1556852662000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/5.jpg","hash":"dc30f97334ed6a6ef460e74e1cdebb2ae3e11eaa","modified":1556852662000},{"_id":"source/_posts/深海迷航联机教程/10.png","hash":"a278d7b72f30375b4b10453ac70d0288b4ab3673","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/1.png","hash":"4f09ef21af671365c1c578dc73930edf36f51938","modified":1556852072000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/4.png","hash":"811b81264acc64dae72163f59de5ae8e8f4b6503","modified":1556852662000},{"_id":"source/_posts/深海迷航联机教程/2.png","hash":"c986994e236344eba615bfef987e7a50640b9dec","modified":1556852072000},{"_id":"source/_posts/深海迷航联机教程/3.png","hash":"700e800b4db6acb61b25b0242163e172391065c2","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/4.png","hash":"66c22141bbdf6b393e149038b8045f1f5fe13375","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/5.png","hash":"ff0e26ead27baaddde7b1af76bdd63b9b6efacbc","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/11.png","hash":"c78915d92ff55173a94d383d45412b02e6fbafcb","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/7.png","hash":"19d0b54ab0adeab8548c2ef107e443741c4e6ac2","modified":1556852074000},{"_id":"source/_posts/深海迷航联机教程/9.png","hash":"8c492b56bbfec314cec006f125d7ce88b09a4672","modified":1556852074000},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/1.png","hash":"f4994982f74ccf8b0492772d814a10799c29ead4","modified":1555118038293},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/3.png","hash":"a3c4ea807783d06eedc7a0b3f1e8622a7c22f739","modified":1555118038294},{"_id":"source/_posts/深海迷航联机教程/8.png","hash":"cd64add53b8e753468137cb60f08eb02690382a8","modified":1556852074000},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/2.png","hash":"f5f657d93d781a1dbc15841a75e719f7414c53e7","modified":1555118038293},{"_id":"source/_posts/深海迷航联机教程/12.png","hash":"40ae7b9771626b657f0b95004a6302601873be56","modified":1556852074000},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/4.png","hash":"9e476794728db266911cfd918316650c4ceb0621","modified":1555118038294},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-1.png","hash":"b905fae480175c233d141a3e88a80dabf97c5c78","modified":1555118038294},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-2.png","hash":"18a7252b6f43180cfe322f12fa9381c12292eaba","modified":1555118038295},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-3.png","hash":"7f62032d26ab9b1c9f9e1302f47b6383f5d3aadb","modified":1555118038295},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-10.png","hash":"3064570cd8fc759c2b48f143aca2bbc05c52d8e4","modified":1555118038300},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-2.png","hash":"e20b6d0716863e4cead1b8f9cd0d4e9d54b183a2","modified":1555118038301},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-5.png","hash":"33236a6d3f77206fc80bfc3e1e21c32c0013f29b","modified":1555118038302},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-6.png","hash":"c1a09c041f921da3e9bbb1f5c43d8fc61d7e08f0","modified":1555118038302},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-4.png","hash":"30abacd214b0931d0a523e8b92e39ba4cc9f1ea1","modified":1555118038301},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-3.png","hash":"dfcca78155d4129a21e37c1a24ccd6e5735cf84c","modified":1555118038301},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-7.png","hash":"cc29d9ac6a4df4841960c18cc1cd187481224e91","modified":1555118038302},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png","hash":"0f11dd57b16e75b03f411c8cacc1c79466c1fcee","modified":1555818398085},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png","hash":"df50060799361748ba8ccb1f2fc98b768a8b3079","modified":1555925084421},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/next.png","hash":"39b805336353b53e7b6ef51ec3c73bcd116fe27c","modified":1555118038305},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/4.jpg","hash":"91fad7753b96076045fb4765f2d6519ec5395fc6","modified":1555818329606},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg","hash":"8503619234d907ce97285613b4c1c7002e750574","modified":1555818288955},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/huanhu.gif","hash":"ee39c93e350369e20b07046556db99ee7f8f6585","modified":1555819153759},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/nb.gif","hash":"5444608e6ee85e517d0c66a09d69cf2f6b0cde3d","modified":1555819128958},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1555118038314},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1555118038314},{"_id":"themes/next/layout/_macro/post.swig","hash":"9fc98ea6b187fa7fb88a7ed78e73e66401988f08","modified":1556077243949},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1555118038315},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1555118038313},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1555118038314},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/wen.gif","hash":"208494978ad100579ed03124c66d33443209f44c","modified":1555819222950},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1555118038315},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1555118038315},{"_id":"themes/next/layout/_partials/header.swig","hash":"c77960952a9a1b3dc697240b4c4c91668d003080","modified":1557731927929},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1555118038315},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1555118038317},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1555118038317},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1555118038319},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1555118038316},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1555118038319},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1555118038317},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1555118038321},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png","hash":"35285923fdfb79eaa3230b1173eaaec01d248e88","modified":1555818383948},{"_id":"themes/next/layout/_partials/footer.swig","hash":"f3fb3957d300f40afc3dc7f287533b5e54ee18ca","modified":1556025986185},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1555118038326},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1555118038326},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1555118038326},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1555118038327},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1555118038326},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1555118038326},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1555118038331},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1555118038331},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1555118038331},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1555118038332},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1555118038332},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1555118038332},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1555118038332},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1555118038327},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1555118038333},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1555118038333},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1555118038358},{"_id":"themes/next/source/images/2.png","hash":"2b4e4534e628d1c4b92c875ec82d2baaadd14515","modified":1555118038359},{"_id":"themes/next/source/images/15.png","hash":"92fddb630bafac17b5351b4262bc38ccabb01dd2","modified":1555118038358},{"_id":"themes/next/source/images/20.png","hash":"208179d7d6303d2d2c28b35a785f99ab265bf41b","modified":1555118038359},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1555118038359},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1555118038360},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1555118038360},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1555118038361},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1555118038361},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1555118038361},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1555118038362},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1555118038361},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1555118038362},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1555118038362},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555118038362},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1555118038362},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555118038363},{"_id":"themes/next/source/images/love.png","hash":"0ae7376929dfd12014b0c387ee9fdd9504bd804e","modified":1555118038363},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1555118038362},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1555118038363},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1555118038363},{"_id":"themes/next/source/images/yang-2.png","hash":"bf016db616015692488b34986b58ea37058ce892","modified":1555118038364},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1555118038363},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1555118038363},{"_id":"themes/next/source/images/sea.png","hash":"2796fbd2e61421ea0f2a8cf79a58a09fddc76ad1","modified":1555810759405},{"_id":"themes/next/source/images/yang-1.png","hash":"580e9e1a44de732f932f3c0fe003a8487c71cc89","modified":1555118038364},{"_id":"themes/next/source/uploads/12.jpg","hash":"36314614d20e1b3c282a6b61a6cb8e0ec984c2cf","modified":1555118038420},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/2.jpg","hash":"c32320d03612293f9807c164b5505a6479878050","modified":1556676060904},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/16.png","hash":"485641e1af9ab0471d62a1a65e2d8e07d4f78c7b","modified":1555935731037},{"_id":"source/_posts/中国福州鼓山半日游/12.jpg","hash":"745570dfaf9e977afef1e8e41331cb9991aa06cd","modified":1556881398000},{"_id":"source/_posts/中国福州鼓山半日游/10.jpg","hash":"526afc28da72948ba546dadbd655b5aa07207b33","modified":1556881398000},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/1.jpg","hash":"e955e4dc006ff7617c34312b8f4598996c8cd514","modified":1557488329958},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/6.png","hash":"9773b328d23aea6ca20245eff1ffba79c9dfc1d2","modified":1557490373427},{"_id":"source/_posts/深海迷航联机教程/13.png","hash":"fb87e69a74308ad9f50cefe5f21fa77d92317d80","modified":1556852074000},{"_id":"themes/next/source/uploads/default.css","hash":"b41d95120f9e64fd4530ae00ceaef09c7ea20818","modified":1555118038422},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-8.png","hash":"6ab288b6dc091387136f42f6714ab87c15fb9dc8","modified":1555118038303},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-6.png","hash":"f2ad2e49350cc063cedd255f47dbc8f2a8505d75","modified":1555118038298},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-9.png","hash":"54d34debff4565ec968e8c6ea4c01fca962241b4","modified":1555118038304},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/next-config.png","hash":"dbaa64a4bbe739e37b64dc89f5eb7264de28d03b","modified":1555118038305},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/hexo-config.png","hash":"81a99383c5c3843e9aa7f922a4dd4c9c7e45cbc0","modified":1555118038304},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png","hash":"a5029c7ec1ec12a635add25ce532959895f89c82","modified":1555819777487},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-5.png","hash":"e62fbcb2dcde3be118abfb315d38d1355863c08e","modified":1555118038298},{"_id":"themes/next/source/uploads/13.jpg","hash":"fb50d91e10afe940e80a945a28eebcd04fbd1ab2","modified":1555118038421},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038320},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038320},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038356},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038350},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038350},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038351},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555118038358},{"_id":"themes/next/source/images/alipay.jpg","hash":"a7d0d32ac4624f258808ce91e0ff50f2acc196f1","modified":1555118038360},{"_id":"themes/next/source/uploads/alipay.jpg","hash":"a7d0d32ac4624f258808ce91e0ff50f2acc196f1","modified":1555118038421},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1555118038318},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1555118038317},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1555118038317},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1555118038318},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1555118038318},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1555118038320},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1555118038321},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1555118038319},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1555118038322},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1555118038316},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1555118038318},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1555118038318},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1555118038322},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1555118038319},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1555118038322},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1555118038322},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1555118038324},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1555118038323},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1555118038324},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1555118038324},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1555118038324},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1555118038325},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1555118038324},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1555118038325},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1555118038325},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1555118038325},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1555118038328},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1555118038325},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1555118038325},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1555118038327},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1555118038328},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1555118038328},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1555118038356},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1555118038322},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1555118038350},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1555118038350},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1555118038351},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1555118038357},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1555118038356},{"_id":"themes/next/source/js/live2d/message.json","hash":"5887caf097eb7c835d406be83e0051749d852155","modified":1555118038366},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1555118038351},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1555118038378},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1555118038377},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1555118038378},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1555118038378},{"_id":"themes/next/source/js/src/mycoding.js","hash":"f5ca595c081798375f711bf64db162061f6c78c3","modified":1555118038381},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1555118038380},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1555118038380},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1555118038381},{"_id":"themes/next/source/js/src/md5.js","hash":"742ebc274ad08267f56e51e585c8720a32c9e3a5","modified":1555118038380},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1555118038381},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1555118038380},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1555118038386},{"_id":"themes/next/source/js/src/gitalk.css","hash":"2300f2218690a06dce07fe7eeb31bcbf014907f7","modified":1555118038379},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1555118038381},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1555118038395},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1555118038381},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1555118038382},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1555118038395},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1555118038396},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1555118038395},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1555118038397},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1555118038397},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1555118038388},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1555118038396},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1555118038395},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1555118038406},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1555118038407},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1555118038406},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1555118038397},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1555118038407},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1555118038407},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1555118038407},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1555118038409},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1555118038408},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1555118038409},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1555118038409},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1555118038409},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1555118038411},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1555118038411},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1555118038410},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1555118038411},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1555118038411},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1555118038412},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1555118038405},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1555118038412},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1555118038412},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1555118038411},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1555118038416},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1555118038417},{"_id":"source/_posts/中国福州鼓山半日游/4.jpg","hash":"d9ee363dd3898ca56e3311601958a070850fd52c","modified":1556881368000},{"_id":"source/_posts/中国福州鼓山半日游/9.jpg","hash":"4133ac8fa164660d831be1961de6080c2ed4975c","modified":1556881398000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1555118038419},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/10.png","hash":"a659c3667f74e17e9d8aa7b129a557b30b5098b6","modified":1557492046690},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1555118038389},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/2.png","hash":"92a5752e3338b8229b7c583fd00b9e7d06a4872b","modified":1557489058695},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/8.png","hash":"5b24a1f13c3188ce747c6a419af9a99673b2a425","modified":1557491622832},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1555118038357},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1555118038408},{"_id":"source/_posts/中国福州鼓山半日游/6.jpg","hash":"792e5e42ba2f34990937c230a1fb52c118b06601","modified":1556881368000},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-1.png","hash":"65b4e971bc5b16c5edd785bd1c9e53505e7fce70","modified":1555118038300},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1555118038419},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1555118038419},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1555118038327},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1555118038327},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1555118038334},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1555118038334},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1555118038347},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1555118038334},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1555118038334},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1555118038334},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1555118038343},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1555118038347},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1555118038338},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1555118038349},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1555118038347},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1555118038349},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1555118038349},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1555118038350},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1555118038352},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1555118038352},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1555118038353},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1555118038352},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1555118038351},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1555118038353},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1555118038353},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1555118038354},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1555118038354},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1555118038354},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1555118038354},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1555118038355},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1555118038354},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1555118038356},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1555118038355},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1555118038356},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1555118038355},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1555118038356},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1555118038352},{"_id":"themes/next/source/js/live2d/css/live2d.css","hash":"0426ba780f62069f6bae74f0a0f2fce5d596cfa7","modified":1555118038364},{"_id":"themes/next/source/js/src/gitalk.min.js","hash":"668a325f964a57aace92f46de8ee709768ccd251","modified":1555118038380},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1555118038381},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1555118038389},{"_id":"themes/next/source/js/live2d/js/message.js","hash":"253cfbfc4d499c57e863a86330c4064e9ff3a8bf","modified":1555118038365},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1555118038385},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1555118038386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1555118038389},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1555118038390},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1555118038390},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1555118038390},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1555118038391},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1555118038393},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1555118038394},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1555118038396},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1555118038396},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1555118038397},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1555118038398},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1555118038398},{"_id":"source/_posts/中国福州鼓山半日游/7.jpg","hash":"b75d06aad9244cb108298364c0bf5e5606e8b784","modified":1556881398000},{"_id":"source/_posts/小飞机ss-ssr的部署方法/11.png","hash":"40e228cbe8dc1ac6da8395c49f307489c7c0fa6c","modified":1556852664000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1555118038416},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1555118038384},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1555118038394},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1555118038406},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555118038405},{"_id":"source/_posts/深海迷航联机教程/6.png","hash":"d419c38d596373cb3299eb258c13bc6b5873c796","modified":1556852074000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1555118038416},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1555118038335},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1555118038336},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1555118038335},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1555118038335},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1555118038337},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1555118038337},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1555118038338},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1555118038336},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1555118038336},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1555118038335},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1555118038338},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1555118038336},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1555118038337},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1555118038339},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1555118038339},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1555118038337},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1555118038338},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1555118038338},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1555118038339},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1555118038341},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1555118038341},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1555118038342},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1555118038342},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1555118038340},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1555118038341},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1555118038342},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1555118038341},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1555118038342},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1555118038342},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1555118038343},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1555118038343},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1555118038343},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1555118038344},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1555118038343},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1555118038344},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1555118038343},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1555118038341},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1555118038345},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1555118038344},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1555118038344},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1555118038346},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1555118038345},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1555118038346},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1555118038346},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1555118038344},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1555118038345},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1555118038347},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1555118038347},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1555118038346},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1555118038345},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1555118038353},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1555118038355},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1555118038353},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1555118038346},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1555118038346},{"_id":"themes/next/source/js/live2d/model/tia/model.json","hash":"e2496fdee59b5f19cc1f0131c3b64a5bf6752905","modified":1555118038366},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1555118038383},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1555118038385},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1555118038383},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1555118038383},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1555118038384},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1555118038393},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1555118038391},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1555118038391},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1555118038393},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1555118038393},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555118038405},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1555118038393},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1555118038382},{"_id":"themes/next/source/js/live2d/js/live2d.js","hash":"86dcec89139bf72a8be0a17feaeca631721ffee7","modified":1555118038365},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1555118038399},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555118038401},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1555118038404},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1555118038418},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere3.mtn","hash":"421f00d9b263eb1ba5ae7744d3e36b874f3574cd","modified":1555118038368},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere2.mtn","hash":"b1b280ba08365d986a219f843601d478802c84af","modified":1555118038367},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath Dere1.mtn","hash":"11f7cbf6068937965aeda4a3ebbce3fba58a0495","modified":1555118038367},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath2.mtn","hash":"1c1b35419e237327e5d6f7187b7738d2b853fa92","modified":1555118038368},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath1.mtn","hash":"e9fe2ad68ba66ae2cbf8d2f4662bae9b3144b1cc","modified":1555118038368},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath4.mtn","hash":"c291bd06b3b072fe22a790d3412358ec003e7aba","modified":1555118038369},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath5.mtn","hash":"df45551eb085bd60ec0da2aa053bf50d362f8f98","modified":1555118038369},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath6.mtn","hash":"4394ca06d4791c76e4fa0c913e3bf0b08883c5e9","modified":1555118038369},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath3.mtn","hash":"848c2740a0b824a53c592c8052ce06453b1ca346","modified":1555118038368},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath8.mtn","hash":"d2b8adfbcaf107f617cd9401cf7cbac266b921c7","modified":1555118038370},{"_id":"themes/next/source/js/live2d/model/tia/motions/Fail.mtn","hash":"2282256817cf3df568dc99e0b26c78e02ed6aa69","modified":1555118038370},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sleeping.mtn","hash":"7cd4c2a961eab44f9cac8cf49de96850c5dbd20d","modified":1555118038370},{"_id":"themes/next/source/js/live2d/model/tia/motions/Success.mtn","hash":"80bbe4a27282dfe30edf0944ddba314f8d1600ac","modified":1555118038371},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei1.mtn","hash":"c48e9d14f9e040f93d0dbd2996be2986d319da70","modified":1555118038371},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei2.mtn","hash":"d684cbcc31e794dae0cecd6d940167ae372f946f","modified":1555118038371},{"_id":"themes/next/source/js/live2d/model/tia/motions/Sukebei3.mtn","hash":"deb7994cc055443e6287b0e983351efa46129326","modified":1555118038371},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath9.mtn","hash":"e18ba38b62b417dcb3e2df7be15ccb9c487788d6","modified":1555118038370},{"_id":"themes/next/source/js/live2d/model/tia/motions/Breath7.mtn","hash":"1cfccb24f92a073e9f644caaa66d4f642695d873","modified":1555118038369},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere2.mtn","hash":"a6e1c2437d0280b59d9f937fca7e5957a0fbb9d2","modified":1555118038372},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere4.mtn","hash":"e556a3618d394848488b056561d7219b8dd6b086","modified":1555118038372},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere5.mtn","hash":"2195fa2b5aabe06aa110730477e307cee88333ba","modified":1555118038372},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere3.mtn","hash":"e664a4d0dc4003bceb6c65e7df1ceecfb538da8c","modified":1555118038372},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere1.mtn","hash":"408960c3b98c4d43c30e33cd3d8c34a24b96fdc5","modified":1555118038371},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch1.mtn","hash":"9089e535269648f14d45edee01d108cd9c93fcf6","modified":1555118038373},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch Dere6.mtn","hash":"118498c1bad58056ac926d6533d6af68ca03f0f5","modified":1555118038372},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch3.mtn","hash":"ccf97daf9208ea25865fc409bfdc713be31e41f7","modified":1555118038373},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch5.mtn","hash":"19bd0390dc69b28437a908373895dccf2bb8d7eb","modified":1555118038374},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch2.mtn","hash":"2c07642b2feb01472ea5381d9256e003703b1c40","modified":1555118038373},{"_id":"themes/next/source/js/live2d/model/tia/motions/WakeUp.mtn","hash":"99508a5176a2d1864fa1088f46b36d39eb9cd76c","modified":1555118038374},{"_id":"themes/next/source/js/live2d/model/tia/model.moc","hash":"ec4becdfb64a722a878aa69ed8429043402f7259","modified":1555118038367},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch6.mtn","hash":"3bb0a1a1fe5dc13146fb4347f3b408f496280898","modified":1555118038374},{"_id":"themes/next/source/js/live2d/model/tia/motions/Touch4.mtn","hash":"21925fa7aac4003a10a7cd46006cfa9b13374ff9","modified":1555118038373},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png","hash":"27052e50d6f1df43e9d2b094c6dada407f371b5f","modified":1555819918220},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-4.png","hash":"c102f49ad48a4e79721936d51dbae1c30471c940","modified":1555118038297},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1555118038388},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1555118038415},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1555118038403},{"_id":"themes/next/source/js/live2d/model/tia/textures/default-costume.png","hash":"cdd979265d0b854dd8679119d73c2eea30e0e37d","modified":1555118038377}],"Category":[{"name":"Linux","_id":"cjvm1djg40004kstnhkstroog"},{"name":"github","_id":"cjvm1djgi000kkstns1uzviq4"},{"name":"travel","_id":"cjvm1djgk000rkstnkgr0vvuo"},{"name":"php","_id":"cjvm1djgl000vkstn8papf26n"},{"name":"game","_id":"cjvm1djgn000zkstn4n8quye1"},{"name":"hexo","_id":"cjvm1djgo0012kstn1b5r3fyx"},{"name":"nginx","_id":"cjvm1djgp0016kstn5gb6cx5w"},{"name":"javascript","_id":"cjvm1djiw0028kstncthyvh9c"}],"Data":[],"Page":[{"title":"categories","date":"2018-08-17T02:17:21.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-08-17 10:17:21\ntype: \"categories\"\n---\n","updated":"2019-04-13T01:13:58.307Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjvm1djg00001kstnseki37gg","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"\n<div id=\"mymessage\"></div>\n\n","source":"message/index.html","raw":"\n<div id=\"mymessage\"></div>\n\n","date":"2019-05-10T01:32:12.981Z","updated":"2019-05-10T01:32:12.981Z","path":"message/index.html","title":"","comments":1,"layout":"page","_id":"cjvm1djg20003kstn1nyjiel7","content":"\n<div id=\"mymessage\"></div>\n\n","site":{"data":{}},"excerpt":"","more":"\n<div id=\"mymessage\"></div>\n\n"},{"title":"about","date":"2018-08-17T02:19:48.000Z","_content":"## 分享决定技术的高低，学习拉开技术的差距\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-08-17 10:19:48\n---\n## 分享决定技术的高低，学习拉开技术的差距\n","updated":"2019-04-13T01:13:58.306Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjvm1djg70007kstng7f6yh8n","content":"<h2 id=\"分享决定技术的高低，学习拉开技术的差距\"><a href=\"#分享决定技术的高低，学习拉开技术的差距\" class=\"headerlink\" title=\"分享决定技术的高低，学习拉开技术的差距\"></a>分享决定技术的高低，学习拉开技术的差距</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"分享决定技术的高低，学习拉开技术的差距\"><a href=\"#分享决定技术的高低，学习拉开技术的差距\" class=\"headerlink\" title=\"分享决定技术的高低，学习拉开技术的差距\"></a>分享决定技术的高低，学习拉开技术的差距</h2>"}],"Post":[{"title":"Centos部署ngrok内网穿透服务器","date":"2019-05-02T06:59:52.000Z","toc":true,"_content":"# 一、前言\n> **ngrok** 是一个反向代理,通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。\n> 简单理解就是可以实现内网穿透到公网。\n\n# 二、准备\n> 1台云服务器或者vps+一个域名\n\n# 三、开搞\n## 1.安装go语言\n\n```shell\n//请下载合适自己的go语言包  我是centos 7 64位 所以选择以下包\nwget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz\ntar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz\nvim /etc/profile\n//添加以下内容：\nexport PATH=$PATH:/usr/local/go/bin\nsource /etc/profile\n//检测是否安装成功go\ngo version\n```\n## 2.下载ngrok源码并编译\n\n```shell\nmkdir /ngrok\ncd /ngrok\ngit clone https://github.com/inconshreveable/ngrok.git\n```\n## 3.域名解析\n\n>解析一个二级域名作为你的ngrok客户端访问的域名，记录类型为A记录，记录值ngrok，ip为你的服务器ip。\n\n![](Centos部署ngrok内网穿透服务器/1.png)\n\n## 4.给你的域名生成证书\n在ngrok根目录下执行以下命令生成证书\n\n```shell\ncd /ngrok\nopenssl genrsa -out rootCA.key 2048\nopenssl req -x509 -new -nodes -key rootCA.key -subj \"/CN=myngork.com\" -days 5000 -out rootCA.pem\nopenssl genrsa -out device.key 2048\nopenssl req -new -key device.key -subj \"/CN=myngork.com\" -out device.csr\nopenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000\n```\n\n然后执行覆盖命令\n\n```shell\nyes|cp rootCA.pem assets/client/tls/ngrokroot.crt\nyes|cp device.crt assets/server/tls/snakeoil.crt\nyes|cp device.key assets/server/tls/snakeoil.key\n```\n\n## 5.编译服务端ngrokd\n\n> #编译ngrokd（服务器端）\n> `make release-server`\n编译结束后会在ngrok/bin目录下生成一个ngrokd文件，这个文件就是服务器端启动的程序。\n\n## 6.编译客户端ngrok\n\n当服务器端ngrok启动后，在客户端，也就是window下的需要内网穿透场景的地方也需要一个启动程序来启动。\n我客户端电脑是window64位的，所以命令就是`GOOS=windows GOARCH=amd64 make release-client`\n编译成功后会在ngrok/bin/windows_amd64/目录下面有ngrok.exe,把这个exe文件下载到你的客户端电脑中。\n\n> #Linux 平台 32 位系统：`GOOS=linux GOARCH=386 make release-client`\n> #Linux 平台 64 位系统：`GOOS=linux GOARCH=amd64 make release-client`\n> #Windows 平台 32 位系统：`GOOS=windows GOARCH=386 make release-client`\n> #Windows 平台 64 位系统：`GOOS=windows GOARCH=amd64 make release-client`\n> #MAC 平台 32 位系统：`GOOS=darwin GOARCH=386 make release-client`\n> #MAC 平台 64 位系统：`GOOS=darwin GOARCH=amd64 make release-client`\n> #ARM 平台：`GOOS=linux GOARCH=arm make release-client`\n\n## 7.启动服务端ngrokd\n\n`/bin/ngrokd -tlsKey=\"assets/server/tls/snakeoil.key\" -tlsCrt=\"assets/server/tls/snakeoil.crt\" -domain=\"myngrok.com\" -httpAddr=\":9000\" -httpsAddr=\":9001\" -tunnelAddr=\":4443\"`\n\n> #参数说明：\n> #-domain 访问ngrok是所设置的服务地址生成证书时那个\n> #-httpAddr http协议端口 默认为80\n> #-httpsAddr https协议端口 默认为443 （可配置https证书）\n> #-tunnelAddr 通道端口 默认4443\n\n## 8.内网穿透实例\n\n### 1.在window里启动一个localhost:4000的hexo博客应用程序。\n### 2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容\n\n```yml\nserver_addr: \"ngrok.inner.ink:4443\"\ntrust_host_root_certs: false\n```\n\n![](Centos部署ngrok内网穿透服务器/4.png)\n\n### 3.启动内网穿透ngrok.exe\n\n打开cmd，然后在ngrok这个目录下输入`ngrok -config=ngrok.cfg -subdomain=shmh 4000`按回车运行\n\n![](Centos部署ngrok内网穿透服务器/3.jpg)\n\n### 4.在浏览器中访问shmh.ngrok.inner.ink:9000\n\n可以看到我的博客已经被访问了，而且ngrok客服端中也会有GET报文出现。\n\n![](Centos部署ngrok内网穿透服务器/2.jpg)\n\n### 5.配置deploy.bat文件方便启动\n\n```bat\n@echo OFF\ncolor 0a\nTitle ngrok启动\nMode con cols=109 lines=30\n:START\nECHO.\nEcho                  ==========================================================================\nECHO.\nEcho                                         ngrok启动\nECHO.\nEcho                                         作者: 知与南\nECHO.\nEcho                  ==========================================================================\nEcho.\necho.\necho.\n:NGROKD\nEcho           1.请输入自定义域名前缀，如“test”，即分配给你的穿透域名为：“test.ngrok.inner.ink”\nECHO.\nset /p clientid=   请输入：\necho.\nEcho           2.输入需要本地应用端口号，如“4000“\nECHO.\nset /p port=   请输入：\necho.\nngrok -config=ngrok.cfg -subdomain=%clientid% %port%\nPAUSE\ngoto NGROKD\n```\n\n### 6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/Centos部署ngrok内网穿透服务器.md","raw":"---\ntitle: Centos部署ngrok内网穿透服务器\ndate: 2019-05-02 14:59:52\ntags: [Centos,ngrok]\ntoc: true \ncategories: Linux\n---\n# 一、前言\n> **ngrok** 是一个反向代理,通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。\n> 简单理解就是可以实现内网穿透到公网。\n\n# 二、准备\n> 1台云服务器或者vps+一个域名\n\n# 三、开搞\n## 1.安装go语言\n\n```shell\n//请下载合适自己的go语言包  我是centos 7 64位 所以选择以下包\nwget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz\ntar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz\nvim /etc/profile\n//添加以下内容：\nexport PATH=$PATH:/usr/local/go/bin\nsource /etc/profile\n//检测是否安装成功go\ngo version\n```\n## 2.下载ngrok源码并编译\n\n```shell\nmkdir /ngrok\ncd /ngrok\ngit clone https://github.com/inconshreveable/ngrok.git\n```\n## 3.域名解析\n\n>解析一个二级域名作为你的ngrok客户端访问的域名，记录类型为A记录，记录值ngrok，ip为你的服务器ip。\n\n![](Centos部署ngrok内网穿透服务器/1.png)\n\n## 4.给你的域名生成证书\n在ngrok根目录下执行以下命令生成证书\n\n```shell\ncd /ngrok\nopenssl genrsa -out rootCA.key 2048\nopenssl req -x509 -new -nodes -key rootCA.key -subj \"/CN=myngork.com\" -days 5000 -out rootCA.pem\nopenssl genrsa -out device.key 2048\nopenssl req -new -key device.key -subj \"/CN=myngork.com\" -out device.csr\nopenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000\n```\n\n然后执行覆盖命令\n\n```shell\nyes|cp rootCA.pem assets/client/tls/ngrokroot.crt\nyes|cp device.crt assets/server/tls/snakeoil.crt\nyes|cp device.key assets/server/tls/snakeoil.key\n```\n\n## 5.编译服务端ngrokd\n\n> #编译ngrokd（服务器端）\n> `make release-server`\n编译结束后会在ngrok/bin目录下生成一个ngrokd文件，这个文件就是服务器端启动的程序。\n\n## 6.编译客户端ngrok\n\n当服务器端ngrok启动后，在客户端，也就是window下的需要内网穿透场景的地方也需要一个启动程序来启动。\n我客户端电脑是window64位的，所以命令就是`GOOS=windows GOARCH=amd64 make release-client`\n编译成功后会在ngrok/bin/windows_amd64/目录下面有ngrok.exe,把这个exe文件下载到你的客户端电脑中。\n\n> #Linux 平台 32 位系统：`GOOS=linux GOARCH=386 make release-client`\n> #Linux 平台 64 位系统：`GOOS=linux GOARCH=amd64 make release-client`\n> #Windows 平台 32 位系统：`GOOS=windows GOARCH=386 make release-client`\n> #Windows 平台 64 位系统：`GOOS=windows GOARCH=amd64 make release-client`\n> #MAC 平台 32 位系统：`GOOS=darwin GOARCH=386 make release-client`\n> #MAC 平台 64 位系统：`GOOS=darwin GOARCH=amd64 make release-client`\n> #ARM 平台：`GOOS=linux GOARCH=arm make release-client`\n\n## 7.启动服务端ngrokd\n\n`/bin/ngrokd -tlsKey=\"assets/server/tls/snakeoil.key\" -tlsCrt=\"assets/server/tls/snakeoil.crt\" -domain=\"myngrok.com\" -httpAddr=\":9000\" -httpsAddr=\":9001\" -tunnelAddr=\":4443\"`\n\n> #参数说明：\n> #-domain 访问ngrok是所设置的服务地址生成证书时那个\n> #-httpAddr http协议端口 默认为80\n> #-httpsAddr https协议端口 默认为443 （可配置https证书）\n> #-tunnelAddr 通道端口 默认4443\n\n## 8.内网穿透实例\n\n### 1.在window里启动一个localhost:4000的hexo博客应用程序。\n### 2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容\n\n```yml\nserver_addr: \"ngrok.inner.ink:4443\"\ntrust_host_root_certs: false\n```\n\n![](Centos部署ngrok内网穿透服务器/4.png)\n\n### 3.启动内网穿透ngrok.exe\n\n打开cmd，然后在ngrok这个目录下输入`ngrok -config=ngrok.cfg -subdomain=shmh 4000`按回车运行\n\n![](Centos部署ngrok内网穿透服务器/3.jpg)\n\n### 4.在浏览器中访问shmh.ngrok.inner.ink:9000\n\n可以看到我的博客已经被访问了，而且ngrok客服端中也会有GET报文出现。\n\n![](Centos部署ngrok内网穿透服务器/2.jpg)\n\n### 5.配置deploy.bat文件方便启动\n\n```bat\n@echo OFF\ncolor 0a\nTitle ngrok启动\nMode con cols=109 lines=30\n:START\nECHO.\nEcho                  ==========================================================================\nECHO.\nEcho                                         ngrok启动\nECHO.\nEcho                                         作者: 知与南\nECHO.\nEcho                  ==========================================================================\nEcho.\necho.\necho.\n:NGROKD\nEcho           1.请输入自定义域名前缀，如“test”，即分配给你的穿透域名为：“test.ngrok.inner.ink”\nECHO.\nset /p clientid=   请输入：\necho.\nEcho           2.输入需要本地应用端口号，如“4000“\nECHO.\nset /p port=   请输入：\necho.\nngrok -config=ngrok.cfg -subdomain=%clientid% %port%\nPAUSE\ngoto NGROKD\n```\n\n### 6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"Centos部署ngrok内网穿透服务器","published":1,"updated":"2019-05-02T07:52:45.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djfv0000kstnqcpktryv","content":"<h1 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h1><blockquote>\n<p><strong>ngrok</strong> 是一个反向代理,通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。<br>简单理解就是可以实现内网穿透到公网。</p>\n</blockquote>\n<h1 id=\"二、准备\"><a href=\"#二、准备\" class=\"headerlink\" title=\"二、准备\"></a>二、准备</h1><blockquote>\n<p>1台云服务器或者vps+一个域名</p>\n</blockquote>\n<h1 id=\"三、开搞\"><a href=\"#三、开搞\" class=\"headerlink\" title=\"三、开搞\"></a>三、开搞</h1><h2 id=\"1-安装go语言\"><a href=\"#1-安装go语言\" class=\"headerlink\" title=\"1.安装go语言\"></a>1.安装go语言</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//请下载合适自己的go语言包  我是centos 7 64位 所以选择以下包</span><br><span class=\"line\">wget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz</span><br><span class=\"line\">tar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">//添加以下内容：</span><br><span class=\"line\">export PATH=$PATH:/usr/local/go/bin</span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\">//检测是否安装成功go</span><br><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-下载ngrok源码并编译\"><a href=\"#2-下载ngrok源码并编译\" class=\"headerlink\" title=\"2.下载ngrok源码并编译\"></a>2.下载ngrok源码并编译</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /ngrok</span><br><span class=\"line\">cd /ngrok</span><br><span class=\"line\">git clone https://github.com/inconshreveable/ngrok.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-域名解析\"><a href=\"#3-域名解析\" class=\"headerlink\" title=\"3.域名解析\"></a>3.域名解析</h2><blockquote>\n<p>解析一个二级域名作为你的ngrok客户端访问的域名，记录类型为A记录，记录值ngrok，ip为你的服务器ip。</p>\n</blockquote>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/1.png\" alt=\"\"></p>\n<h2 id=\"4-给你的域名生成证书\"><a href=\"#4-给你的域名生成证书\" class=\"headerlink\" title=\"4.给你的域名生成证书\"></a>4.给你的域名生成证书</h2><p>在ngrok根目录下执行以下命令生成证书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /ngrok</span><br><span class=\"line\">openssl genrsa -out rootCA.key 2048</span><br><span class=\"line\">openssl req -x509 -new -nodes -key rootCA.key -subj \"/CN=myngork.com\" -days 5000 -out rootCA.pem</span><br><span class=\"line\">openssl genrsa -out device.key 2048</span><br><span class=\"line\">openssl req -new -key device.key -subj \"/CN=myngork.com\" -out device.csr</span><br><span class=\"line\">openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span><br></pre></td></tr></table></figure>\n<p>然后执行覆盖命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes|cp rootCA.pem assets/client/tls/ngrokroot.crt</span><br><span class=\"line\">yes|cp device.crt assets/server/tls/snakeoil.crt</span><br><span class=\"line\">yes|cp device.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-编译服务端ngrokd\"><a href=\"#5-编译服务端ngrokd\" class=\"headerlink\" title=\"5.编译服务端ngrokd\"></a>5.编译服务端ngrokd</h2><blockquote>\n<p>#编译ngrokd（服务器端）<br><code>make release-server</code><br>编译结束后会在ngrok/bin目录下生成一个ngrokd文件，这个文件就是服务器端启动的程序。</p>\n</blockquote>\n<h2 id=\"6-编译客户端ngrok\"><a href=\"#6-编译客户端ngrok\" class=\"headerlink\" title=\"6.编译客户端ngrok\"></a>6.编译客户端ngrok</h2><p>当服务器端ngrok启动后，在客户端，也就是window下的需要内网穿透场景的地方也需要一个启动程序来启动。<br>我客户端电脑是window64位的，所以命令就是<code>GOOS=windows GOARCH=amd64 make release-client</code><br>编译成功后会在ngrok/bin/windows_amd64/目录下面有ngrok.exe,把这个exe文件下载到你的客户端电脑中。</p>\n<blockquote>\n<p>#Linux 平台 32 位系统：<code>GOOS=linux GOARCH=386 make release-client</code></p>\n<p>#Linux 平台 64 位系统：<code>GOOS=linux GOARCH=amd64 make release-client</code></p>\n<p>#Windows 平台 32 位系统：<code>GOOS=windows GOARCH=386 make release-client</code></p>\n<p>#Windows 平台 64 位系统：<code>GOOS=windows GOARCH=amd64 make release-client</code></p>\n<p>#MAC 平台 32 位系统：<code>GOOS=darwin GOARCH=386 make release-client</code></p>\n<p>#MAC 平台 64 位系统：<code>GOOS=darwin GOARCH=amd64 make release-client</code></p>\n<p>#ARM 平台：<code>GOOS=linux GOARCH=arm make release-client</code></p>\n</blockquote>\n<h2 id=\"7-启动服务端ngrokd\"><a href=\"#7-启动服务端ngrokd\" class=\"headerlink\" title=\"7.启动服务端ngrokd\"></a>7.启动服务端ngrokd</h2><p><code>/bin/ngrokd -tlsKey=&quot;assets/server/tls/snakeoil.key&quot; -tlsCrt=&quot;assets/server/tls/snakeoil.crt&quot; -domain=&quot;myngrok.com&quot; -httpAddr=&quot;:9000&quot; -httpsAddr=&quot;:9001&quot; -tunnelAddr=&quot;:4443&quot;</code></p>\n<blockquote>\n<p>#参数说明：</p>\n<p>#-domain 访问ngrok是所设置的服务地址生成证书时那个</p>\n<p>#-httpAddr http协议端口 默认为80</p>\n<p>#-httpsAddr https协议端口 默认为443 （可配置https证书）</p>\n<p>#-tunnelAddr 通道端口 默认4443</p>\n</blockquote>\n<h2 id=\"8-内网穿透实例\"><a href=\"#8-内网穿透实例\" class=\"headerlink\" title=\"8.内网穿透实例\"></a>8.内网穿透实例</h2><h3 id=\"1-在window里启动一个localhost-4000的hexo博客应用程序。\"><a href=\"#1-在window里启动一个localhost-4000的hexo博客应用程序。\" class=\"headerlink\" title=\"1.在window里启动一个localhost:4000的hexo博客应用程序。\"></a>1.在window里启动一个localhost:4000的hexo博客应用程序。</h3><h3 id=\"2-从服务器上下载ngrok-exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok-cfg文件并写入以下内容\"><a href=\"#2-从服务器上下载ngrok-exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok-cfg文件并写入以下内容\" class=\"headerlink\" title=\"2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容\"></a>2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server_addr:</span> <span class=\"string\">\"ngrok.inner.ink:4443\"</span></span><br><span class=\"line\"><span class=\"attr\">trust_host_root_certs:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/4.png\" alt=\"\"></p>\n<h3 id=\"3-启动内网穿透ngrok-exe\"><a href=\"#3-启动内网穿透ngrok-exe\" class=\"headerlink\" title=\"3.启动内网穿透ngrok.exe\"></a>3.启动内网穿透ngrok.exe</h3><p>打开cmd，然后在ngrok这个目录下输入<code>ngrok -config=ngrok.cfg -subdomain=shmh 4000</code>按回车运行</p>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/3.jpg\" alt=\"\"></p>\n<h3 id=\"4-在浏览器中访问shmh-ngrok-inner-ink-9000\"><a href=\"#4-在浏览器中访问shmh-ngrok-inner-ink-9000\" class=\"headerlink\" title=\"4.在浏览器中访问shmh.ngrok.inner.ink:9000\"></a>4.在浏览器中访问shmh.ngrok.inner.ink:9000</h3><p>可以看到我的博客已经被访问了，而且ngrok客服端中也会有GET报文出现。</p>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/2.jpg\" alt=\"\"></p>\n<h3 id=\"5-配置deploy-bat文件方便启动\"><a href=\"#5-配置deploy-bat文件方便启动\" class=\"headerlink\" title=\"5.配置deploy.bat文件方便启动\"></a>5.配置deploy.bat文件方便启动</h3><figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> OFF</span><br><span class=\"line\"><span class=\"built_in\">color</span> <span class=\"number\">0</span>a</span><br><span class=\"line\"><span class=\"built_in\">Title</span> ngrok启动</span><br><span class=\"line\"><span class=\"built_in\">Mode</span> <span class=\"built_in\">con</span> cols=<span class=\"number\">109</span> lines=<span class=\"number\">30</span></span><br><span class=\"line\">:<span class=\"built_in\">START</span></span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                  ==========================================================================</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                                         ngrok启动</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                                         作者: 知与南</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                  ==========================================================================</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\">:NGROKD</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>           <span class=\"number\">1</span>.请输入自定义域名前缀，如“test”，即分配给你的穿透域名为：“test.ngrok.inner.ink”</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p clientid=   请输入：</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>           <span class=\"number\">2</span>.输入需要本地应用端口号，如“<span class=\"number\">4000</span>“</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p port=   请输入：</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\">ngrok -config=ngrok.cfg -subdomain=<span class=\"variable\">%clientid%</span> <span class=\"variable\">%port%</span></span><br><span class=\"line\"><span class=\"built_in\">PAUSE</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> NGROKD</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-这样每次启动程序，只需要双击deploy-bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\"><a href=\"#6-这样每次启动程序，只需要双击deploy-bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\" class=\"headerlink\" title=\"6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\"></a>6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。</h3><p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h1><blockquote>\n<p><strong>ngrok</strong> 是一个反向代理,通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。<br>简单理解就是可以实现内网穿透到公网。</p>\n</blockquote>\n<h1 id=\"二、准备\"><a href=\"#二、准备\" class=\"headerlink\" title=\"二、准备\"></a>二、准备</h1><blockquote>\n<p>1台云服务器或者vps+一个域名</p>\n</blockquote>\n<h1 id=\"三、开搞\"><a href=\"#三、开搞\" class=\"headerlink\" title=\"三、开搞\"></a>三、开搞</h1><h2 id=\"1-安装go语言\"><a href=\"#1-安装go语言\" class=\"headerlink\" title=\"1.安装go语言\"></a>1.安装go语言</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//请下载合适自己的go语言包  我是centos 7 64位 所以选择以下包</span><br><span class=\"line\">wget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz</span><br><span class=\"line\">tar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">//添加以下内容：</span><br><span class=\"line\">export PATH=$PATH:/usr/local/go/bin</span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\">//检测是否安装成功go</span><br><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-下载ngrok源码并编译\"><a href=\"#2-下载ngrok源码并编译\" class=\"headerlink\" title=\"2.下载ngrok源码并编译\"></a>2.下载ngrok源码并编译</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /ngrok</span><br><span class=\"line\">cd /ngrok</span><br><span class=\"line\">git clone https://github.com/inconshreveable/ngrok.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-域名解析\"><a href=\"#3-域名解析\" class=\"headerlink\" title=\"3.域名解析\"></a>3.域名解析</h2><blockquote>\n<p>解析一个二级域名作为你的ngrok客户端访问的域名，记录类型为A记录，记录值ngrok，ip为你的服务器ip。</p>\n</blockquote>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/1.png\" alt=\"\"></p>\n<h2 id=\"4-给你的域名生成证书\"><a href=\"#4-给你的域名生成证书\" class=\"headerlink\" title=\"4.给你的域名生成证书\"></a>4.给你的域名生成证书</h2><p>在ngrok根目录下执行以下命令生成证书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /ngrok</span><br><span class=\"line\">openssl genrsa -out rootCA.key 2048</span><br><span class=\"line\">openssl req -x509 -new -nodes -key rootCA.key -subj \"/CN=myngork.com\" -days 5000 -out rootCA.pem</span><br><span class=\"line\">openssl genrsa -out device.key 2048</span><br><span class=\"line\">openssl req -new -key device.key -subj \"/CN=myngork.com\" -out device.csr</span><br><span class=\"line\">openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span><br></pre></td></tr></table></figure>\n<p>然后执行覆盖命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes|cp rootCA.pem assets/client/tls/ngrokroot.crt</span><br><span class=\"line\">yes|cp device.crt assets/server/tls/snakeoil.crt</span><br><span class=\"line\">yes|cp device.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-编译服务端ngrokd\"><a href=\"#5-编译服务端ngrokd\" class=\"headerlink\" title=\"5.编译服务端ngrokd\"></a>5.编译服务端ngrokd</h2><blockquote>\n<p>#编译ngrokd（服务器端）<br><code>make release-server</code><br>编译结束后会在ngrok/bin目录下生成一个ngrokd文件，这个文件就是服务器端启动的程序。</p>\n</blockquote>\n<h2 id=\"6-编译客户端ngrok\"><a href=\"#6-编译客户端ngrok\" class=\"headerlink\" title=\"6.编译客户端ngrok\"></a>6.编译客户端ngrok</h2><p>当服务器端ngrok启动后，在客户端，也就是window下的需要内网穿透场景的地方也需要一个启动程序来启动。<br>我客户端电脑是window64位的，所以命令就是<code>GOOS=windows GOARCH=amd64 make release-client</code><br>编译成功后会在ngrok/bin/windows_amd64/目录下面有ngrok.exe,把这个exe文件下载到你的客户端电脑中。</p>\n<blockquote>\n<p>#Linux 平台 32 位系统：<code>GOOS=linux GOARCH=386 make release-client</code></p>\n<p>#Linux 平台 64 位系统：<code>GOOS=linux GOARCH=amd64 make release-client</code></p>\n<p>#Windows 平台 32 位系统：<code>GOOS=windows GOARCH=386 make release-client</code></p>\n<p>#Windows 平台 64 位系统：<code>GOOS=windows GOARCH=amd64 make release-client</code></p>\n<p>#MAC 平台 32 位系统：<code>GOOS=darwin GOARCH=386 make release-client</code></p>\n<p>#MAC 平台 64 位系统：<code>GOOS=darwin GOARCH=amd64 make release-client</code></p>\n<p>#ARM 平台：<code>GOOS=linux GOARCH=arm make release-client</code></p>\n</blockquote>\n<h2 id=\"7-启动服务端ngrokd\"><a href=\"#7-启动服务端ngrokd\" class=\"headerlink\" title=\"7.启动服务端ngrokd\"></a>7.启动服务端ngrokd</h2><p><code>/bin/ngrokd -tlsKey=&quot;assets/server/tls/snakeoil.key&quot; -tlsCrt=&quot;assets/server/tls/snakeoil.crt&quot; -domain=&quot;myngrok.com&quot; -httpAddr=&quot;:9000&quot; -httpsAddr=&quot;:9001&quot; -tunnelAddr=&quot;:4443&quot;</code></p>\n<blockquote>\n<p>#参数说明：</p>\n<p>#-domain 访问ngrok是所设置的服务地址生成证书时那个</p>\n<p>#-httpAddr http协议端口 默认为80</p>\n<p>#-httpsAddr https协议端口 默认为443 （可配置https证书）</p>\n<p>#-tunnelAddr 通道端口 默认4443</p>\n</blockquote>\n<h2 id=\"8-内网穿透实例\"><a href=\"#8-内网穿透实例\" class=\"headerlink\" title=\"8.内网穿透实例\"></a>8.内网穿透实例</h2><h3 id=\"1-在window里启动一个localhost-4000的hexo博客应用程序。\"><a href=\"#1-在window里启动一个localhost-4000的hexo博客应用程序。\" class=\"headerlink\" title=\"1.在window里启动一个localhost:4000的hexo博客应用程序。\"></a>1.在window里启动一个localhost:4000的hexo博客应用程序。</h3><h3 id=\"2-从服务器上下载ngrok-exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok-cfg文件并写入以下内容\"><a href=\"#2-从服务器上下载ngrok-exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok-cfg文件并写入以下内容\" class=\"headerlink\" title=\"2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容\"></a>2.从服务器上下载ngrok.exe客户端程序，然后创建一个ngrok文件夹，在里面新建一个ngrok.cfg文件并写入以下内容</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server_addr:</span> <span class=\"string\">\"ngrok.inner.ink:4443\"</span></span><br><span class=\"line\"><span class=\"attr\">trust_host_root_certs:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/4.png\" alt=\"\"></p>\n<h3 id=\"3-启动内网穿透ngrok-exe\"><a href=\"#3-启动内网穿透ngrok-exe\" class=\"headerlink\" title=\"3.启动内网穿透ngrok.exe\"></a>3.启动内网穿透ngrok.exe</h3><p>打开cmd，然后在ngrok这个目录下输入<code>ngrok -config=ngrok.cfg -subdomain=shmh 4000</code>按回车运行</p>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/3.jpg\" alt=\"\"></p>\n<h3 id=\"4-在浏览器中访问shmh-ngrok-inner-ink-9000\"><a href=\"#4-在浏览器中访问shmh-ngrok-inner-ink-9000\" class=\"headerlink\" title=\"4.在浏览器中访问shmh.ngrok.inner.ink:9000\"></a>4.在浏览器中访问shmh.ngrok.inner.ink:9000</h3><p>可以看到我的博客已经被访问了，而且ngrok客服端中也会有GET报文出现。</p>\n<p><img src=\"/2019/05/02/Centos部署ngrok内网穿透服务器/2.jpg\" alt=\"\"></p>\n<h3 id=\"5-配置deploy-bat文件方便启动\"><a href=\"#5-配置deploy-bat文件方便启动\" class=\"headerlink\" title=\"5.配置deploy.bat文件方便启动\"></a>5.配置deploy.bat文件方便启动</h3><figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> OFF</span><br><span class=\"line\"><span class=\"built_in\">color</span> <span class=\"number\">0</span>a</span><br><span class=\"line\"><span class=\"built_in\">Title</span> ngrok启动</span><br><span class=\"line\"><span class=\"built_in\">Mode</span> <span class=\"built_in\">con</span> cols=<span class=\"number\">109</span> lines=<span class=\"number\">30</span></span><br><span class=\"line\">:<span class=\"built_in\">START</span></span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                  ==========================================================================</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                                         ngrok启动</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                                         作者: 知与南</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>                  ==========================================================================</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\">:NGROKD</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>           <span class=\"number\">1</span>.请输入自定义域名前缀，如“test”，即分配给你的穿透域名为：“test.ngrok.inner.ink”</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p clientid=   请输入：</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\"><span class=\"built_in\">Echo</span>           <span class=\"number\">2</span>.输入需要本地应用端口号，如“<span class=\"number\">4000</span>“</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p port=   请输入：</span><br><span class=\"line\"><span class=\"built_in\">echo</span>.</span><br><span class=\"line\">ngrok -config=ngrok.cfg -subdomain=<span class=\"variable\">%clientid%</span> <span class=\"variable\">%port%</span></span><br><span class=\"line\"><span class=\"built_in\">PAUSE</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> NGROKD</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-这样每次启动程序，只需要双击deploy-bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\"><a href=\"#6-这样每次启动程序，只需要双击deploy-bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\" class=\"headerlink\" title=\"6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。\"></a>6.这样每次启动程序，只需要双击deploy.bat文件，根据提示输入自定义域名和本地端口按回车运行就可以了。</h3><p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"CentOs cp 去掉覆盖提醒","date":"2019-04-19T02:14:50.000Z","toc":true,"_content":"# CentOS中cp -f 复制强制覆盖的命令总是无效？\n***\n原因是Linux下默认cp命令是有别名的(alias cp='cp -i')，无法在复制时强制覆盖，即使你用 -f 参数也无法强制覆盖文件\n\n- 1.取消cp的alias(暂时生效)\n    `# unalias cp`\n    `# cp -rf /blog`\n- 2.加反斜杠 \\cp 执行cp命令时不走alias\n    `# \\cp -rf /blog`\n- 3.interesting的方法\n    `# yes|cp -rf /blog`\n\n这波操作，大家学会了没？学会的扣1，O(∩_∩)O哈哈~","source":"_posts/Centos-cp-去掉覆盖提醒.md","raw":"---\ntitle: CentOs cp 去掉覆盖提醒\ndate: 2019-04-19 10:14:50\ntags: [CentOs,Linux]\ntoc: true \ncategories: Linux\n---\n# CentOS中cp -f 复制强制覆盖的命令总是无效？\n***\n原因是Linux下默认cp命令是有别名的(alias cp='cp -i')，无法在复制时强制覆盖，即使你用 -f 参数也无法强制覆盖文件\n\n- 1.取消cp的alias(暂时生效)\n    `# unalias cp`\n    `# cp -rf /blog`\n- 2.加反斜杠 \\cp 执行cp命令时不走alias\n    `# \\cp -rf /blog`\n- 3.interesting的方法\n    `# yes|cp -rf /blog`\n\n这波操作，大家学会了没？学会的扣1，O(∩_∩)O哈哈~","slug":"Centos-cp-去掉覆盖提醒","published":1,"updated":"2019-04-19T10:21:00.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djg10002kstn4xqylzps","content":"<h1 id=\"CentOS中cp-f-复制强制覆盖的命令总是无效？\"><a href=\"#CentOS中cp-f-复制强制覆盖的命令总是无效？\" class=\"headerlink\" title=\"CentOS中cp -f 复制强制覆盖的命令总是无效？\"></a>CentOS中cp -f 复制强制覆盖的命令总是无效？</h1><hr>\n<p>原因是Linux下默认cp命令是有别名的(alias cp=’cp -i’)，无法在复制时强制覆盖，即使你用 -f 参数也无法强制覆盖文件</p>\n<ul>\n<li>1.取消cp的alias(暂时生效)<br>  <code># unalias cp</code><br>  <code># cp -rf /blog</code></li>\n<li>2.加反斜杠 \\cp 执行cp命令时不走alias<br>  <code># \\cp -rf /blog</code></li>\n<li>3.interesting的方法<br>  <code># yes|cp -rf /blog</code></li>\n</ul>\n<p>这波操作，大家学会了没？学会的扣1，O(∩_∩)O哈哈~</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CentOS中cp-f-复制强制覆盖的命令总是无效？\"><a href=\"#CentOS中cp-f-复制强制覆盖的命令总是无效？\" class=\"headerlink\" title=\"CentOS中cp -f 复制强制覆盖的命令总是无效？\"></a>CentOS中cp -f 复制强制覆盖的命令总是无效？</h1><hr>\n<p>原因是Linux下默认cp命令是有别名的(alias cp=’cp -i’)，无法在复制时强制覆盖，即使你用 -f 参数也无法强制覆盖文件</p>\n<ul>\n<li>1.取消cp的alias(暂时生效)<br>  <code># unalias cp</code><br>  <code># cp -rf /blog</code></li>\n<li>2.加反斜杠 \\cp 执行cp命令时不走alias<br>  <code># \\cp -rf /blog</code></li>\n<li>3.interesting的方法<br>  <code># yes|cp -rf /blog</code></li>\n</ul>\n<p>这波操作，大家学会了没？学会的扣1，O(∩_∩)O哈哈~</p>\n"},{"title":"docker+gogs+nginx配置Git服务自动部署Web应用","date":"2019-04-22T07:16:17.000Z","toc":true,"_content":"# 如何部署一个git服务而且又可以自动部署web应用呢？\n\n- 1.docker\n- 2.gogs\n- 3.nginx\n\n明白以上三者是什么，就可以开始搞事了！\n\n## 一、放通端口，阿里云腾讯云的需要到各自的官网开放\n1.查看firewall服务状态\n`systemctl status firewalld`\n2.查看firewall的状态\n`firewall-cmd --state`\n3.开启、重启、关闭firewall服务\n\n- 开启\n    `service firewalld start`\n- 重启\n    `service firewalld restart`\n- 关闭\n    `service firewalld stop`\n\n4.查看防火墙规则\n`firewall-cmd --list-all `\n5.查询、开放、关闭端口\n\n- 查询端口是否开放\n    `firewall-cmd --query-port=8080/tcp`\n- 开放80端口\n    `firewall-cmd --permanent --add-port=80/tcp`\n- 移除端口\n    `firewall-cmd --permanent --remove-port=8080/tcp`\n- 重启防火墙(修改配置后要重启防火墙)\n    `firewall-cmd --reload`\n- 参数解释\n    1、firwall-cmd：是Linux提供的操作firewall的一个工具；\n    2、--permanent：表示设置为持久；\n    3、--add-port：标识添加的端口；\n\n## 二、安装docker\n1、使用 sudo 或 root 权限登录 Centos。\n\n2、确保 yum 包更新到最新。\n\n`$ sudo yum update`\n3、执行 Docker 安装脚本。\n\n`$ curl -fsSL https://get.docker.com -o get-docker.sh`\n`$ sudo sh get-docker.sh`\n执行这个脚本会添加 docker.repo 源并安装 Docker。\n\n4、启动 Docker 进程。\n\n`sudo systemctl start docker`\n5、验证 docker 是否安装成功并在容器中执行一个测试的镜像。\n\n`$ sudo docker run hello-world`\n`docker ps`\n到此，Docker 在 CentOS 系统的安装完成。(这部分教程来自菜鸟教程，更多系统安装请前往[菜鸟教程](http://www.runoob.com/docker/docker-tutorial.html))\n\n## 三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx\n1、下载nan-deploy.sh\n`$ curl -O http://aboutme.ink/share/nan-deploy.sh`\n2、给脚本赋予权限\n`$ chmod +x nan-deploy.sh`\n3、运行脚本\n`$ ./nan-deploy.sh /home/docker/gogs/ 10080 10022 80`\n参数解释\n\n- /home/docker/gogs/  是参数一，代表了gogs和nginx安装的路径\n- 10080 是参数二，表示gogs应用访问端口，ip:10080去访问gogs首页\n- 10022 是参数三，表示gogs对外暴露的ssh端口，用于配置秘钥后下载和上传git代码\n- 80 是参数四，表示nginx的端口，ip直接可以访问nginx首页（80默认隐藏）\n\n以上四个参数自己调整也可以，新手建议默认按照我的配置就可以了\n以下是完整运行截图\n![](docker-gogs-nginx配置Git服务自动部署Web应用/1.png)\n4、打开浏览器访问ip:10080和ip:80\n![](docker-gogs-nginx配置Git服务自动部署Web应用/2.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/3.png)\n如果出现这些页面说明成功了！\n![](https://inner.ink/pqs/img/huaji.gif)\n5、配置gogs，打开页面ip:10080\n数据库选SQLite3，域名写自己的服务器ip，ssh端口填参数三10022，勾选内置服务器，http端口填写参数二10080，应用url填写ip:10080，然后点立即安装\n![](docker-gogs-nginx配置Git服务自动部署Web应用/4.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/5.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/6.png)\n点击立即安装，稍等一会会跳转登陆页面，如下\n![](docker-gogs-nginx配置Git服务自动部署Web应用/7.png)\n6、然后注册一个账号并且登陆会成为管理员（第一个账号）\n7、新建一个仓库，并且克隆到本地\n8、点击仓库设置配置git钩子或者web钩子\n![](docker-gogs-nginx配置Git服务自动部署Web应用/8.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/9.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/16.png)\n以上配置只需要修改UserName、repo和repoHttpUrl就行，然后点更新钩子设置\n9、克隆你的仓库到本地并且添加一个index.txt文件并写入内容\n![](docker-gogs-nginx配置Git服务自动部署Web应用/10.png)\n10、更新你的本地仓库后，推送到远程仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/11.png)\n如果会显示上图的信息，说明你的钩子设置成功，并且代码已经推送到了nginx服务器上\n11、打开你的浏览器测试一下\n![](docker-gogs-nginx配置Git服务自动部署Web应用/12.png)\n可以看到，已经可以访问了\n12、再次更新你的本地仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/13.png)\n13、推送到远程仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/14.png)\n14、再次打开浏览器访问\n![](docker-gogs-nginx配置Git服务自动部署Web应用/15.png)\n## 小南有话说\n1.其实我利用的原理就是git本身有钩子的一个功能特点，结合docker下的gogs和nginx开发了一套容易理解又非常高效的web应用自动部署平台\n2.gogs还支持webhooks的web钩子进行代码的部署，这边我就没有多做讲解了，如果你学会了git钩子部署，那么web钩子部署也不是难事\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/docker-gogs-nginx配置Git服务自动部署Web应用.md","raw":"---\ntitle: docker+gogs+nginx配置Git服务自动部署Web应用\ndate: 2019-04-22 15:16:17\ntags: [docker,nginx,gogs]\ntoc: true \ncategories: Linux\n---\n# 如何部署一个git服务而且又可以自动部署web应用呢？\n\n- 1.docker\n- 2.gogs\n- 3.nginx\n\n明白以上三者是什么，就可以开始搞事了！\n\n## 一、放通端口，阿里云腾讯云的需要到各自的官网开放\n1.查看firewall服务状态\n`systemctl status firewalld`\n2.查看firewall的状态\n`firewall-cmd --state`\n3.开启、重启、关闭firewall服务\n\n- 开启\n    `service firewalld start`\n- 重启\n    `service firewalld restart`\n- 关闭\n    `service firewalld stop`\n\n4.查看防火墙规则\n`firewall-cmd --list-all `\n5.查询、开放、关闭端口\n\n- 查询端口是否开放\n    `firewall-cmd --query-port=8080/tcp`\n- 开放80端口\n    `firewall-cmd --permanent --add-port=80/tcp`\n- 移除端口\n    `firewall-cmd --permanent --remove-port=8080/tcp`\n- 重启防火墙(修改配置后要重启防火墙)\n    `firewall-cmd --reload`\n- 参数解释\n    1、firwall-cmd：是Linux提供的操作firewall的一个工具；\n    2、--permanent：表示设置为持久；\n    3、--add-port：标识添加的端口；\n\n## 二、安装docker\n1、使用 sudo 或 root 权限登录 Centos。\n\n2、确保 yum 包更新到最新。\n\n`$ sudo yum update`\n3、执行 Docker 安装脚本。\n\n`$ curl -fsSL https://get.docker.com -o get-docker.sh`\n`$ sudo sh get-docker.sh`\n执行这个脚本会添加 docker.repo 源并安装 Docker。\n\n4、启动 Docker 进程。\n\n`sudo systemctl start docker`\n5、验证 docker 是否安装成功并在容器中执行一个测试的镜像。\n\n`$ sudo docker run hello-world`\n`docker ps`\n到此，Docker 在 CentOS 系统的安装完成。(这部分教程来自菜鸟教程，更多系统安装请前往[菜鸟教程](http://www.runoob.com/docker/docker-tutorial.html))\n\n## 三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx\n1、下载nan-deploy.sh\n`$ curl -O http://aboutme.ink/share/nan-deploy.sh`\n2、给脚本赋予权限\n`$ chmod +x nan-deploy.sh`\n3、运行脚本\n`$ ./nan-deploy.sh /home/docker/gogs/ 10080 10022 80`\n参数解释\n\n- /home/docker/gogs/  是参数一，代表了gogs和nginx安装的路径\n- 10080 是参数二，表示gogs应用访问端口，ip:10080去访问gogs首页\n- 10022 是参数三，表示gogs对外暴露的ssh端口，用于配置秘钥后下载和上传git代码\n- 80 是参数四，表示nginx的端口，ip直接可以访问nginx首页（80默认隐藏）\n\n以上四个参数自己调整也可以，新手建议默认按照我的配置就可以了\n以下是完整运行截图\n![](docker-gogs-nginx配置Git服务自动部署Web应用/1.png)\n4、打开浏览器访问ip:10080和ip:80\n![](docker-gogs-nginx配置Git服务自动部署Web应用/2.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/3.png)\n如果出现这些页面说明成功了！\n![](https://inner.ink/pqs/img/huaji.gif)\n5、配置gogs，打开页面ip:10080\n数据库选SQLite3，域名写自己的服务器ip，ssh端口填参数三10022，勾选内置服务器，http端口填写参数二10080，应用url填写ip:10080，然后点立即安装\n![](docker-gogs-nginx配置Git服务自动部署Web应用/4.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/5.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/6.png)\n点击立即安装，稍等一会会跳转登陆页面，如下\n![](docker-gogs-nginx配置Git服务自动部署Web应用/7.png)\n6、然后注册一个账号并且登陆会成为管理员（第一个账号）\n7、新建一个仓库，并且克隆到本地\n8、点击仓库设置配置git钩子或者web钩子\n![](docker-gogs-nginx配置Git服务自动部署Web应用/8.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/9.png)\n![](docker-gogs-nginx配置Git服务自动部署Web应用/16.png)\n以上配置只需要修改UserName、repo和repoHttpUrl就行，然后点更新钩子设置\n9、克隆你的仓库到本地并且添加一个index.txt文件并写入内容\n![](docker-gogs-nginx配置Git服务自动部署Web应用/10.png)\n10、更新你的本地仓库后，推送到远程仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/11.png)\n如果会显示上图的信息，说明你的钩子设置成功，并且代码已经推送到了nginx服务器上\n11、打开你的浏览器测试一下\n![](docker-gogs-nginx配置Git服务自动部署Web应用/12.png)\n可以看到，已经可以访问了\n12、再次更新你的本地仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/13.png)\n13、推送到远程仓库\n![](docker-gogs-nginx配置Git服务自动部署Web应用/14.png)\n14、再次打开浏览器访问\n![](docker-gogs-nginx配置Git服务自动部署Web应用/15.png)\n## 小南有话说\n1.其实我利用的原理就是git本身有钩子的一个功能特点，结合docker下的gogs和nginx开发了一套容易理解又非常高效的web应用自动部署平台\n2.gogs还支持webhooks的web钩子进行代码的部署，这边我就没有多做讲解了，如果你学会了git钩子部署，那么web钩子部署也不是难事\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"docker-gogs-nginx配置Git服务自动部署Web应用","published":1,"updated":"2019-05-02T07:48:16.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djg50006kstn0068jzcw","content":"<h1 id=\"如何部署一个git服务而且又可以自动部署web应用呢？\"><a href=\"#如何部署一个git服务而且又可以自动部署web应用呢？\" class=\"headerlink\" title=\"如何部署一个git服务而且又可以自动部署web应用呢？\"></a>如何部署一个git服务而且又可以自动部署web应用呢？</h1><ul>\n<li>1.docker</li>\n<li>2.gogs</li>\n<li>3.nginx</li>\n</ul>\n<p>明白以上三者是什么，就可以开始搞事了！</p>\n<h2 id=\"一、放通端口，阿里云腾讯云的需要到各自的官网开放\"><a href=\"#一、放通端口，阿里云腾讯云的需要到各自的官网开放\" class=\"headerlink\" title=\"一、放通端口，阿里云腾讯云的需要到各自的官网开放\"></a>一、放通端口，阿里云腾讯云的需要到各自的官网开放</h2><p>1.查看firewall服务状态<br><code>systemctl status firewalld</code><br>2.查看firewall的状态<br><code>firewall-cmd --state</code><br>3.开启、重启、关闭firewall服务</p>\n<ul>\n<li>开启<br>  <code>service firewalld start</code></li>\n<li>重启<br>  <code>service firewalld restart</code></li>\n<li>关闭<br>  <code>service firewalld stop</code></li>\n</ul>\n<p>4.查看防火墙规则<br><code>firewall-cmd --list-all</code><br>5.查询、开放、关闭端口</p>\n<ul>\n<li>查询端口是否开放<br>  <code>firewall-cmd --query-port=8080/tcp</code></li>\n<li>开放80端口<br>  <code>firewall-cmd --permanent --add-port=80/tcp</code></li>\n<li>移除端口<br>  <code>firewall-cmd --permanent --remove-port=8080/tcp</code></li>\n<li>重启防火墙(修改配置后要重启防火墙)<br>  <code>firewall-cmd --reload</code></li>\n<li>参数解释<br>  1、firwall-cmd：是Linux提供的操作firewall的一个工具；<br>  2、–permanent：表示设置为持久；<br>  3、–add-port：标识添加的端口；</li>\n</ul>\n<h2 id=\"二、安装docker\"><a href=\"#二、安装docker\" class=\"headerlink\" title=\"二、安装docker\"></a>二、安装docker</h2><p>1、使用 sudo 或 root 权限登录 Centos。</p>\n<p>2、确保 yum 包更新到最新。</p>\n<p><code>$ sudo yum update</code><br>3、执行 Docker 安装脚本。</p>\n<p><code>$ curl -fsSL https://get.docker.com -o get-docker.sh</code><br><code>$ sudo sh get-docker.sh</code><br>执行这个脚本会添加 docker.repo 源并安装 Docker。</p>\n<p>4、启动 Docker 进程。</p>\n<p><code>sudo systemctl start docker</code><br>5、验证 docker 是否安装成功并在容器中执行一个测试的镜像。</p>\n<p><code>$ sudo docker run hello-world</code><br><code>docker ps</code><br>到此，Docker 在 CentOS 系统的安装完成。(这部分教程来自菜鸟教程，更多系统安装请前往<a href=\"http://www.runoob.com/docker/docker-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a>)</p>\n<h2 id=\"三、用小南提供的自动脚本nan-deploy-sh去安装gogs和nginx\"><a href=\"#三、用小南提供的自动脚本nan-deploy-sh去安装gogs和nginx\" class=\"headerlink\" title=\"三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx\"></a>三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx</h2><p>1、下载nan-deploy.sh<br><code>$ curl -O http://aboutme.ink/share/nan-deploy.sh</code><br>2、给脚本赋予权限<br><code>$ chmod +x nan-deploy.sh</code><br>3、运行脚本<br><code>$ ./nan-deploy.sh /home/docker/gogs/ 10080 10022 80</code><br>参数解释</p>\n<ul>\n<li>/home/docker/gogs/  是参数一，代表了gogs和nginx安装的路径</li>\n<li>10080 是参数二，表示gogs应用访问端口，ip:10080去访问gogs首页</li>\n<li>10022 是参数三，表示gogs对外暴露的ssh端口，用于配置秘钥后下载和上传git代码</li>\n<li>80 是参数四，表示nginx的端口，ip直接可以访问nginx首页（80默认隐藏）</li>\n</ul>\n<p>以上四个参数自己调整也可以，新手建议默认按照我的配置就可以了<br>以下是完整运行截图<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/1.png\" alt=\"\"><br>4、打开浏览器访问ip:10080和ip:80<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/2.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/3.png\" alt=\"\"><br>如果出现这些页面说明成功了！<br><img src=\"https://inner.ink/pqs/img/huaji.gif\" alt=\"\"><br>5、配置gogs，打开页面ip:10080<br>数据库选SQLite3，域名写自己的服务器ip，ssh端口填参数三10022，勾选内置服务器，http端口填写参数二10080，应用url填写ip:10080，然后点立即安装<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/4.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/5.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/6.png\" alt=\"\"><br>点击立即安装，稍等一会会跳转登陆页面，如下<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/7.png\" alt=\"\"><br>6、然后注册一个账号并且登陆会成为管理员（第一个账号）<br>7、新建一个仓库，并且克隆到本地<br>8、点击仓库设置配置git钩子或者web钩子<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/8.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/9.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/16.png\" alt=\"\"><br>以上配置只需要修改UserName、repo和repoHttpUrl就行，然后点更新钩子设置<br>9、克隆你的仓库到本地并且添加一个index.txt文件并写入内容<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/10.png\" alt=\"\"><br>10、更新你的本地仓库后，推送到远程仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/11.png\" alt=\"\"><br>如果会显示上图的信息，说明你的钩子设置成功，并且代码已经推送到了nginx服务器上<br>11、打开你的浏览器测试一下<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/12.png\" alt=\"\"><br>可以看到，已经可以访问了<br>12、再次更新你的本地仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/13.png\" alt=\"\"><br>13、推送到远程仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/14.png\" alt=\"\"><br>14、再次打开浏览器访问<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/15.png\" alt=\"\"></p>\n<h2 id=\"小南有话说\"><a href=\"#小南有话说\" class=\"headerlink\" title=\"小南有话说\"></a>小南有话说</h2><p>1.其实我利用的原理就是git本身有钩子的一个功能特点，结合docker下的gogs和nginx开发了一套容易理解又非常高效的web应用自动部署平台<br>2.gogs还支持webhooks的web钩子进行代码的部署，这边我就没有多做讲解了，如果你学会了git钩子部署，那么web钩子部署也不是难事<br><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何部署一个git服务而且又可以自动部署web应用呢？\"><a href=\"#如何部署一个git服务而且又可以自动部署web应用呢？\" class=\"headerlink\" title=\"如何部署一个git服务而且又可以自动部署web应用呢？\"></a>如何部署一个git服务而且又可以自动部署web应用呢？</h1><ul>\n<li>1.docker</li>\n<li>2.gogs</li>\n<li>3.nginx</li>\n</ul>\n<p>明白以上三者是什么，就可以开始搞事了！</p>\n<h2 id=\"一、放通端口，阿里云腾讯云的需要到各自的官网开放\"><a href=\"#一、放通端口，阿里云腾讯云的需要到各自的官网开放\" class=\"headerlink\" title=\"一、放通端口，阿里云腾讯云的需要到各自的官网开放\"></a>一、放通端口，阿里云腾讯云的需要到各自的官网开放</h2><p>1.查看firewall服务状态<br><code>systemctl status firewalld</code><br>2.查看firewall的状态<br><code>firewall-cmd --state</code><br>3.开启、重启、关闭firewall服务</p>\n<ul>\n<li>开启<br>  <code>service firewalld start</code></li>\n<li>重启<br>  <code>service firewalld restart</code></li>\n<li>关闭<br>  <code>service firewalld stop</code></li>\n</ul>\n<p>4.查看防火墙规则<br><code>firewall-cmd --list-all</code><br>5.查询、开放、关闭端口</p>\n<ul>\n<li>查询端口是否开放<br>  <code>firewall-cmd --query-port=8080/tcp</code></li>\n<li>开放80端口<br>  <code>firewall-cmd --permanent --add-port=80/tcp</code></li>\n<li>移除端口<br>  <code>firewall-cmd --permanent --remove-port=8080/tcp</code></li>\n<li>重启防火墙(修改配置后要重启防火墙)<br>  <code>firewall-cmd --reload</code></li>\n<li>参数解释<br>  1、firwall-cmd：是Linux提供的操作firewall的一个工具；<br>  2、–permanent：表示设置为持久；<br>  3、–add-port：标识添加的端口；</li>\n</ul>\n<h2 id=\"二、安装docker\"><a href=\"#二、安装docker\" class=\"headerlink\" title=\"二、安装docker\"></a>二、安装docker</h2><p>1、使用 sudo 或 root 权限登录 Centos。</p>\n<p>2、确保 yum 包更新到最新。</p>\n<p><code>$ sudo yum update</code><br>3、执行 Docker 安装脚本。</p>\n<p><code>$ curl -fsSL https://get.docker.com -o get-docker.sh</code><br><code>$ sudo sh get-docker.sh</code><br>执行这个脚本会添加 docker.repo 源并安装 Docker。</p>\n<p>4、启动 Docker 进程。</p>\n<p><code>sudo systemctl start docker</code><br>5、验证 docker 是否安装成功并在容器中执行一个测试的镜像。</p>\n<p><code>$ sudo docker run hello-world</code><br><code>docker ps</code><br>到此，Docker 在 CentOS 系统的安装完成。(这部分教程来自菜鸟教程，更多系统安装请前往<a href=\"http://www.runoob.com/docker/docker-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a>)</p>\n<h2 id=\"三、用小南提供的自动脚本nan-deploy-sh去安装gogs和nginx\"><a href=\"#三、用小南提供的自动脚本nan-deploy-sh去安装gogs和nginx\" class=\"headerlink\" title=\"三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx\"></a>三、用小南提供的自动脚本nan-deploy.sh去安装gogs和nginx</h2><p>1、下载nan-deploy.sh<br><code>$ curl -O http://aboutme.ink/share/nan-deploy.sh</code><br>2、给脚本赋予权限<br><code>$ chmod +x nan-deploy.sh</code><br>3、运行脚本<br><code>$ ./nan-deploy.sh /home/docker/gogs/ 10080 10022 80</code><br>参数解释</p>\n<ul>\n<li>/home/docker/gogs/  是参数一，代表了gogs和nginx安装的路径</li>\n<li>10080 是参数二，表示gogs应用访问端口，ip:10080去访问gogs首页</li>\n<li>10022 是参数三，表示gogs对外暴露的ssh端口，用于配置秘钥后下载和上传git代码</li>\n<li>80 是参数四，表示nginx的端口，ip直接可以访问nginx首页（80默认隐藏）</li>\n</ul>\n<p>以上四个参数自己调整也可以，新手建议默认按照我的配置就可以了<br>以下是完整运行截图<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/1.png\" alt=\"\"><br>4、打开浏览器访问ip:10080和ip:80<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/2.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/3.png\" alt=\"\"><br>如果出现这些页面说明成功了！<br><img src=\"https://inner.ink/pqs/img/huaji.gif\" alt=\"\"><br>5、配置gogs，打开页面ip:10080<br>数据库选SQLite3，域名写自己的服务器ip，ssh端口填参数三10022，勾选内置服务器，http端口填写参数二10080，应用url填写ip:10080，然后点立即安装<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/4.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/5.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/6.png\" alt=\"\"><br>点击立即安装，稍等一会会跳转登陆页面，如下<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/7.png\" alt=\"\"><br>6、然后注册一个账号并且登陆会成为管理员（第一个账号）<br>7、新建一个仓库，并且克隆到本地<br>8、点击仓库设置配置git钩子或者web钩子<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/8.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/9.png\" alt=\"\"><br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/16.png\" alt=\"\"><br>以上配置只需要修改UserName、repo和repoHttpUrl就行，然后点更新钩子设置<br>9、克隆你的仓库到本地并且添加一个index.txt文件并写入内容<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/10.png\" alt=\"\"><br>10、更新你的本地仓库后，推送到远程仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/11.png\" alt=\"\"><br>如果会显示上图的信息，说明你的钩子设置成功，并且代码已经推送到了nginx服务器上<br>11、打开你的浏览器测试一下<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/12.png\" alt=\"\"><br>可以看到，已经可以访问了<br>12、再次更新你的本地仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/13.png\" alt=\"\"><br>13、推送到远程仓库<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/14.png\" alt=\"\"><br>14、再次打开浏览器访问<br><img src=\"/2019/04/22/docker-gogs-nginx配置Git服务自动部署Web应用/15.png\" alt=\"\"></p>\n<h2 id=\"小南有话说\"><a href=\"#小南有话说\" class=\"headerlink\" title=\"小南有话说\"></a>小南有话说</h2><p>1.其实我利用的原理就是git本身有钩子的一个功能特点，结合docker下的gogs和nginx开发了一套容易理解又非常高效的web应用自动部署平台<br>2.gogs还支持webhooks的web钩子进行代码的部署，这边我就没有多做讲解了，如果你学会了git钩子部署，那么web钩子部署也不是难事<br><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"github更新项目","date":"2018-08-17T08:19:41.000Z","toc":true,"_content":"# 更新github上的项目\n***\n## 一.克隆代码\n### 准备工作：1.[git客户端](https://git-scm.com/download/win) 2.[github账户](https://github.com)\t\t \n\n### 1.在本地建立一个文件夹，在此处点击右键，选择git bash here\n\n+ 进入此文件夹\n![](github更新项目/1.png)\n+ 右键选择git bash\n![](github更新项目/2.png)\n\n### 2.把自己的代码clone到本地，或者clone别人的到本地\n>`$ git clone https://github.com/xxx`\n![](github更新项目/3.png)\n\n### 3.clone完成后查看本地代码\n![](github更新项目/4.png)\n\n## 二.更新代码\n\n### 1.新增一个mytest的文件夹，里面有一个my.txt\n\n+ 新建文件夹 `$ mkdir mytest`\n![](github更新项目/5.png)\n+ 创建my.txt `$ touch my.txt`\n![](github更新项目/6.png)\n\n### 2.使用git status命令查看状态\n#### 查看当前git仓库状态，发现有新的文件\n>`git status`\n![](github更新项目/7.png)\n\n## 三.更新代码\n\n### 1.使用git add命令 \n>`$ git add *` --代表更新全部\n### 2.使用git commit -m \"更新说明\",commit只是提交到缓存区域\n>`$ git commit -m \"更新说明\"`\n![](github更新项目/8.png)\n### 3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码\n>`$ git pull`\n![](github更新项目/9.png)\n### 4.最后git push origin master,最后一步才是push到远程master分支上\n>`$git push origin master`\n![](github更新项目/10.png)\n### 5.打开github界面查看到更新状态\n![](github更新项目/11.png)","source":"_posts/github更新项目.md","raw":"---\ntitle: github更新项目\ndate: 2018-08-17 16:19:41\ntoc: true \ntags: github\ncategories: github\n---\n# 更新github上的项目\n***\n## 一.克隆代码\n### 准备工作：1.[git客户端](https://git-scm.com/download/win) 2.[github账户](https://github.com)\t\t \n\n### 1.在本地建立一个文件夹，在此处点击右键，选择git bash here\n\n+ 进入此文件夹\n![](github更新项目/1.png)\n+ 右键选择git bash\n![](github更新项目/2.png)\n\n### 2.把自己的代码clone到本地，或者clone别人的到本地\n>`$ git clone https://github.com/xxx`\n![](github更新项目/3.png)\n\n### 3.clone完成后查看本地代码\n![](github更新项目/4.png)\n\n## 二.更新代码\n\n### 1.新增一个mytest的文件夹，里面有一个my.txt\n\n+ 新建文件夹 `$ mkdir mytest`\n![](github更新项目/5.png)\n+ 创建my.txt `$ touch my.txt`\n![](github更新项目/6.png)\n\n### 2.使用git status命令查看状态\n#### 查看当前git仓库状态，发现有新的文件\n>`git status`\n![](github更新项目/7.png)\n\n## 三.更新代码\n\n### 1.使用git add命令 \n>`$ git add *` --代表更新全部\n### 2.使用git commit -m \"更新说明\",commit只是提交到缓存区域\n>`$ git commit -m \"更新说明\"`\n![](github更新项目/8.png)\n### 3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码\n>`$ git pull`\n![](github更新项目/9.png)\n### 4.最后git push origin master,最后一步才是push到远程master分支上\n>`$git push origin master`\n![](github更新项目/10.png)\n### 5.打开github界面查看到更新状态\n![](github更新项目/11.png)","slug":"github更新项目","published":1,"updated":"2019-04-13T01:13:58.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djg80008kstnwdw1mcev","content":"<h1 id=\"更新github上的项目\"><a href=\"#更新github上的项目\" class=\"headerlink\" title=\"更新github上的项目\"></a>更新github上的项目</h1><hr>\n<h2 id=\"一-克隆代码\"><a href=\"#一-克隆代码\" class=\"headerlink\" title=\"一.克隆代码\"></a>一.克隆代码</h2><h3 id=\"准备工作：1-git客户端-2-github账户\"><a href=\"#准备工作：1-git客户端-2-github账户\" class=\"headerlink\" title=\"准备工作：1.git客户端 2.github账户\"></a>准备工作：1.<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git客户端</a> 2.<a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">github账户</a></h3><h3 id=\"1-在本地建立一个文件夹，在此处点击右键，选择git-bash-here\"><a href=\"#1-在本地建立一个文件夹，在此处点击右键，选择git-bash-here\" class=\"headerlink\" title=\"1.在本地建立一个文件夹，在此处点击右键，选择git bash here\"></a>1.在本地建立一个文件夹，在此处点击右键，选择git bash here</h3><ul>\n<li>进入此文件夹<br><img src=\"/2018/08/17/github更新项目/1.png\" alt=\"\"></li>\n<li>右键选择git bash<br><img src=\"/2018/08/17/github更新项目/2.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"2-把自己的代码clone到本地，或者clone别人的到本地\"><a href=\"#2-把自己的代码clone到本地，或者clone别人的到本地\" class=\"headerlink\" title=\"2.把自己的代码clone到本地，或者clone别人的到本地\"></a>2.把自己的代码clone到本地，或者clone别人的到本地</h3><blockquote>\n<p><code>$ git clone https://github.com/xxx</code><br><img src=\"/2018/08/17/github更新项目/3.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-clone完成后查看本地代码\"><a href=\"#3-clone完成后查看本地代码\" class=\"headerlink\" title=\"3.clone完成后查看本地代码\"></a>3.clone完成后查看本地代码</h3><p><img src=\"/2018/08/17/github更新项目/4.png\" alt=\"\"></p>\n<h2 id=\"二-更新代码\"><a href=\"#二-更新代码\" class=\"headerlink\" title=\"二.更新代码\"></a>二.更新代码</h2><h3 id=\"1-新增一个mytest的文件夹，里面有一个my-txt\"><a href=\"#1-新增一个mytest的文件夹，里面有一个my-txt\" class=\"headerlink\" title=\"1.新增一个mytest的文件夹，里面有一个my.txt\"></a>1.新增一个mytest的文件夹，里面有一个my.txt</h3><ul>\n<li>新建文件夹 <code>$ mkdir mytest</code><br><img src=\"/2018/08/17/github更新项目/5.png\" alt=\"\"></li>\n<li>创建my.txt <code>$ touch my.txt</code><br><img src=\"/2018/08/17/github更新项目/6.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"2-使用git-status命令查看状态\"><a href=\"#2-使用git-status命令查看状态\" class=\"headerlink\" title=\"2.使用git status命令查看状态\"></a>2.使用git status命令查看状态</h3><h4 id=\"查看当前git仓库状态，发现有新的文件\"><a href=\"#查看当前git仓库状态，发现有新的文件\" class=\"headerlink\" title=\"查看当前git仓库状态，发现有新的文件\"></a>查看当前git仓库状态，发现有新的文件</h4><blockquote>\n<p><code>git status</code><br><img src=\"/2018/08/17/github更新项目/7.png\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"三-更新代码\"><a href=\"#三-更新代码\" class=\"headerlink\" title=\"三.更新代码\"></a>三.更新代码</h2><h3 id=\"1-使用git-add命令\"><a href=\"#1-使用git-add命令\" class=\"headerlink\" title=\"1.使用git add命令\"></a>1.使用git add命令</h3><blockquote>\n<p><code>$ git add *</code> –代表更新全部</p>\n</blockquote>\n<h3 id=\"2-使用git-commit-m-“更新说明”-commit只是提交到缓存区域\"><a href=\"#2-使用git-commit-m-“更新说明”-commit只是提交到缓存区域\" class=\"headerlink\" title=\"2.使用git commit -m “更新说明”,commit只是提交到缓存区域\"></a>2.使用git commit -m “更新说明”,commit只是提交到缓存区域</h3><blockquote>\n<p><code>$ git commit -m &quot;更新说明&quot;</code><br><img src=\"/2018/08/17/github更新项目/8.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-如果多人同时开发维护代码，得先git-pull-拉取当前分支最新代码\"><a href=\"#3-如果多人同时开发维护代码，得先git-pull-拉取当前分支最新代码\" class=\"headerlink\" title=\"3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码\"></a>3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码</h3><blockquote>\n<p><code>$ git pull</code><br><img src=\"/2018/08/17/github更新项目/9.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"4-最后git-push-origin-master-最后一步才是push到远程master分支上\"><a href=\"#4-最后git-push-origin-master-最后一步才是push到远程master分支上\" class=\"headerlink\" title=\"4.最后git push origin master,最后一步才是push到远程master分支上\"></a>4.最后git push origin master,最后一步才是push到远程master分支上</h3><blockquote>\n<p><code>$git push origin master</code><br><img src=\"/2018/08/17/github更新项目/10.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-打开github界面查看到更新状态\"><a href=\"#5-打开github界面查看到更新状态\" class=\"headerlink\" title=\"5.打开github界面查看到更新状态\"></a>5.打开github界面查看到更新状态</h3><p><img src=\"/2018/08/17/github更新项目/11.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"更新github上的项目\"><a href=\"#更新github上的项目\" class=\"headerlink\" title=\"更新github上的项目\"></a>更新github上的项目</h1><hr>\n<h2 id=\"一-克隆代码\"><a href=\"#一-克隆代码\" class=\"headerlink\" title=\"一.克隆代码\"></a>一.克隆代码</h2><h3 id=\"准备工作：1-git客户端-2-github账户\"><a href=\"#准备工作：1-git客户端-2-github账户\" class=\"headerlink\" title=\"准备工作：1.git客户端 2.github账户\"></a>准备工作：1.<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git客户端</a> 2.<a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">github账户</a></h3><h3 id=\"1-在本地建立一个文件夹，在此处点击右键，选择git-bash-here\"><a href=\"#1-在本地建立一个文件夹，在此处点击右键，选择git-bash-here\" class=\"headerlink\" title=\"1.在本地建立一个文件夹，在此处点击右键，选择git bash here\"></a>1.在本地建立一个文件夹，在此处点击右键，选择git bash here</h3><ul>\n<li>进入此文件夹<br><img src=\"/2018/08/17/github更新项目/1.png\" alt=\"\"></li>\n<li>右键选择git bash<br><img src=\"/2018/08/17/github更新项目/2.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"2-把自己的代码clone到本地，或者clone别人的到本地\"><a href=\"#2-把自己的代码clone到本地，或者clone别人的到本地\" class=\"headerlink\" title=\"2.把自己的代码clone到本地，或者clone别人的到本地\"></a>2.把自己的代码clone到本地，或者clone别人的到本地</h3><blockquote>\n<p><code>$ git clone https://github.com/xxx</code><br><img src=\"/2018/08/17/github更新项目/3.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-clone完成后查看本地代码\"><a href=\"#3-clone完成后查看本地代码\" class=\"headerlink\" title=\"3.clone完成后查看本地代码\"></a>3.clone完成后查看本地代码</h3><p><img src=\"/2018/08/17/github更新项目/4.png\" alt=\"\"></p>\n<h2 id=\"二-更新代码\"><a href=\"#二-更新代码\" class=\"headerlink\" title=\"二.更新代码\"></a>二.更新代码</h2><h3 id=\"1-新增一个mytest的文件夹，里面有一个my-txt\"><a href=\"#1-新增一个mytest的文件夹，里面有一个my-txt\" class=\"headerlink\" title=\"1.新增一个mytest的文件夹，里面有一个my.txt\"></a>1.新增一个mytest的文件夹，里面有一个my.txt</h3><ul>\n<li>新建文件夹 <code>$ mkdir mytest</code><br><img src=\"/2018/08/17/github更新项目/5.png\" alt=\"\"></li>\n<li>创建my.txt <code>$ touch my.txt</code><br><img src=\"/2018/08/17/github更新项目/6.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"2-使用git-status命令查看状态\"><a href=\"#2-使用git-status命令查看状态\" class=\"headerlink\" title=\"2.使用git status命令查看状态\"></a>2.使用git status命令查看状态</h3><h4 id=\"查看当前git仓库状态，发现有新的文件\"><a href=\"#查看当前git仓库状态，发现有新的文件\" class=\"headerlink\" title=\"查看当前git仓库状态，发现有新的文件\"></a>查看当前git仓库状态，发现有新的文件</h4><blockquote>\n<p><code>git status</code><br><img src=\"/2018/08/17/github更新项目/7.png\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"三-更新代码\"><a href=\"#三-更新代码\" class=\"headerlink\" title=\"三.更新代码\"></a>三.更新代码</h2><h3 id=\"1-使用git-add命令\"><a href=\"#1-使用git-add命令\" class=\"headerlink\" title=\"1.使用git add命令\"></a>1.使用git add命令</h3><blockquote>\n<p><code>$ git add *</code> –代表更新全部</p>\n</blockquote>\n<h3 id=\"2-使用git-commit-m-“更新说明”-commit只是提交到缓存区域\"><a href=\"#2-使用git-commit-m-“更新说明”-commit只是提交到缓存区域\" class=\"headerlink\" title=\"2.使用git commit -m “更新说明”,commit只是提交到缓存区域\"></a>2.使用git commit -m “更新说明”,commit只是提交到缓存区域</h3><blockquote>\n<p><code>$ git commit -m &quot;更新说明&quot;</code><br><img src=\"/2018/08/17/github更新项目/8.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-如果多人同时开发维护代码，得先git-pull-拉取当前分支最新代码\"><a href=\"#3-如果多人同时开发维护代码，得先git-pull-拉取当前分支最新代码\" class=\"headerlink\" title=\"3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码\"></a>3.如果多人同时开发维护代码，得先git pull,拉取当前分支最新代码</h3><blockquote>\n<p><code>$ git pull</code><br><img src=\"/2018/08/17/github更新项目/9.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"4-最后git-push-origin-master-最后一步才是push到远程master分支上\"><a href=\"#4-最后git-push-origin-master-最后一步才是push到远程master分支上\" class=\"headerlink\" title=\"4.最后git push origin master,最后一步才是push到远程master分支上\"></a>4.最后git push origin master,最后一步才是push到远程master分支上</h3><blockquote>\n<p><code>$git push origin master</code><br><img src=\"/2018/08/17/github更新项目/10.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-打开github界面查看到更新状态\"><a href=\"#5-打开github界面查看到更新状态\" class=\"headerlink\" title=\"5.打开github界面查看到更新状态\"></a>5.打开github界面查看到更新状态</h3><p><img src=\"/2018/08/17/github更新项目/11.png\" alt=\"\"></p>\n"},{"title":"中国福州鼓山半日游","date":"2019-05-03T09:58:34.000Z","toc":true,"_content":"# 前言\n\n这几天五一小长假，5.1和5.2天气都不太好，今天天气格外的给面子呀，正好赶上福州地铁2号线开通了。\n# 准备\n\n1.运动包+水壶+帽子\n2.拉上几个好基友\n3.带上你的手机\n# 路线图\n\n7:40分从宿舍出发，去学校北门公交车站坐48路公交==>8点5分到上街地铁口==>乘坐2号线==>9点04分出了鼓山地铁口==>9点10分鼓山山脚下==>上山\n估摸着10点出头一些到了鼓山十八景公园南大门吧，在南大门买了3张门票，成人票10元一人，我们带了学生证5元一张。\n\n![正面](中国福州鼓山半日游/1.jpg)\n![背面](中国福州鼓山半日游/2.jpg)\n\n门票背面画着十八景的路线图啊，对于路痴可能是一个很痛苦的事情。\n\n| 景点 | 名称 | 序号 |\n| ------ | ------ | ------ |\n| 1.达摩面壁 | 2.南极升天 | 3.仙猿守峡 |\n| 4.老鹤巢云 | 5.仙人巨迹 | 6.福寿泉图 |\n| 7.蟠桃满坞 | 8.玉笋成林 | 9.蚁艇渡湖 |\n| 10.鱼灯普照 | 11.狮子戏球 | 12.金蟾出洞 |\n| 13.伏虎驮经 | 14.神龙听法 | 15.铠甲卸岩 |\n| 16.慈航架壑 | 17.八仙岩洞 | 18.千佛梵宫 |\n\n本来想去看看**南极升天**的，没成想走错路了，来到了地图上右边这一小块的地方，那就将就着看吧。\n第一个看到的应该是**八仙岩洞**\n\n![吕仙岩](中国福州鼓山半日游/3.jpg)\n\n清风明月\n\n![清风明月](中国福州鼓山半日游/4.jpg)\n\n在旁边石凳上，拍了个合照\n\n![合照](中国福州鼓山半日游/5.jpg)\n\n往前走去，有个瑶池啥子的玩意来着\n然后在旁边石壁拍了几张\n\n![傻阳](中国福州鼓山半日游/6.jpg)\n![w](中国福州鼓山半日游/7.jpg)\n\n继续往前探去，来到一个路口，听游客说左边的路走不通了，我偏不信还，往左走去，没几步前面断了路，于是返回原路往右达摩洞走去。\n到了**达摩洞**，几块巨石巧夺天工，构成了一个不深的洞穴，左边巨石就是达摩面壁的墙壁，洞最里处供奉着几尊菩萨，过于神圣，不敢亵渎，又是乎没有photo\n过了达摩洞后又去了**登高台**瞭望整个福州，登高眺远，真有一种**会当凌绝顶，一览纵山小**的feel，海拔大概500多不到600的样子吧。\n路上有很多这样的石刻的地图\n\n![w](中国福州鼓山半日游/8.jpg)\n\n来到**佛窟**这边\n\n![佛窟](中国福州鼓山半日游/9.jpg)\n![佛窟](中国福州鼓山半日游/10.jpg)\n\n从佛窟出来又到了一个路口\n\n![路口](中国福州鼓山半日游/11.jpg)\n\n在路口上面有个**鼓山赋**啊，那文采，学富五车\n\n![鼓山赋](中国福州鼓山半日游/12.jpg)\n\n最后去瞟了一眼**一笔成虎**\n\n![一笔成虎](中国福州鼓山半日游/13.jpg)\n\n大概感觉这十八景徒有虚名，都是一些石壁刻字，强行凑了十八个景点出来，但是基于门票如此廉价，我也不好多说什么。\n看了一眼时间大概是11点10几分吧，然后往南大门出口走出去。\n又到了鼓山十八景公园这边，去了趟洗手间准备下山。\n在鼓山站坐地铁到了师大站，12点45分出的师大地铁口，然后去正荣半天妖吃了一顿好的，吃饱喝足已是下午2点。\n半天下来，步数一共17k多吧，我的老寒腿啊，下山的时候一直抖。。。。\n\n# 后话\n\n福州两大名山，鼓山旗山，都可以一去啊。抓住大学最后的尾巴，好好的浪一波。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/中国福州鼓山半日游.md","raw":"---\ntitle: 中国福州鼓山半日游\ndate: 2019-05-03 17:58:34\ntags: [travel,福州，鼓山]\ntoc: true \ncategories: travel\n---\n# 前言\n\n这几天五一小长假，5.1和5.2天气都不太好，今天天气格外的给面子呀，正好赶上福州地铁2号线开通了。\n# 准备\n\n1.运动包+水壶+帽子\n2.拉上几个好基友\n3.带上你的手机\n# 路线图\n\n7:40分从宿舍出发，去学校北门公交车站坐48路公交==>8点5分到上街地铁口==>乘坐2号线==>9点04分出了鼓山地铁口==>9点10分鼓山山脚下==>上山\n估摸着10点出头一些到了鼓山十八景公园南大门吧，在南大门买了3张门票，成人票10元一人，我们带了学生证5元一张。\n\n![正面](中国福州鼓山半日游/1.jpg)\n![背面](中国福州鼓山半日游/2.jpg)\n\n门票背面画着十八景的路线图啊，对于路痴可能是一个很痛苦的事情。\n\n| 景点 | 名称 | 序号 |\n| ------ | ------ | ------ |\n| 1.达摩面壁 | 2.南极升天 | 3.仙猿守峡 |\n| 4.老鹤巢云 | 5.仙人巨迹 | 6.福寿泉图 |\n| 7.蟠桃满坞 | 8.玉笋成林 | 9.蚁艇渡湖 |\n| 10.鱼灯普照 | 11.狮子戏球 | 12.金蟾出洞 |\n| 13.伏虎驮经 | 14.神龙听法 | 15.铠甲卸岩 |\n| 16.慈航架壑 | 17.八仙岩洞 | 18.千佛梵宫 |\n\n本来想去看看**南极升天**的，没成想走错路了，来到了地图上右边这一小块的地方，那就将就着看吧。\n第一个看到的应该是**八仙岩洞**\n\n![吕仙岩](中国福州鼓山半日游/3.jpg)\n\n清风明月\n\n![清风明月](中国福州鼓山半日游/4.jpg)\n\n在旁边石凳上，拍了个合照\n\n![合照](中国福州鼓山半日游/5.jpg)\n\n往前走去，有个瑶池啥子的玩意来着\n然后在旁边石壁拍了几张\n\n![傻阳](中国福州鼓山半日游/6.jpg)\n![w](中国福州鼓山半日游/7.jpg)\n\n继续往前探去，来到一个路口，听游客说左边的路走不通了，我偏不信还，往左走去，没几步前面断了路，于是返回原路往右达摩洞走去。\n到了**达摩洞**，几块巨石巧夺天工，构成了一个不深的洞穴，左边巨石就是达摩面壁的墙壁，洞最里处供奉着几尊菩萨，过于神圣，不敢亵渎，又是乎没有photo\n过了达摩洞后又去了**登高台**瞭望整个福州，登高眺远，真有一种**会当凌绝顶，一览纵山小**的feel，海拔大概500多不到600的样子吧。\n路上有很多这样的石刻的地图\n\n![w](中国福州鼓山半日游/8.jpg)\n\n来到**佛窟**这边\n\n![佛窟](中国福州鼓山半日游/9.jpg)\n![佛窟](中国福州鼓山半日游/10.jpg)\n\n从佛窟出来又到了一个路口\n\n![路口](中国福州鼓山半日游/11.jpg)\n\n在路口上面有个**鼓山赋**啊，那文采，学富五车\n\n![鼓山赋](中国福州鼓山半日游/12.jpg)\n\n最后去瞟了一眼**一笔成虎**\n\n![一笔成虎](中国福州鼓山半日游/13.jpg)\n\n大概感觉这十八景徒有虚名，都是一些石壁刻字，强行凑了十八个景点出来，但是基于门票如此廉价，我也不好多说什么。\n看了一眼时间大概是11点10几分吧，然后往南大门出口走出去。\n又到了鼓山十八景公园这边，去了趟洗手间准备下山。\n在鼓山站坐地铁到了师大站，12点45分出的师大地铁口，然后去正荣半天妖吃了一顿好的，吃饱喝足已是下午2点。\n半天下来，步数一共17k多吧，我的老寒腿啊，下山的时候一直抖。。。。\n\n# 后话\n\n福州两大名山，鼓山旗山，都可以一去啊。抓住大学最后的尾巴，好好的浪一波。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"中国福州鼓山半日游","published":1,"updated":"2019-05-03T11:19:53.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djg90009kstnpk4ozts2","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天五一小长假，5.1和5.2天气都不太好，今天天气格外的给面子呀，正好赶上福州地铁2号线开通了。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>1.运动包+水壶+帽子<br>2.拉上几个好基友<br>3.带上你的手机</p>\n<h1 id=\"路线图\"><a href=\"#路线图\" class=\"headerlink\" title=\"路线图\"></a>路线图</h1><p>7:40分从宿舍出发，去学校北门公交车站坐48路公交==&gt;8点5分到上街地铁口==&gt;乘坐2号线==&gt;9点04分出了鼓山地铁口==&gt;9点10分鼓山山脚下==&gt;上山<br>估摸着10点出头一些到了鼓山十八景公园南大门吧，在南大门买了3张门票，成人票10元一人，我们带了学生证5元一张。</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/1.jpg\" alt=\"正面\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/2.jpg\" alt=\"背面\"></p>\n<p>门票背面画着十八景的路线图啊，对于路痴可能是一个很痛苦的事情。</p>\n<table>\n<thead>\n<tr>\n<th>景点</th>\n<th>名称</th>\n<th>序号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1.达摩面壁</td>\n<td>2.南极升天</td>\n<td>3.仙猿守峡</td>\n</tr>\n<tr>\n<td>4.老鹤巢云</td>\n<td>5.仙人巨迹</td>\n<td>6.福寿泉图</td>\n</tr>\n<tr>\n<td>7.蟠桃满坞</td>\n<td>8.玉笋成林</td>\n<td>9.蚁艇渡湖</td>\n</tr>\n<tr>\n<td>10.鱼灯普照</td>\n<td>11.狮子戏球</td>\n<td>12.金蟾出洞</td>\n</tr>\n<tr>\n<td>13.伏虎驮经</td>\n<td>14.神龙听法</td>\n<td>15.铠甲卸岩</td>\n</tr>\n<tr>\n<td>16.慈航架壑</td>\n<td>17.八仙岩洞</td>\n<td>18.千佛梵宫</td>\n</tr>\n</tbody>\n</table>\n<p>本来想去看看<strong>南极升天</strong>的，没成想走错路了，来到了地图上右边这一小块的地方，那就将就着看吧。<br>第一个看到的应该是<strong>八仙岩洞</strong></p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/3.jpg\" alt=\"吕仙岩\"></p>\n<p>清风明月</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/4.jpg\" alt=\"清风明月\"></p>\n<p>在旁边石凳上，拍了个合照</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/5.jpg\" alt=\"合照\"></p>\n<p>往前走去，有个瑶池啥子的玩意来着<br>然后在旁边石壁拍了几张</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/6.jpg\" alt=\"傻阳\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/7.jpg\" alt=\"w\"></p>\n<p>继续往前探去，来到一个路口，听游客说左边的路走不通了，我偏不信还，往左走去，没几步前面断了路，于是返回原路往右达摩洞走去。<br>到了<strong>达摩洞</strong>，几块巨石巧夺天工，构成了一个不深的洞穴，左边巨石就是达摩面壁的墙壁，洞最里处供奉着几尊菩萨，过于神圣，不敢亵渎，又是乎没有photo<br>过了达摩洞后又去了<strong>登高台</strong>瞭望整个福州，登高眺远，真有一种<strong>会当凌绝顶，一览纵山小</strong>的feel，海拔大概500多不到600的样子吧。<br>路上有很多这样的石刻的地图</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/8.jpg\" alt=\"w\"></p>\n<p>来到<strong>佛窟</strong>这边</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/9.jpg\" alt=\"佛窟\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/10.jpg\" alt=\"佛窟\"></p>\n<p>从佛窟出来又到了一个路口</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/11.jpg\" alt=\"路口\"></p>\n<p>在路口上面有个<strong>鼓山赋</strong>啊，那文采，学富五车</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/12.jpg\" alt=\"鼓山赋\"></p>\n<p>最后去瞟了一眼<strong>一笔成虎</strong></p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/13.jpg\" alt=\"一笔成虎\"></p>\n<p>大概感觉这十八景徒有虚名，都是一些石壁刻字，强行凑了十八个景点出来，但是基于门票如此廉价，我也不好多说什么。<br>看了一眼时间大概是11点10几分吧，然后往南大门出口走出去。<br>又到了鼓山十八景公园这边，去了趟洗手间准备下山。<br>在鼓山站坐地铁到了师大站，12点45分出的师大地铁口，然后去正荣半天妖吃了一顿好的，吃饱喝足已是下午2点。<br>半天下来，步数一共17k多吧，我的老寒腿啊，下山的时候一直抖。。。。</p>\n<h1 id=\"后话\"><a href=\"#后话\" class=\"headerlink\" title=\"后话\"></a>后话</h1><p>福州两大名山，鼓山旗山，都可以一去啊。抓住大学最后的尾巴，好好的浪一波。</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天五一小长假，5.1和5.2天气都不太好，今天天气格外的给面子呀，正好赶上福州地铁2号线开通了。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>1.运动包+水壶+帽子<br>2.拉上几个好基友<br>3.带上你的手机</p>\n<h1 id=\"路线图\"><a href=\"#路线图\" class=\"headerlink\" title=\"路线图\"></a>路线图</h1><p>7:40分从宿舍出发，去学校北门公交车站坐48路公交==&gt;8点5分到上街地铁口==&gt;乘坐2号线==&gt;9点04分出了鼓山地铁口==&gt;9点10分鼓山山脚下==&gt;上山<br>估摸着10点出头一些到了鼓山十八景公园南大门吧，在南大门买了3张门票，成人票10元一人，我们带了学生证5元一张。</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/1.jpg\" alt=\"正面\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/2.jpg\" alt=\"背面\"></p>\n<p>门票背面画着十八景的路线图啊，对于路痴可能是一个很痛苦的事情。</p>\n<table>\n<thead>\n<tr>\n<th>景点</th>\n<th>名称</th>\n<th>序号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1.达摩面壁</td>\n<td>2.南极升天</td>\n<td>3.仙猿守峡</td>\n</tr>\n<tr>\n<td>4.老鹤巢云</td>\n<td>5.仙人巨迹</td>\n<td>6.福寿泉图</td>\n</tr>\n<tr>\n<td>7.蟠桃满坞</td>\n<td>8.玉笋成林</td>\n<td>9.蚁艇渡湖</td>\n</tr>\n<tr>\n<td>10.鱼灯普照</td>\n<td>11.狮子戏球</td>\n<td>12.金蟾出洞</td>\n</tr>\n<tr>\n<td>13.伏虎驮经</td>\n<td>14.神龙听法</td>\n<td>15.铠甲卸岩</td>\n</tr>\n<tr>\n<td>16.慈航架壑</td>\n<td>17.八仙岩洞</td>\n<td>18.千佛梵宫</td>\n</tr>\n</tbody>\n</table>\n<p>本来想去看看<strong>南极升天</strong>的，没成想走错路了，来到了地图上右边这一小块的地方，那就将就着看吧。<br>第一个看到的应该是<strong>八仙岩洞</strong></p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/3.jpg\" alt=\"吕仙岩\"></p>\n<p>清风明月</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/4.jpg\" alt=\"清风明月\"></p>\n<p>在旁边石凳上，拍了个合照</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/5.jpg\" alt=\"合照\"></p>\n<p>往前走去，有个瑶池啥子的玩意来着<br>然后在旁边石壁拍了几张</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/6.jpg\" alt=\"傻阳\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/7.jpg\" alt=\"w\"></p>\n<p>继续往前探去，来到一个路口，听游客说左边的路走不通了，我偏不信还，往左走去，没几步前面断了路，于是返回原路往右达摩洞走去。<br>到了<strong>达摩洞</strong>，几块巨石巧夺天工，构成了一个不深的洞穴，左边巨石就是达摩面壁的墙壁，洞最里处供奉着几尊菩萨，过于神圣，不敢亵渎，又是乎没有photo<br>过了达摩洞后又去了<strong>登高台</strong>瞭望整个福州，登高眺远，真有一种<strong>会当凌绝顶，一览纵山小</strong>的feel，海拔大概500多不到600的样子吧。<br>路上有很多这样的石刻的地图</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/8.jpg\" alt=\"w\"></p>\n<p>来到<strong>佛窟</strong>这边</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/9.jpg\" alt=\"佛窟\"><br><img src=\"/2019/05/03/中国福州鼓山半日游/10.jpg\" alt=\"佛窟\"></p>\n<p>从佛窟出来又到了一个路口</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/11.jpg\" alt=\"路口\"></p>\n<p>在路口上面有个<strong>鼓山赋</strong>啊，那文采，学富五车</p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/12.jpg\" alt=\"鼓山赋\"></p>\n<p>最后去瞟了一眼<strong>一笔成虎</strong></p>\n<p><img src=\"/2019/05/03/中国福州鼓山半日游/13.jpg\" alt=\"一笔成虎\"></p>\n<p>大概感觉这十八景徒有虚名，都是一些石壁刻字，强行凑了十八个景点出来，但是基于门票如此廉价，我也不好多说什么。<br>看了一眼时间大概是11点10几分吧，然后往南大门出口走出去。<br>又到了鼓山十八景公园这边，去了趟洗手间准备下山。<br>在鼓山站坐地铁到了师大站，12点45分出的师大地铁口，然后去正荣半天妖吃了一顿好的，吃饱喝足已是下午2点。<br>半天下来，步数一共17k多吧，我的老寒腿啊，下山的时候一直抖。。。。</p>\n<h1 id=\"后话\"><a href=\"#后话\" class=\"headerlink\" title=\"后话\"></a>后话</h1><p>福州两大名山，鼓山旗山，都可以一去啊。抓住大学最后的尾巴，好好的浪一波。</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"关于php执行shell命令的一些体会","date":"2019-04-19T10:21:29.000Z","toc":true,"_content":"# 关于php执行shell命令不得不提的一些东西\n## 前言\n这几天刚新买了一台阿里云香港的轻量应用服务器\n![](关于php执行shell命令的一些体会/1.png)\n价钱还不错，24CNY一月，30Mbs带宽，1024G流量每月。\n这是我的推荐码的入口[阿里云服务器入口](https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=hp167aqc)\n咳咳。。。拉回正题，我就开始配了一个lnmp，然后搭了一个docker下的gogs，然后搞了一个webhooks钩子。\n之前我那台华东2的服务器配的是lamp+docker+gogs，可以自动部署代码上线。所以按照之前的步骤，我一步一步的走啊走啊，然后神奇的发现我的php执行不了shell脚本。\n然后我各种度娘，google之类，发现说是php.ini里面有个字段叫做disable_funtions把php可以执行的shell函数都禁掉了，只要删掉想要的函数，就可以执行了。\n之后我打开我的php.ini，然后找啊找，仍是没找到，然后我把这个php.ini整个内容复制到我的win10的word里面，查找这个字段，还是找不到。然后又去百度，然后搜啊搜，找啊找。搞了5、6个小时吧。\n我都要崩溃了。后来把，我去群里问了个大神，大神一顿操作噼里啪啦，然后说让我把ip给他，他登入我服务器帮我找原因，3秒钟后，大神在php.ini的305行找到了这个字段。\n顿时，我无语了，我找了这么久都没找到。哎。。懵逼的一天。\n![](关于php执行shell命令的一些体会/2.png)\n然后我把shell_exec()从监狱里释放出来，然后在我的领地上，使用这个魔法，成功了，可以执行脚本了。\n然后就是要给www提升一下权限，让它可以代我去执行各种骚操作\n![](关于php执行shell命令的一些体会/3.png)\n具体整个自动部署的教程链接在这里-->[自动部署](http://gitku.cn:8083/)\n### 骚啊骚 搞了我一天\n![](关于php执行shell命令的一些体会/huanhu.gif)","source":"_posts/关于php执行shell命令的一些体会.md","raw":"---\ntitle: 关于php执行shell命令的一些体会\ndate: 2019-04-19 18:21:29\ntags: [CentOs,Linux,php,shell]\ntoc: true \ncategories: php\n---\n# 关于php执行shell命令不得不提的一些东西\n## 前言\n这几天刚新买了一台阿里云香港的轻量应用服务器\n![](关于php执行shell命令的一些体会/1.png)\n价钱还不错，24CNY一月，30Mbs带宽，1024G流量每月。\n这是我的推荐码的入口[阿里云服务器入口](https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=hp167aqc)\n咳咳。。。拉回正题，我就开始配了一个lnmp，然后搭了一个docker下的gogs，然后搞了一个webhooks钩子。\n之前我那台华东2的服务器配的是lamp+docker+gogs，可以自动部署代码上线。所以按照之前的步骤，我一步一步的走啊走啊，然后神奇的发现我的php执行不了shell脚本。\n然后我各种度娘，google之类，发现说是php.ini里面有个字段叫做disable_funtions把php可以执行的shell函数都禁掉了，只要删掉想要的函数，就可以执行了。\n之后我打开我的php.ini，然后找啊找，仍是没找到，然后我把这个php.ini整个内容复制到我的win10的word里面，查找这个字段，还是找不到。然后又去百度，然后搜啊搜，找啊找。搞了5、6个小时吧。\n我都要崩溃了。后来把，我去群里问了个大神，大神一顿操作噼里啪啦，然后说让我把ip给他，他登入我服务器帮我找原因，3秒钟后，大神在php.ini的305行找到了这个字段。\n顿时，我无语了，我找了这么久都没找到。哎。。懵逼的一天。\n![](关于php执行shell命令的一些体会/2.png)\n然后我把shell_exec()从监狱里释放出来，然后在我的领地上，使用这个魔法，成功了，可以执行脚本了。\n然后就是要给www提升一下权限，让它可以代我去执行各种骚操作\n![](关于php执行shell命令的一些体会/3.png)\n具体整个自动部署的教程链接在这里-->[自动部署](http://gitku.cn:8083/)\n### 骚啊骚 搞了我一天\n![](关于php执行shell命令的一些体会/huanhu.gif)","slug":"关于php执行shell命令的一些体会","published":1,"updated":"2019-04-19T10:58:49.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djgc000ckstnxpy8r9pe","content":"<h1 id=\"关于php执行shell命令不得不提的一些东西\"><a href=\"#关于php执行shell命令不得不提的一些东西\" class=\"headerlink\" title=\"关于php执行shell命令不得不提的一些东西\"></a>关于php执行shell命令不得不提的一些东西</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这几天刚新买了一台阿里云香港的轻量应用服务器<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/1.png\" alt=\"\"><br>价钱还不错，24CNY一月，30Mbs带宽，1024G流量每月。<br>这是我的推荐码的入口<a href=\"https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=hp167aqc\" target=\"_blank\" rel=\"noopener\">阿里云服务器入口</a><br>咳咳。。。拉回正题，我就开始配了一个lnmp，然后搭了一个docker下的gogs，然后搞了一个webhooks钩子。<br>之前我那台华东2的服务器配的是lamp+docker+gogs，可以自动部署代码上线。所以按照之前的步骤，我一步一步的走啊走啊，然后神奇的发现我的php执行不了shell脚本。<br>然后我各种度娘，google之类，发现说是php.ini里面有个字段叫做disable_funtions把php可以执行的shell函数都禁掉了，只要删掉想要的函数，就可以执行了。<br>之后我打开我的php.ini，然后找啊找，仍是没找到，然后我把这个php.ini整个内容复制到我的win10的word里面，查找这个字段，还是找不到。然后又去百度，然后搜啊搜，找啊找。搞了5、6个小时吧。<br>我都要崩溃了。后来把，我去群里问了个大神，大神一顿操作噼里啪啦，然后说让我把ip给他，他登入我服务器帮我找原因，3秒钟后，大神在php.ini的305行找到了这个字段。<br>顿时，我无语了，我找了这么久都没找到。哎。。懵逼的一天。<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/2.png\" alt=\"\"><br>然后我把shell_exec()从监狱里释放出来，然后在我的领地上，使用这个魔法，成功了，可以执行脚本了。<br>然后就是要给www提升一下权限，让它可以代我去执行各种骚操作<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/3.png\" alt=\"\"><br>具体整个自动部署的教程链接在这里–&gt;<a href=\"http://gitku.cn:8083/\" target=\"_blank\" rel=\"noopener\">自动部署</a></p>\n<h3 id=\"骚啊骚-搞了我一天\"><a href=\"#骚啊骚-搞了我一天\" class=\"headerlink\" title=\"骚啊骚 搞了我一天\"></a>骚啊骚 搞了我一天</h3><p><img src=\"/2019/04/19/关于php执行shell命令的一些体会/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于php执行shell命令不得不提的一些东西\"><a href=\"#关于php执行shell命令不得不提的一些东西\" class=\"headerlink\" title=\"关于php执行shell命令不得不提的一些东西\"></a>关于php执行shell命令不得不提的一些东西</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这几天刚新买了一台阿里云香港的轻量应用服务器<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/1.png\" alt=\"\"><br>价钱还不错，24CNY一月，30Mbs带宽，1024G流量每月。<br>这是我的推荐码的入口<a href=\"https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=hp167aqc\" target=\"_blank\" rel=\"noopener\">阿里云服务器入口</a><br>咳咳。。。拉回正题，我就开始配了一个lnmp，然后搭了一个docker下的gogs，然后搞了一个webhooks钩子。<br>之前我那台华东2的服务器配的是lamp+docker+gogs，可以自动部署代码上线。所以按照之前的步骤，我一步一步的走啊走啊，然后神奇的发现我的php执行不了shell脚本。<br>然后我各种度娘，google之类，发现说是php.ini里面有个字段叫做disable_funtions把php可以执行的shell函数都禁掉了，只要删掉想要的函数，就可以执行了。<br>之后我打开我的php.ini，然后找啊找，仍是没找到，然后我把这个php.ini整个内容复制到我的win10的word里面，查找这个字段，还是找不到。然后又去百度，然后搜啊搜，找啊找。搞了5、6个小时吧。<br>我都要崩溃了。后来把，我去群里问了个大神，大神一顿操作噼里啪啦，然后说让我把ip给他，他登入我服务器帮我找原因，3秒钟后，大神在php.ini的305行找到了这个字段。<br>顿时，我无语了，我找了这么久都没找到。哎。。懵逼的一天。<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/2.png\" alt=\"\"><br>然后我把shell_exec()从监狱里释放出来，然后在我的领地上，使用这个魔法，成功了，可以执行脚本了。<br>然后就是要给www提升一下权限，让它可以代我去执行各种骚操作<br><img src=\"/2019/04/19/关于php执行shell命令的一些体会/3.png\" alt=\"\"><br>具体整个自动部署的教程链接在这里–&gt;<a href=\"http://gitku.cn:8083/\" target=\"_blank\" rel=\"noopener\">自动部署</a></p>\n<h3 id=\"骚啊骚-搞了我一天\"><a href=\"#骚啊骚-搞了我一天\" class=\"headerlink\" title=\"骚啊骚 搞了我一天\"></a>骚啊骚 搞了我一天</h3><p><img src=\"/2019/04/19/关于php执行shell命令的一些体会/huanhu.gif\" alt=\"\"></p>\n"},{"title":"小飞机ss/ssr的部署方法","date":"2019-05-02T07:51:33.000Z","toc":true,"_content":"# 一、什么是小飞机呀？\n> 小飞机就是可以飞出去的东西啦（fq）懂了吧。\n\n# 二、如何部署\n\n## 1.首先你需要一台云服务器或者一台vps\n\n## 2.开始安装\n\n```shell\nyum update -y\nyum install unzip zip -y\nyum install wget -y\nwget -N –no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip\nunzip ssr.zip\ncd SSR*\nbash install.sh\n```\n\n## 3.开启服务并设置用户端口\n\n```shell\ncd /usr/local/SSR*\n./serve.sh ==> 开启服务\n./user.sh ==> 设置用户\n```\n\n## 4.复制添加用户成功后的一段ssr链接\n\n我框起来那部分复制一下，然后保存起来\n\n![](小飞机ss-ssr的部署方法/1.png)\n\n## 5.客户端连接小飞机\n\n### 1.Android\n\n首先在手机里复制一下刚刚那个ssr链接\n\n然后打开**shadowsocks R**软件后，点击标题那里，下图黄色框框\n\n![](小飞机ss-ssr的部署方法/2.png)\n\n然后点击右下角的+号，接着点击import from Clipboard\n\n![](小飞机ss-ssr的部署方法/3.png)\n\n会弹出一个框，点确认ok\n\n![](小飞机ss-ssr的部署方法/4.png)\n\n然后选中这个节点后会回到主界面，点击右上角的小飞机，即刻飞行！\n\ngoogle页面\n\n![](小飞机ss-ssr的部署方法/5.jpg)\n\nYutobe页面\n\n![](小飞机ss-ssr的部署方法/6.jpg)\n\n### 2.Window\n\n双击打开shadowsock-R软件后，在状态栏中找到小飞机图标。\n然后右键选择从剪贴板导入，然后确定即可\n\n![](小飞机ss-ssr的部署方法/9.png)\n![](小飞机ss-ssr的部署方法/7.png)\n![](小飞机ss-ssr的部署方法/8.png)\n\n系统代理模式选择PAC\n\n![](小飞机ss-ssr的部署方法/12.png)\n\n代理规则绕过局域网和大陆\n\n![](小飞机ss-ssr的部署方法/13.png)\n\ngoogle页面\n\n![](小飞机ss-ssr的部署方法/10.png)\n\ntwitch页面\n\n![](小飞机ss-ssr的部署方法/11.png)\n\n### 3.iphone和mac也有各自的客户端\n\n后续整理\n\n### 4.各类客户端下载地址\n\n后续整理，如有需要先email我\n\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/小飞机ss-ssr的部署方法.md","raw":"---\ntitle: 小飞机ss/ssr的部署方法\ndate: 2019-05-02 15:51:33\ntags: [ssr,ss,小飞机]\ntoc: true \ncategories: Linux\n---\n# 一、什么是小飞机呀？\n> 小飞机就是可以飞出去的东西啦（fq）懂了吧。\n\n# 二、如何部署\n\n## 1.首先你需要一台云服务器或者一台vps\n\n## 2.开始安装\n\n```shell\nyum update -y\nyum install unzip zip -y\nyum install wget -y\nwget -N –no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip\nunzip ssr.zip\ncd SSR*\nbash install.sh\n```\n\n## 3.开启服务并设置用户端口\n\n```shell\ncd /usr/local/SSR*\n./serve.sh ==> 开启服务\n./user.sh ==> 设置用户\n```\n\n## 4.复制添加用户成功后的一段ssr链接\n\n我框起来那部分复制一下，然后保存起来\n\n![](小飞机ss-ssr的部署方法/1.png)\n\n## 5.客户端连接小飞机\n\n### 1.Android\n\n首先在手机里复制一下刚刚那个ssr链接\n\n然后打开**shadowsocks R**软件后，点击标题那里，下图黄色框框\n\n![](小飞机ss-ssr的部署方法/2.png)\n\n然后点击右下角的+号，接着点击import from Clipboard\n\n![](小飞机ss-ssr的部署方法/3.png)\n\n会弹出一个框，点确认ok\n\n![](小飞机ss-ssr的部署方法/4.png)\n\n然后选中这个节点后会回到主界面，点击右上角的小飞机，即刻飞行！\n\ngoogle页面\n\n![](小飞机ss-ssr的部署方法/5.jpg)\n\nYutobe页面\n\n![](小飞机ss-ssr的部署方法/6.jpg)\n\n### 2.Window\n\n双击打开shadowsock-R软件后，在状态栏中找到小飞机图标。\n然后右键选择从剪贴板导入，然后确定即可\n\n![](小飞机ss-ssr的部署方法/9.png)\n![](小飞机ss-ssr的部署方法/7.png)\n![](小飞机ss-ssr的部署方法/8.png)\n\n系统代理模式选择PAC\n\n![](小飞机ss-ssr的部署方法/12.png)\n\n代理规则绕过局域网和大陆\n\n![](小飞机ss-ssr的部署方法/13.png)\n\ngoogle页面\n\n![](小飞机ss-ssr的部署方法/10.png)\n\ntwitch页面\n\n![](小飞机ss-ssr的部署方法/11.png)\n\n### 3.iphone和mac也有各自的客户端\n\n后续整理\n\n### 4.各类客户端下载地址\n\n后续整理，如有需要先email我\n\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"小飞机ss-ssr的部署方法","published":1,"updated":"2019-05-03T11:20:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djgd000dkstnv4atcybj","content":"<h1 id=\"一、什么是小飞机呀？\"><a href=\"#一、什么是小飞机呀？\" class=\"headerlink\" title=\"一、什么是小飞机呀？\"></a>一、什么是小飞机呀？</h1><blockquote>\n<p>小飞机就是可以飞出去的东西啦（fq）懂了吧。</p>\n</blockquote>\n<h1 id=\"二、如何部署\"><a href=\"#二、如何部署\" class=\"headerlink\" title=\"二、如何部署\"></a>二、如何部署</h1><h2 id=\"1-首先你需要一台云服务器或者一台vps\"><a href=\"#1-首先你需要一台云服务器或者一台vps\" class=\"headerlink\" title=\"1.首先你需要一台云服务器或者一台vps\"></a>1.首先你需要一台云服务器或者一台vps</h2><h2 id=\"2-开始安装\"><a href=\"#2-开始安装\" class=\"headerlink\" title=\"2.开始安装\"></a>2.开始安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br><span class=\"line\">yum install unzip zip -y</span><br><span class=\"line\">yum install wget -y</span><br><span class=\"line\">wget -N –no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip</span><br><span class=\"line\">unzip ssr.zip</span><br><span class=\"line\">cd SSR*</span><br><span class=\"line\">bash install.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-开启服务并设置用户端口\"><a href=\"#3-开启服务并设置用户端口\" class=\"headerlink\" title=\"3.开启服务并设置用户端口\"></a>3.开启服务并设置用户端口</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/SSR*</span><br><span class=\"line\">./serve.sh ==&gt; 开启服务</span><br><span class=\"line\">./user.sh ==&gt; 设置用户</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-复制添加用户成功后的一段ssr链接\"><a href=\"#4-复制添加用户成功后的一段ssr链接\" class=\"headerlink\" title=\"4.复制添加用户成功后的一段ssr链接\"></a>4.复制添加用户成功后的一段ssr链接</h2><p>我框起来那部分复制一下，然后保存起来</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/1.png\" alt=\"\"></p>\n<h2 id=\"5-客户端连接小飞机\"><a href=\"#5-客户端连接小飞机\" class=\"headerlink\" title=\"5.客户端连接小飞机\"></a>5.客户端连接小飞机</h2><h3 id=\"1-Android\"><a href=\"#1-Android\" class=\"headerlink\" title=\"1.Android\"></a>1.Android</h3><p>首先在手机里复制一下刚刚那个ssr链接</p>\n<p>然后打开<strong>shadowsocks R</strong>软件后，点击标题那里，下图黄色框框</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/2.png\" alt=\"\"></p>\n<p>然后点击右下角的+号，接着点击import from Clipboard</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/3.png\" alt=\"\"></p>\n<p>会弹出一个框，点确认ok</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/4.png\" alt=\"\"></p>\n<p>然后选中这个节点后会回到主界面，点击右上角的小飞机，即刻飞行！</p>\n<p>google页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/5.jpg\" alt=\"\"></p>\n<p>Yutobe页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/6.jpg\" alt=\"\"></p>\n<h3 id=\"2-Window\"><a href=\"#2-Window\" class=\"headerlink\" title=\"2.Window\"></a>2.Window</h3><p>双击打开shadowsock-R软件后，在状态栏中找到小飞机图标。<br>然后右键选择从剪贴板导入，然后确定即可</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/9.png\" alt=\"\"><br><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/7.png\" alt=\"\"><br><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/8.png\" alt=\"\"></p>\n<p>系统代理模式选择PAC</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/12.png\" alt=\"\"></p>\n<p>代理规则绕过局域网和大陆</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/13.png\" alt=\"\"></p>\n<p>google页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/10.png\" alt=\"\"></p>\n<p>twitch页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/11.png\" alt=\"\"></p>\n<h3 id=\"3-iphone和mac也有各自的客户端\"><a href=\"#3-iphone和mac也有各自的客户端\" class=\"headerlink\" title=\"3.iphone和mac也有各自的客户端\"></a>3.iphone和mac也有各自的客户端</h3><p>后续整理</p>\n<h3 id=\"4-各类客户端下载地址\"><a href=\"#4-各类客户端下载地址\" class=\"headerlink\" title=\"4.各类客户端下载地址\"></a>4.各类客户端下载地址</h3><p>后续整理，如有需要先email我</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、什么是小飞机呀？\"><a href=\"#一、什么是小飞机呀？\" class=\"headerlink\" title=\"一、什么是小飞机呀？\"></a>一、什么是小飞机呀？</h1><blockquote>\n<p>小飞机就是可以飞出去的东西啦（fq）懂了吧。</p>\n</blockquote>\n<h1 id=\"二、如何部署\"><a href=\"#二、如何部署\" class=\"headerlink\" title=\"二、如何部署\"></a>二、如何部署</h1><h2 id=\"1-首先你需要一台云服务器或者一台vps\"><a href=\"#1-首先你需要一台云服务器或者一台vps\" class=\"headerlink\" title=\"1.首先你需要一台云服务器或者一台vps\"></a>1.首先你需要一台云服务器或者一台vps</h2><h2 id=\"2-开始安装\"><a href=\"#2-开始安装\" class=\"headerlink\" title=\"2.开始安装\"></a>2.开始安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br><span class=\"line\">yum install unzip zip -y</span><br><span class=\"line\">yum install wget -y</span><br><span class=\"line\">wget -N –no-check-certificate https://raw.githubusercontent.com/Moexin/Easy-SSR-Bash-Python-The-Final/master/ssr.zip</span><br><span class=\"line\">unzip ssr.zip</span><br><span class=\"line\">cd SSR*</span><br><span class=\"line\">bash install.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-开启服务并设置用户端口\"><a href=\"#3-开启服务并设置用户端口\" class=\"headerlink\" title=\"3.开启服务并设置用户端口\"></a>3.开启服务并设置用户端口</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/SSR*</span><br><span class=\"line\">./serve.sh ==&gt; 开启服务</span><br><span class=\"line\">./user.sh ==&gt; 设置用户</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-复制添加用户成功后的一段ssr链接\"><a href=\"#4-复制添加用户成功后的一段ssr链接\" class=\"headerlink\" title=\"4.复制添加用户成功后的一段ssr链接\"></a>4.复制添加用户成功后的一段ssr链接</h2><p>我框起来那部分复制一下，然后保存起来</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/1.png\" alt=\"\"></p>\n<h2 id=\"5-客户端连接小飞机\"><a href=\"#5-客户端连接小飞机\" class=\"headerlink\" title=\"5.客户端连接小飞机\"></a>5.客户端连接小飞机</h2><h3 id=\"1-Android\"><a href=\"#1-Android\" class=\"headerlink\" title=\"1.Android\"></a>1.Android</h3><p>首先在手机里复制一下刚刚那个ssr链接</p>\n<p>然后打开<strong>shadowsocks R</strong>软件后，点击标题那里，下图黄色框框</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/2.png\" alt=\"\"></p>\n<p>然后点击右下角的+号，接着点击import from Clipboard</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/3.png\" alt=\"\"></p>\n<p>会弹出一个框，点确认ok</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/4.png\" alt=\"\"></p>\n<p>然后选中这个节点后会回到主界面，点击右上角的小飞机，即刻飞行！</p>\n<p>google页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/5.jpg\" alt=\"\"></p>\n<p>Yutobe页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/6.jpg\" alt=\"\"></p>\n<h3 id=\"2-Window\"><a href=\"#2-Window\" class=\"headerlink\" title=\"2.Window\"></a>2.Window</h3><p>双击打开shadowsock-R软件后，在状态栏中找到小飞机图标。<br>然后右键选择从剪贴板导入，然后确定即可</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/9.png\" alt=\"\"><br><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/7.png\" alt=\"\"><br><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/8.png\" alt=\"\"></p>\n<p>系统代理模式选择PAC</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/12.png\" alt=\"\"></p>\n<p>代理规则绕过局域网和大陆</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/13.png\" alt=\"\"></p>\n<p>google页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/10.png\" alt=\"\"></p>\n<p>twitch页面</p>\n<p><img src=\"/2019/05/02/小飞机ss-ssr的部署方法/11.png\" alt=\"\"></p>\n<h3 id=\"3-iphone和mac也有各自的客户端\"><a href=\"#3-iphone和mac也有各自的客户端\" class=\"headerlink\" title=\"3.iphone和mac也有各自的客户端\"></a>3.iphone和mac也有各自的客户端</h3><p>后续整理</p>\n<h3 id=\"4-各类客户端下载地址\"><a href=\"#4-各类客户端下载地址\" class=\"headerlink\" title=\"4.各类客户端下载地址\"></a>4.各类客户端下载地址</h3><p>后续整理，如有需要先email我</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"深海迷航联机教程","date":"2019-05-02T14:05:49.000Z","toc":true,"_content":"# 深海迷航联机mod教程\n## 声明\n此联机mod由碧蓝之星提供，使用mod前先关闭所有杀毒软件还有防火墙\n## 使用方法\n### 1.首先下载一个蒲公英vpn\n点击下载安装==>[蒲公英](http://cloud.aboutme.ink/s/YafattpcqtFkB9a)\n### 2.注册一个账号\n然后注册账号==>[点击注册](https://console.oray.com/passport/register.html)\n### 3.登陆\n然后登陆蒲公英网站==>[点击登陆](https://console.oray.com)\n### 4.进入控制台\n来到控制台\n![](深海迷航联机教程/6.png)\n### 5.组网\n点击智能组网，管理默认网络\n![](深海迷航联机教程/7.png)\n设置入网方式为允许任何人加入网络后确认即可，记住你的网络ID，例如下图的是513614009\n![](深海迷航联机教程/8.png)\n### 6.打开蒲公英软件\n然后来到桌面，打开蒲公英软件后登陆\n点击个人头像那里\n![](深海迷航联机教程/9.png)\n加入其它网络\n![](深海迷航联机教程/10.png)\n点击我知道了\n![](深海迷航联机教程/11.png)\n输入网络ID，加入网络\n![](深海迷航联机教程/12.png)\n注意只支持3个人组网联机，3个人都必须加入同一个网络ID\n\n### 7.使用联机mod\n点击下载安装==>[联机mod-1.3](http://cloud.aboutme.ink/s/dCQDECRP2re2Wyt)\n复制到游戏根目录，双击安装后即可开启联机了。\n![](深海迷航联机教程/1.png)\n这样你就可以加入别人的房间了，但是你自己无法开启主机（就是自己做主机，别人来连接）\n\n### 8.开启主机建房间\n首先关闭window防火墙，自行百度。\n找到游戏主目录\n![](深海迷航联机教程/2.png)\n双击联机服务端.bat后出现如下页面\n![](深海迷航联机教程/13.png)\n黑色控制台上第一步需要输入端口，我们直接按回车使用默认端口就行。\n第二步需要你输入游戏目录，我们先在文件中返回上一层目录。\n![](深海迷航联机教程/3.png)\n然后拖游戏目录进去\n![](深海迷航联机教程/4.png)\n然后去掉引号再按一次回车就可以开启主机了，注意这个黑色的控制台界面不要关闭！！！！\n然后叫上你的小伙伴进入你的ip就可以联机，你的ip在蒲公英上有个主机172.xx.xx.xx你复制一下发给好友，注意要处于同一个蒲公英网络下才可以联机，目录蒲公英组网只支持3个人（免费版）\n![](深海迷航联机教程/5.png)\n上图框框圈起来的是你的ip，把这个发给好友，可以看到现在蒲公英有两个人，一个是我，一个是我的好友。我们两个人处于同一个局域网，所以可以联机。\n\n### 9.祝你联机愉快，如果有版权问题，请联系我\n\n\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/深海迷航联机教程.md","raw":"---\ntitle: 深海迷航联机教程\ndate: 2019-05-02 22:05:49\ntags: [深海迷航，联机]\ntoc: true \ncategories: game\n---\n# 深海迷航联机mod教程\n## 声明\n此联机mod由碧蓝之星提供，使用mod前先关闭所有杀毒软件还有防火墙\n## 使用方法\n### 1.首先下载一个蒲公英vpn\n点击下载安装==>[蒲公英](http://cloud.aboutme.ink/s/YafattpcqtFkB9a)\n### 2.注册一个账号\n然后注册账号==>[点击注册](https://console.oray.com/passport/register.html)\n### 3.登陆\n然后登陆蒲公英网站==>[点击登陆](https://console.oray.com)\n### 4.进入控制台\n来到控制台\n![](深海迷航联机教程/6.png)\n### 5.组网\n点击智能组网，管理默认网络\n![](深海迷航联机教程/7.png)\n设置入网方式为允许任何人加入网络后确认即可，记住你的网络ID，例如下图的是513614009\n![](深海迷航联机教程/8.png)\n### 6.打开蒲公英软件\n然后来到桌面，打开蒲公英软件后登陆\n点击个人头像那里\n![](深海迷航联机教程/9.png)\n加入其它网络\n![](深海迷航联机教程/10.png)\n点击我知道了\n![](深海迷航联机教程/11.png)\n输入网络ID，加入网络\n![](深海迷航联机教程/12.png)\n注意只支持3个人组网联机，3个人都必须加入同一个网络ID\n\n### 7.使用联机mod\n点击下载安装==>[联机mod-1.3](http://cloud.aboutme.ink/s/dCQDECRP2re2Wyt)\n复制到游戏根目录，双击安装后即可开启联机了。\n![](深海迷航联机教程/1.png)\n这样你就可以加入别人的房间了，但是你自己无法开启主机（就是自己做主机，别人来连接）\n\n### 8.开启主机建房间\n首先关闭window防火墙，自行百度。\n找到游戏主目录\n![](深海迷航联机教程/2.png)\n双击联机服务端.bat后出现如下页面\n![](深海迷航联机教程/13.png)\n黑色控制台上第一步需要输入端口，我们直接按回车使用默认端口就行。\n第二步需要你输入游戏目录，我们先在文件中返回上一层目录。\n![](深海迷航联机教程/3.png)\n然后拖游戏目录进去\n![](深海迷航联机教程/4.png)\n然后去掉引号再按一次回车就可以开启主机了，注意这个黑色的控制台界面不要关闭！！！！\n然后叫上你的小伙伴进入你的ip就可以联机，你的ip在蒲公英上有个主机172.xx.xx.xx你复制一下发给好友，注意要处于同一个蒲公英网络下才可以联机，目录蒲公英组网只支持3个人（免费版）\n![](深海迷航联机教程/5.png)\n上图框框圈起来的是你的ip，把这个发给好友，可以看到现在蒲公英有两个人，一个是我，一个是我的好友。我们两个人处于同一个局域网，所以可以联机。\n\n### 9.祝你联机愉快，如果有版权问题，请联系我\n\n\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"深海迷航联机教程","published":1,"updated":"2019-05-03T11:23:11.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djgf000hkstnyjzcbxff","content":"<h1 id=\"深海迷航联机mod教程\"><a href=\"#深海迷航联机mod教程\" class=\"headerlink\" title=\"深海迷航联机mod教程\"></a>深海迷航联机mod教程</h1><h2 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h2><p>此联机mod由碧蓝之星提供，使用mod前先关闭所有杀毒软件还有防火墙</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><h3 id=\"1-首先下载一个蒲公英vpn\"><a href=\"#1-首先下载一个蒲公英vpn\" class=\"headerlink\" title=\"1.首先下载一个蒲公英vpn\"></a>1.首先下载一个蒲公英vpn</h3><p>点击下载安装==&gt;<a href=\"http://cloud.aboutme.ink/s/YafattpcqtFkB9a\" target=\"_blank\" rel=\"noopener\">蒲公英</a></p>\n<h3 id=\"2-注册一个账号\"><a href=\"#2-注册一个账号\" class=\"headerlink\" title=\"2.注册一个账号\"></a>2.注册一个账号</h3><p>然后注册账号==&gt;<a href=\"https://console.oray.com/passport/register.html\" target=\"_blank\" rel=\"noopener\">点击注册</a></p>\n<h3 id=\"3-登陆\"><a href=\"#3-登陆\" class=\"headerlink\" title=\"3.登陆\"></a>3.登陆</h3><p>然后登陆蒲公英网站==&gt;<a href=\"https://console.oray.com\" target=\"_blank\" rel=\"noopener\">点击登陆</a></p>\n<h3 id=\"4-进入控制台\"><a href=\"#4-进入控制台\" class=\"headerlink\" title=\"4.进入控制台\"></a>4.进入控制台</h3><p>来到控制台<br><img src=\"/2019/05/02/深海迷航联机教程/6.png\" alt=\"\"></p>\n<h3 id=\"5-组网\"><a href=\"#5-组网\" class=\"headerlink\" title=\"5.组网\"></a>5.组网</h3><p>点击智能组网，管理默认网络<br><img src=\"/2019/05/02/深海迷航联机教程/7.png\" alt=\"\"><br>设置入网方式为允许任何人加入网络后确认即可，记住你的网络ID，例如下图的是513614009<br><img src=\"/2019/05/02/深海迷航联机教程/8.png\" alt=\"\"></p>\n<h3 id=\"6-打开蒲公英软件\"><a href=\"#6-打开蒲公英软件\" class=\"headerlink\" title=\"6.打开蒲公英软件\"></a>6.打开蒲公英软件</h3><p>然后来到桌面，打开蒲公英软件后登陆<br>点击个人头像那里<br><img src=\"/2019/05/02/深海迷航联机教程/9.png\" alt=\"\"><br>加入其它网络<br><img src=\"/2019/05/02/深海迷航联机教程/10.png\" alt=\"\"><br>点击我知道了<br><img src=\"/2019/05/02/深海迷航联机教程/11.png\" alt=\"\"><br>输入网络ID，加入网络<br><img src=\"/2019/05/02/深海迷航联机教程/12.png\" alt=\"\"><br>注意只支持3个人组网联机，3个人都必须加入同一个网络ID</p>\n<h3 id=\"7-使用联机mod\"><a href=\"#7-使用联机mod\" class=\"headerlink\" title=\"7.使用联机mod\"></a>7.使用联机mod</h3><p>点击下载安装==&gt;<a href=\"http://cloud.aboutme.ink/s/dCQDECRP2re2Wyt\" target=\"_blank\" rel=\"noopener\">联机mod-1.3</a><br>复制到游戏根目录，双击安装后即可开启联机了。<br><img src=\"/2019/05/02/深海迷航联机教程/1.png\" alt=\"\"><br>这样你就可以加入别人的房间了，但是你自己无法开启主机（就是自己做主机，别人来连接）</p>\n<h3 id=\"8-开启主机建房间\"><a href=\"#8-开启主机建房间\" class=\"headerlink\" title=\"8.开启主机建房间\"></a>8.开启主机建房间</h3><p>首先关闭window防火墙，自行百度。<br>找到游戏主目录<br><img src=\"/2019/05/02/深海迷航联机教程/2.png\" alt=\"\"><br>双击联机服务端.bat后出现如下页面<br><img src=\"/2019/05/02/深海迷航联机教程/13.png\" alt=\"\"><br>黑色控制台上第一步需要输入端口，我们直接按回车使用默认端口就行。<br>第二步需要你输入游戏目录，我们先在文件中返回上一层目录。<br><img src=\"/2019/05/02/深海迷航联机教程/3.png\" alt=\"\"><br>然后拖游戏目录进去<br><img src=\"/2019/05/02/深海迷航联机教程/4.png\" alt=\"\"><br>然后去掉引号再按一次回车就可以开启主机了，注意这个黑色的控制台界面不要关闭！！！！<br>然后叫上你的小伙伴进入你的ip就可以联机，你的ip在蒲公英上有个主机172.xx.xx.xx你复制一下发给好友，注意要处于同一个蒲公英网络下才可以联机，目录蒲公英组网只支持3个人（免费版）<br><img src=\"/2019/05/02/深海迷航联机教程/5.png\" alt=\"\"><br>上图框框圈起来的是你的ip，把这个发给好友，可以看到现在蒲公英有两个人，一个是我，一个是我的好友。我们两个人处于同一个局域网，所以可以联机。</p>\n<h3 id=\"9-祝你联机愉快，如果有版权问题，请联系我\"><a href=\"#9-祝你联机愉快，如果有版权问题，请联系我\" class=\"headerlink\" title=\"9.祝你联机愉快，如果有版权问题，请联系我\"></a>9.祝你联机愉快，如果有版权问题，请联系我</h3><p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"深海迷航联机mod教程\"><a href=\"#深海迷航联机mod教程\" class=\"headerlink\" title=\"深海迷航联机mod教程\"></a>深海迷航联机mod教程</h1><h2 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h2><p>此联机mod由碧蓝之星提供，使用mod前先关闭所有杀毒软件还有防火墙</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><h3 id=\"1-首先下载一个蒲公英vpn\"><a href=\"#1-首先下载一个蒲公英vpn\" class=\"headerlink\" title=\"1.首先下载一个蒲公英vpn\"></a>1.首先下载一个蒲公英vpn</h3><p>点击下载安装==&gt;<a href=\"http://cloud.aboutme.ink/s/YafattpcqtFkB9a\" target=\"_blank\" rel=\"noopener\">蒲公英</a></p>\n<h3 id=\"2-注册一个账号\"><a href=\"#2-注册一个账号\" class=\"headerlink\" title=\"2.注册一个账号\"></a>2.注册一个账号</h3><p>然后注册账号==&gt;<a href=\"https://console.oray.com/passport/register.html\" target=\"_blank\" rel=\"noopener\">点击注册</a></p>\n<h3 id=\"3-登陆\"><a href=\"#3-登陆\" class=\"headerlink\" title=\"3.登陆\"></a>3.登陆</h3><p>然后登陆蒲公英网站==&gt;<a href=\"https://console.oray.com\" target=\"_blank\" rel=\"noopener\">点击登陆</a></p>\n<h3 id=\"4-进入控制台\"><a href=\"#4-进入控制台\" class=\"headerlink\" title=\"4.进入控制台\"></a>4.进入控制台</h3><p>来到控制台<br><img src=\"/2019/05/02/深海迷航联机教程/6.png\" alt=\"\"></p>\n<h3 id=\"5-组网\"><a href=\"#5-组网\" class=\"headerlink\" title=\"5.组网\"></a>5.组网</h3><p>点击智能组网，管理默认网络<br><img src=\"/2019/05/02/深海迷航联机教程/7.png\" alt=\"\"><br>设置入网方式为允许任何人加入网络后确认即可，记住你的网络ID，例如下图的是513614009<br><img src=\"/2019/05/02/深海迷航联机教程/8.png\" alt=\"\"></p>\n<h3 id=\"6-打开蒲公英软件\"><a href=\"#6-打开蒲公英软件\" class=\"headerlink\" title=\"6.打开蒲公英软件\"></a>6.打开蒲公英软件</h3><p>然后来到桌面，打开蒲公英软件后登陆<br>点击个人头像那里<br><img src=\"/2019/05/02/深海迷航联机教程/9.png\" alt=\"\"><br>加入其它网络<br><img src=\"/2019/05/02/深海迷航联机教程/10.png\" alt=\"\"><br>点击我知道了<br><img src=\"/2019/05/02/深海迷航联机教程/11.png\" alt=\"\"><br>输入网络ID，加入网络<br><img src=\"/2019/05/02/深海迷航联机教程/12.png\" alt=\"\"><br>注意只支持3个人组网联机，3个人都必须加入同一个网络ID</p>\n<h3 id=\"7-使用联机mod\"><a href=\"#7-使用联机mod\" class=\"headerlink\" title=\"7.使用联机mod\"></a>7.使用联机mod</h3><p>点击下载安装==&gt;<a href=\"http://cloud.aboutme.ink/s/dCQDECRP2re2Wyt\" target=\"_blank\" rel=\"noopener\">联机mod-1.3</a><br>复制到游戏根目录，双击安装后即可开启联机了。<br><img src=\"/2019/05/02/深海迷航联机教程/1.png\" alt=\"\"><br>这样你就可以加入别人的房间了，但是你自己无法开启主机（就是自己做主机，别人来连接）</p>\n<h3 id=\"8-开启主机建房间\"><a href=\"#8-开启主机建房间\" class=\"headerlink\" title=\"8.开启主机建房间\"></a>8.开启主机建房间</h3><p>首先关闭window防火墙，自行百度。<br>找到游戏主目录<br><img src=\"/2019/05/02/深海迷航联机教程/2.png\" alt=\"\"><br>双击联机服务端.bat后出现如下页面<br><img src=\"/2019/05/02/深海迷航联机教程/13.png\" alt=\"\"><br>黑色控制台上第一步需要输入端口，我们直接按回车使用默认端口就行。<br>第二步需要你输入游戏目录，我们先在文件中返回上一层目录。<br><img src=\"/2019/05/02/深海迷航联机教程/3.png\" alt=\"\"><br>然后拖游戏目录进去<br><img src=\"/2019/05/02/深海迷航联机教程/4.png\" alt=\"\"><br>然后去掉引号再按一次回车就可以开启主机了，注意这个黑色的控制台界面不要关闭！！！！<br>然后叫上你的小伙伴进入你的ip就可以联机，你的ip在蒲公英上有个主机172.xx.xx.xx你复制一下发给好友，注意要处于同一个蒲公英网络下才可以联机，目录蒲公英组网只支持3个人（免费版）<br><img src=\"/2019/05/02/深海迷航联机教程/5.png\" alt=\"\"><br>上图框框圈起来的是你的ip，把这个发给好友，可以看到现在蒲公英有两个人，一个是我，一个是我的好友。我们两个人处于同一个局域网，所以可以联机。</p>\n<h3 id=\"9-祝你联机愉快，如果有版权问题，请联系我\"><a href=\"#9-祝你联机愉快，如果有版权问题，请联系我\" class=\"headerlink\" title=\"9.祝你联机愉快，如果有版权问题，请联系我\"></a>9.祝你联机愉快，如果有版权问题，请联系我</h3><p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"hexo生成博文插入图片的办法","date":"2018-08-17T09:43:48.000Z","toc":true,"_content":"# hexo生成博文插入图片的办法\n***\n## 一.首先进入Hexo\n\n### 1.把主页配置文件`_config.yml` 里的`post_asset_folder`这个选项设置为`true`\n\n### 2.在你的hexo目录下执行命令\n>`$ npm install hexo-asset-image--save`\n>这是下载安装一个可以上传本地图片的插件，来自[CodeFalling](https://github.com/CodeFalling/hexo-asset-image)\n\n### 3.等待安装完成后\n>再运行`$ hexo new \"xxx\"`来生成md博文时\n>可以看到/source/posts文件夹内除了xxx.md文件还有一个同名的文件夹\n\n### 4.最后在xxx.md博文中想引入图片时\n>先把图片复制到xxx这个文件夹中\n>然后只需要在xxx.md中按照markdown的格式引入图片\n>`![你想输入的替代文字](xxx/图片名.jpg)`\n\n## 二.注意事项\n\n### 1.路径问题\n>注意： xxx是这个md文件的名字，也是同名文件夹的名字\n>只需要有文件夹名字即可，不需要有什么绝对路径\n>你想引入的图片就只需要放入xxx这个文件夹内就好了，很像引用相对路径\n\n### 2.打开Chrome控制台查看图片真正的路径\n>最后检查一下，`$ hexo g`生成页面后\n>进入public\\2018\\08\\17\\index.html文件中查看相关字段\n>可以发现html标签内的语句是`<img src=\"2018/08/17/xxx/图片名.jpg\">`\n>而不是`<img src=\"xxx/图片名.jpg>`\n>这很重要,关乎你的网页是否可以真正加载你想插入的图片\n","source":"_posts/hexo生成博文插入图片的办法.md","raw":"---\ntitle: hexo生成博文插入图片的办法\ndate: 2018-08-17 17:43:48\ntags: hexo\ntoc: true \ncategories: hexo\n---\n# hexo生成博文插入图片的办法\n***\n## 一.首先进入Hexo\n\n### 1.把主页配置文件`_config.yml` 里的`post_asset_folder`这个选项设置为`true`\n\n### 2.在你的hexo目录下执行命令\n>`$ npm install hexo-asset-image--save`\n>这是下载安装一个可以上传本地图片的插件，来自[CodeFalling](https://github.com/CodeFalling/hexo-asset-image)\n\n### 3.等待安装完成后\n>再运行`$ hexo new \"xxx\"`来生成md博文时\n>可以看到/source/posts文件夹内除了xxx.md文件还有一个同名的文件夹\n\n### 4.最后在xxx.md博文中想引入图片时\n>先把图片复制到xxx这个文件夹中\n>然后只需要在xxx.md中按照markdown的格式引入图片\n>`![你想输入的替代文字](xxx/图片名.jpg)`\n\n## 二.注意事项\n\n### 1.路径问题\n>注意： xxx是这个md文件的名字，也是同名文件夹的名字\n>只需要有文件夹名字即可，不需要有什么绝对路径\n>你想引入的图片就只需要放入xxx这个文件夹内就好了，很像引用相对路径\n\n### 2.打开Chrome控制台查看图片真正的路径\n>最后检查一下，`$ hexo g`生成页面后\n>进入public\\2018\\08\\17\\index.html文件中查看相关字段\n>可以发现html标签内的语句是`<img src=\"2018/08/17/xxx/图片名.jpg\">`\n>而不是`<img src=\"xxx/图片名.jpg>`\n>这很重要,关乎你的网页是否可以真正加载你想插入的图片\n","slug":"hexo生成博文插入图片的办法","published":1,"updated":"2019-04-13T01:13:58.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djgh000jkstnreb73wrh","content":"<h1 id=\"hexo生成博文插入图片的办法\"><a href=\"#hexo生成博文插入图片的办法\" class=\"headerlink\" title=\"hexo生成博文插入图片的办法\"></a>hexo生成博文插入图片的办法</h1><hr>\n<h2 id=\"一-首先进入Hexo\"><a href=\"#一-首先进入Hexo\" class=\"headerlink\" title=\"一.首先进入Hexo\"></a>一.首先进入Hexo</h2><h3 id=\"1-把主页配置文件-config-yml-里的post-asset-folder这个选项设置为true\"><a href=\"#1-把主页配置文件-config-yml-里的post-asset-folder这个选项设置为true\" class=\"headerlink\" title=\"1.把主页配置文件_config.yml 里的post_asset_folder这个选项设置为true\"></a>1.把主页配置文件<code>_config.yml</code> 里的<code>post_asset_folder</code>这个选项设置为<code>true</code></h3><h3 id=\"2-在你的hexo目录下执行命令\"><a href=\"#2-在你的hexo目录下执行命令\" class=\"headerlink\" title=\"2.在你的hexo目录下执行命令\"></a>2.在你的hexo目录下执行命令</h3><blockquote>\n<p><code>$ npm install hexo-asset-image--save</code><br>这是下载安装一个可以上传本地图片的插件，来自<a href=\"https://github.com/CodeFalling/hexo-asset-image\" target=\"_blank\" rel=\"noopener\">CodeFalling</a></p>\n</blockquote>\n<h3 id=\"3-等待安装完成后\"><a href=\"#3-等待安装完成后\" class=\"headerlink\" title=\"3.等待安装完成后\"></a>3.等待安装完成后</h3><blockquote>\n<p>再运行<code>$ hexo new &quot;xxx&quot;</code>来生成md博文时<br>可以看到/source/posts文件夹内除了xxx.md文件还有一个同名的文件夹</p>\n</blockquote>\n<h3 id=\"4-最后在xxx-md博文中想引入图片时\"><a href=\"#4-最后在xxx-md博文中想引入图片时\" class=\"headerlink\" title=\"4.最后在xxx.md博文中想引入图片时\"></a>4.最后在xxx.md博文中想引入图片时</h3><blockquote>\n<p>先把图片复制到xxx这个文件夹中<br>然后只需要在xxx.md中按照markdown的格式引入图片<br><code>![你想输入的替代文字](xxx/图片名.jpg)</code></p>\n</blockquote>\n<h2 id=\"二-注意事项\"><a href=\"#二-注意事项\" class=\"headerlink\" title=\"二.注意事项\"></a>二.注意事项</h2><h3 id=\"1-路径问题\"><a href=\"#1-路径问题\" class=\"headerlink\" title=\"1.路径问题\"></a>1.路径问题</h3><blockquote>\n<p>注意： xxx是这个md文件的名字，也是同名文件夹的名字<br>只需要有文件夹名字即可，不需要有什么绝对路径<br>你想引入的图片就只需要放入xxx这个文件夹内就好了，很像引用相对路径</p>\n</blockquote>\n<h3 id=\"2-打开Chrome控制台查看图片真正的路径\"><a href=\"#2-打开Chrome控制台查看图片真正的路径\" class=\"headerlink\" title=\"2.打开Chrome控制台查看图片真正的路径\"></a>2.打开Chrome控制台查看图片真正的路径</h3><blockquote>\n<p>最后检查一下，<code>$ hexo g</code>生成页面后<br>进入public\\2018\\08\\17\\index.html文件中查看相关字段<br>可以发现html标签内的语句是<code>&lt;img src=&quot;2018/08/17/xxx/图片名.jpg&quot;&gt;</code><br>而不是<code>&lt;img src=&quot;xxx/图片名.jpg&gt;</code><br>这很重要,关乎你的网页是否可以真正加载你想插入的图片</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"hexo生成博文插入图片的办法\"><a href=\"#hexo生成博文插入图片的办法\" class=\"headerlink\" title=\"hexo生成博文插入图片的办法\"></a>hexo生成博文插入图片的办法</h1><hr>\n<h2 id=\"一-首先进入Hexo\"><a href=\"#一-首先进入Hexo\" class=\"headerlink\" title=\"一.首先进入Hexo\"></a>一.首先进入Hexo</h2><h3 id=\"1-把主页配置文件-config-yml-里的post-asset-folder这个选项设置为true\"><a href=\"#1-把主页配置文件-config-yml-里的post-asset-folder这个选项设置为true\" class=\"headerlink\" title=\"1.把主页配置文件_config.yml 里的post_asset_folder这个选项设置为true\"></a>1.把主页配置文件<code>_config.yml</code> 里的<code>post_asset_folder</code>这个选项设置为<code>true</code></h3><h3 id=\"2-在你的hexo目录下执行命令\"><a href=\"#2-在你的hexo目录下执行命令\" class=\"headerlink\" title=\"2.在你的hexo目录下执行命令\"></a>2.在你的hexo目录下执行命令</h3><blockquote>\n<p><code>$ npm install hexo-asset-image--save</code><br>这是下载安装一个可以上传本地图片的插件，来自<a href=\"https://github.com/CodeFalling/hexo-asset-image\" target=\"_blank\" rel=\"noopener\">CodeFalling</a></p>\n</blockquote>\n<h3 id=\"3-等待安装完成后\"><a href=\"#3-等待安装完成后\" class=\"headerlink\" title=\"3.等待安装完成后\"></a>3.等待安装完成后</h3><blockquote>\n<p>再运行<code>$ hexo new &quot;xxx&quot;</code>来生成md博文时<br>可以看到/source/posts文件夹内除了xxx.md文件还有一个同名的文件夹</p>\n</blockquote>\n<h3 id=\"4-最后在xxx-md博文中想引入图片时\"><a href=\"#4-最后在xxx-md博文中想引入图片时\" class=\"headerlink\" title=\"4.最后在xxx.md博文中想引入图片时\"></a>4.最后在xxx.md博文中想引入图片时</h3><blockquote>\n<p>先把图片复制到xxx这个文件夹中<br>然后只需要在xxx.md中按照markdown的格式引入图片<br><code>![你想输入的替代文字](xxx/图片名.jpg)</code></p>\n</blockquote>\n<h2 id=\"二-注意事项\"><a href=\"#二-注意事项\" class=\"headerlink\" title=\"二.注意事项\"></a>二.注意事项</h2><h3 id=\"1-路径问题\"><a href=\"#1-路径问题\" class=\"headerlink\" title=\"1.路径问题\"></a>1.路径问题</h3><blockquote>\n<p>注意： xxx是这个md文件的名字，也是同名文件夹的名字<br>只需要有文件夹名字即可，不需要有什么绝对路径<br>你想引入的图片就只需要放入xxx这个文件夹内就好了，很像引用相对路径</p>\n</blockquote>\n<h3 id=\"2-打开Chrome控制台查看图片真正的路径\"><a href=\"#2-打开Chrome控制台查看图片真正的路径\" class=\"headerlink\" title=\"2.打开Chrome控制台查看图片真正的路径\"></a>2.打开Chrome控制台查看图片真正的路径</h3><blockquote>\n<p>最后检查一下，<code>$ hexo g</code>生成页面后<br>进入public\\2018\\08\\17\\index.html文件中查看相关字段<br>可以发现html标签内的语句是<code>&lt;img src=&quot;2018/08/17/xxx/图片名.jpg&quot;&gt;</code><br>而不是<code>&lt;img src=&quot;xxx/图片名.jpg&gt;</code><br>这很重要,关乎你的网页是否可以真正加载你想插入的图片</p>\n</blockquote>\n"},{"title":"用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用","date":"2019-04-21T03:51:04.000Z","toc":true,"_content":"# 如何用nginx配置二级域名解析到ip的不同端口呢\n总所周知，ip:80这种方式的web应用可以直接用ip去访问，原因是输入ip的时候，浏览器会自动的默认认为是ip:80这样的形式去访问。\n利用这一点我们可以用域名解析到ip上进行只需要输入`www.domain.com`去访问web页面。各大网站也是如此。\n## 如果是ip:80以外的端口怎么办？\n一台服务器不可能说只部署一个web应用吧，其他的都要通过ip+端口或者域名+端口去访问多麻烦啊，而且样子也不好看呀。\n这个时候，**救世主nginx**大爷就出现了，他说我有很多的*NB功能*啊，例如反向代理啊！\n![](https://inner.ink/pqs/img/nb.gif)\n## 前提\n你需要有一个域名和一台服务器（国内需备案）\n然后去解析域名，添加两个A记录如下图\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png)\n## Nginx方向代理\n我们要如何使用这个技能呢？\n\n- 1.首先找到你服务器中nginx的配置文件所在的文件夹\n    一般都是`/usr/local/nginx/conf/`这个文件夹下有个nginx.conf或者default.conf反正.conf的文件都看一看\n    命令是`cat nginx.conf`\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png)\n- 2.然后打开nginx.conf看一眼里面的配置\n    主要是找到一句话叫做`include xxxx/*.conf`,如果没有你自己加一句吧\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png)\n- 3.然后进入这个xxxx文件夹下新建一个.conf，我这里是gogs.conf\n    然后编辑gogs.conf的内容为下图，然后保存\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg)\n- 4.记得重启nginx，如果没报错的话，你配置应该成功了\n\n然后打开浏览器输入git.aboutme.ink试试\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png)\n成功咯！\n![](https://inner.ink/pqs/img/wen.gif)\n然后我再来一个cloud.aboutme.ink试试,打开浏览器访问 cloud.aboutme.ink也可以访问了\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png)\n\n## gogs.conf的代码如下\n``` \n    server\n    {\n            listen 80;\n            server_name git.aboutme.ink;\n            location / {\n                    proxy_redirect off;\n                    proxy_set_header Host $host;\n                    proxy_set_header X-Real-IP $remote_addr;\n                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                    proxy_pass http://127.0.0.1:10080;\n            }\n            access_log /home/wwwlogs/git.aboutme.ink.log;\n    }\n\n```\n# 后续\n大家可以按照我的方法试试看，不行可以留言反馈咯，我会及时解决的。至于这两个应用怎么构建的，后续出教程啊！\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用.md","raw":"---\ntitle: 用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用\ndate: 2019-04-21 11:51:04\ntags: [nginx,domain]\ntoc: true \ncategories: nginx\n---\n# 如何用nginx配置二级域名解析到ip的不同端口呢\n总所周知，ip:80这种方式的web应用可以直接用ip去访问，原因是输入ip的时候，浏览器会自动的默认认为是ip:80这样的形式去访问。\n利用这一点我们可以用域名解析到ip上进行只需要输入`www.domain.com`去访问web页面。各大网站也是如此。\n## 如果是ip:80以外的端口怎么办？\n一台服务器不可能说只部署一个web应用吧，其他的都要通过ip+端口或者域名+端口去访问多麻烦啊，而且样子也不好看呀。\n这个时候，**救世主nginx**大爷就出现了，他说我有很多的*NB功能*啊，例如反向代理啊！\n![](https://inner.ink/pqs/img/nb.gif)\n## 前提\n你需要有一个域名和一台服务器（国内需备案）\n然后去解析域名，添加两个A记录如下图\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png)\n## Nginx方向代理\n我们要如何使用这个技能呢？\n\n- 1.首先找到你服务器中nginx的配置文件所在的文件夹\n    一般都是`/usr/local/nginx/conf/`这个文件夹下有个nginx.conf或者default.conf反正.conf的文件都看一看\n    命令是`cat nginx.conf`\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png)\n- 2.然后打开nginx.conf看一眼里面的配置\n    主要是找到一句话叫做`include xxxx/*.conf`,如果没有你自己加一句吧\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png)\n- 3.然后进入这个xxxx文件夹下新建一个.conf，我这里是gogs.conf\n    然后编辑gogs.conf的内容为下图，然后保存\n    ![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg)\n- 4.记得重启nginx，如果没报错的话，你配置应该成功了\n\n然后打开浏览器输入git.aboutme.ink试试\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png)\n成功咯！\n![](https://inner.ink/pqs/img/wen.gif)\n然后我再来一个cloud.aboutme.ink试试,打开浏览器访问 cloud.aboutme.ink也可以访问了\n![](用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png)\n\n## gogs.conf的代码如下\n``` \n    server\n    {\n            listen 80;\n            server_name git.aboutme.ink;\n            location / {\n                    proxy_redirect off;\n                    proxy_set_header Host $host;\n                    proxy_set_header X-Real-IP $remote_addr;\n                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                    proxy_pass http://127.0.0.1:10080;\n            }\n            access_log /home/wwwlogs/git.aboutme.ink.log;\n    }\n\n```\n# 后续\n大家可以按照我的方法试试看，不行可以留言反馈咯，我会及时解决的。至于这两个应用怎么构建的，后续出教程啊！\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用","published":1,"updated":"2019-05-02T07:49:20.496Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djgi000okstnp4657t41","content":"<h1 id=\"如何用nginx配置二级域名解析到ip的不同端口呢\"><a href=\"#如何用nginx配置二级域名解析到ip的不同端口呢\" class=\"headerlink\" title=\"如何用nginx配置二级域名解析到ip的不同端口呢\"></a>如何用nginx配置二级域名解析到ip的不同端口呢</h1><p>总所周知，ip:80这种方式的web应用可以直接用ip去访问，原因是输入ip的时候，浏览器会自动的默认认为是ip:80这样的形式去访问。<br>利用这一点我们可以用域名解析到ip上进行只需要输入<code>www.domain.com</code>去访问web页面。各大网站也是如此。</p>\n<h2 id=\"如果是ip-80以外的端口怎么办？\"><a href=\"#如果是ip-80以外的端口怎么办？\" class=\"headerlink\" title=\"如果是ip:80以外的端口怎么办？\"></a>如果是ip:80以外的端口怎么办？</h2><p>一台服务器不可能说只部署一个web应用吧，其他的都要通过ip+端口或者域名+端口去访问多麻烦啊，而且样子也不好看呀。<br>这个时候，<strong>救世主nginx</strong>大爷就出现了，他说我有很多的<em>NB功能</em>啊，例如反向代理啊！<br><img src=\"https://inner.ink/pqs/img/nb.gif\" alt=\"\"></p>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><p>你需要有一个域名和一台服务器（国内需备案）<br>然后去解析域名，添加两个A记录如下图<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png\" alt=\"\"></p>\n<h2 id=\"Nginx方向代理\"><a href=\"#Nginx方向代理\" class=\"headerlink\" title=\"Nginx方向代理\"></a>Nginx方向代理</h2><p>我们要如何使用这个技能呢？</p>\n<ul>\n<li>1.首先找到你服务器中nginx的配置文件所在的文件夹<br>  一般都是<code>/usr/local/nginx/conf/</code>这个文件夹下有个nginx.conf或者default.conf反正.conf的文件都看一看<br>  命令是<code>cat nginx.conf</code><br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png\" alt=\"\"></li>\n<li>2.然后打开nginx.conf看一眼里面的配置<br>  主要是找到一句话叫做<code>include xxxx/*.conf</code>,如果没有你自己加一句吧<br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png\" alt=\"\"></li>\n<li>3.然后进入这个xxxx文件夹下新建一个.conf，我这里是gogs.conf<br>  然后编辑gogs.conf的内容为下图，然后保存<br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg\" alt=\"\"></li>\n<li>4.记得重启nginx，如果没报错的话，你配置应该成功了</li>\n</ul>\n<p>然后打开浏览器输入git.aboutme.ink试试<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png\" alt=\"\"><br>成功咯！<br><img src=\"https://inner.ink/pqs/img/wen.gif\" alt=\"\"><br>然后我再来一个cloud.aboutme.ink试试,打开浏览器访问 cloud.aboutme.ink也可以访问了<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png\" alt=\"\"></p>\n<h2 id=\"gogs-conf的代码如下\"><a href=\"#gogs-conf的代码如下\" class=\"headerlink\" title=\"gogs.conf的代码如下\"></a>gogs.conf的代码如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name git.aboutme.ink;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host $host;</span><br><span class=\"line\">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:10080;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        access_log /home/wwwlogs/git.aboutme.ink.log;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>大家可以按照我的方法试试看，不行可以留言反馈咯，我会及时解决的。至于这两个应用怎么构建的，后续出教程啊！<br><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何用nginx配置二级域名解析到ip的不同端口呢\"><a href=\"#如何用nginx配置二级域名解析到ip的不同端口呢\" class=\"headerlink\" title=\"如何用nginx配置二级域名解析到ip的不同端口呢\"></a>如何用nginx配置二级域名解析到ip的不同端口呢</h1><p>总所周知，ip:80这种方式的web应用可以直接用ip去访问，原因是输入ip的时候，浏览器会自动的默认认为是ip:80这样的形式去访问。<br>利用这一点我们可以用域名解析到ip上进行只需要输入<code>www.domain.com</code>去访问web页面。各大网站也是如此。</p>\n<h2 id=\"如果是ip-80以外的端口怎么办？\"><a href=\"#如果是ip-80以外的端口怎么办？\" class=\"headerlink\" title=\"如果是ip:80以外的端口怎么办？\"></a>如果是ip:80以外的端口怎么办？</h2><p>一台服务器不可能说只部署一个web应用吧，其他的都要通过ip+端口或者域名+端口去访问多麻烦啊，而且样子也不好看呀。<br>这个时候，<strong>救世主nginx</strong>大爷就出现了，他说我有很多的<em>NB功能</em>啊，例如反向代理啊！<br><img src=\"https://inner.ink/pqs/img/nb.gif\" alt=\"\"></p>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><p>你需要有一个域名和一台服务器（国内需备案）<br>然后去解析域名，添加两个A记录如下图<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png\" alt=\"\"></p>\n<h2 id=\"Nginx方向代理\"><a href=\"#Nginx方向代理\" class=\"headerlink\" title=\"Nginx方向代理\"></a>Nginx方向代理</h2><p>我们要如何使用这个技能呢？</p>\n<ul>\n<li>1.首先找到你服务器中nginx的配置文件所在的文件夹<br>  一般都是<code>/usr/local/nginx/conf/</code>这个文件夹下有个nginx.conf或者default.conf反正.conf的文件都看一看<br>  命令是<code>cat nginx.conf</code><br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png\" alt=\"\"></li>\n<li>2.然后打开nginx.conf看一眼里面的配置<br>  主要是找到一句话叫做<code>include xxxx/*.conf</code>,如果没有你自己加一句吧<br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png\" alt=\"\"></li>\n<li>3.然后进入这个xxxx文件夹下新建一个.conf，我这里是gogs.conf<br>  然后编辑gogs.conf的内容为下图，然后保存<br>  <img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg\" alt=\"\"></li>\n<li>4.记得重启nginx，如果没报错的话，你配置应该成功了</li>\n</ul>\n<p>然后打开浏览器输入git.aboutme.ink试试<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png\" alt=\"\"><br>成功咯！<br><img src=\"https://inner.ink/pqs/img/wen.gif\" alt=\"\"><br>然后我再来一个cloud.aboutme.ink试试,打开浏览器访问 cloud.aboutme.ink也可以访问了<br><img src=\"/2019/04/21/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png\" alt=\"\"></p>\n<h2 id=\"gogs-conf的代码如下\"><a href=\"#gogs-conf的代码如下\" class=\"headerlink\" title=\"gogs.conf的代码如下\"></a>gogs.conf的代码如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name git.aboutme.ink;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host $host;</span><br><span class=\"line\">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:10080;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        access_log /home/wwwlogs/git.aboutme.ink.log;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>大家可以按照我的方法试试看，不行可以留言反馈咯，我会及时解决的。至于这两个应用怎么构建的，后续出教程啊！<br><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"使用树莓派构建一台服务器，永久运行网站","date":"2019-05-10T11:22:44.000Z","toc":true,"_content":"# 一、前言\n由于本人在这段时候，看到了一个叫做树莓派的东东，初步了解之后觉得很有意思，于是想把整个过程记录下来。\n# 二、树莓派是什么？\nRaspberry Pi(中文名为**树莓派**,简写为RPi，(或者RasPi / RPI) 是为学习计算机编程教育而设计)，只有信用卡大小的微型电脑，其系统基于Linux。随着Windows 10 IoT的发布，我们也将可以用上运行Windows的树莓派。\n自问世以来，受众多计算机发烧友和创客的追捧，曾经一“派”难求。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是**麻雀虽小，五脏俱全**。\n## 1.用我的话理解\n用我的话理解就是树莓派就是一台主机，你可以外接显示器，键盘鼠标，u盘等等外设，因为它体积很小，而且又有很多串口和外接的口，可以直接调用很多底层硬件。\n## 2.市面上的型号\n市面上大多是**3代B+型**，淘宝一搜树莓派一大堆都是，价钱纯主板（不要任何外设）在230+左右，有点小贵，超过我的预算，所以我继续寻找廉价的，终于让我发现了一款100+的树莓派。\n## 3.树莓派zero w\n树莓派zero w是一款mini的树莓派，体质只有3b+的1/3。实际到手后，你会发现它真的超级小，超级可爱。以下是我的实物图，你可以看看大小到底有多mini。\n\n![](使用树莓派构建一台服务器，永久运行网站/1.jpg)\n\n你可以看到，最上面是一根普通的黑色签字笔，接下来是一个即插即用型的外接wifi网卡，然后是一个USB读卡器，最底下的就是我们今天的主角zero w。它真的超级小，有木有。**真的是完美的诠释了那句“麻雀虽小，五脏俱全”的话。**\n\nzero w这款树莓派的主要参数如下：\n\n- BCM2835处理器，1GHz主频，512MB RAM\n- BCM43438 WiFi / BT芯片\n- micro-USB电源接口\n- micro-USB OTG接口\n- miniHDMI端口\n- 复合视频和重置扩展接口\n- 脆弱的CSI摄像头接口\n- micro-SD卡座，存放操作系统\n- 40-pin GPIO扩展接口\n- 尺寸：65mm*30mm\n\n你别看它的cpu只有1核，内存只有512MB，就觉得它可能什么都做不了，但是实际上它的性能还是很好的，用于跑一个网站真的是小case。\n## 4.更多树莓派\n关于更多树莓派型号或者使用教程你可以去[树莓派实验室](http://shumeipai.nxez.com/)这个网站，上面有丰富的资源。\n\n# 三、树莓派zero w安装系统\n## 1.准备\n你可能提前需要准备的东西如下:\n\n- 16GB or 32GB 的SanDisk内存卡（注意是以前那种放在手机上，很小的哦）\n- 一根最普通不过的usb安卓数据线（not type-c）\n- u盘格式化工具（推荐使用 SDFormatter）\n- 系统烧写工具（Win32DiskImager）\n- 树莓派系统（可以去官网下载）\n\n我使用的是**Raspbian Stretch Lite**这个系统镜像，这个系统是官方制作的，lite是无桌面版的，只有黑漆漆的控制台，优点是体积小，省性能和内存。\n\n名字带有desktop的是有桌面ui的，对不熟悉liunx系统的朋友可能更友好，但是体积很大，占用的性能也会更高。\n\n![](使用树莓派构建一台服务器，永久运行网站/2.png)\n\n## 2.第一步下载系统镜像\n下载好你需要的系统镜像后，如下图\n\n![](使用树莓派构建一台服务器，永久运行网站/3.png)\n\n一开始只有一个zip的压缩包，大小大概360MB左右，你需要把它解压，得到上图的文件夹\n\n![](使用树莓派构建一台服务器，永久运行网站/4.png)\n\n然后进入文件夹可以看到一个img的镜像，大小为1.7GB左右\n\n>ps：这个官方的Raspbian镜像，如果是其他第三方的镜像，可能下载后的压缩包解压后不是img镜像，这种情况请另行百度解决\n\n## 3.使用Win32DiskImager往内存卡中写入镜像\n\n![](使用树莓派构建一台服务器，永久运行网站/5.png)\n\n把内存卡插入读卡器后，插入电脑。\n打开Win32DiskImager软件后，选择img镜像，设备选择你的U盘，然后点击写入就可以了，写入完成后会弹出成功的提示框。\n\n>ps: 我上图没有选择设备，因为的没插入读卡器，仅仅是示范而已\n\n## 4.修改boot分区的文件\n\n先别急着拔出读卡器，此时，我们电脑可以看到u盘中只有一个名为boot的分区，大小可能只有40MB左右，不要着急，因为window不识别内存卡中liunx系统的其他分区。\n\n### 4.1新建ssh文件\n因为我们的zero w有一个mini hdmi的接口，但是我不需要屏幕，所以需要使用ssh连接到zero w中的系统，所以需要在第一次开机就能开启ssh功能。 \n我们进入boot分区内，然后**新建**一个名为**ssh**的文件，**注意不要后缀名！！！！也不要往里面写任何东西！！**\n### 4.2新建wpa_supplicant.conf文件\n因为ssh连接是需要ip地址的，所以我们需要将zero w在第一次开机自动连接wifi，使其和我们的电脑处于一个局域网，这样我们才可以通过ssh连接到zero w的系统。\n同样的在boot分区内，新建一个名为wpa_supplicant.conf的文件，然后往里面写入如下内容后保存：\n\n```conf\ncountry=CN\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\nnetwork={\nssid=\"你的wifi名字\"\npsk=\"你的wifi密码\"\n}\n```\n\n## 5.组装我们的最小主机并连接\n\n取出读卡器中的内存卡，然后插入到zero w中，使用一根usb安卓数据线连接电源（5V1A）即可。\n等待几分钟，期间我们的zero w的指示灯会一直闪烁，很正常，等待指示灯常亮的时候，我们去路由器上，查看一下树莓派的ip地址。\n\n![](使用树莓派构建一台服务器，永久运行网站/6.png)\n\n可以看到我们zero w的ip为192.168.0.104，然后使用ssh连接工具（推荐使用putty）连接树莓派，初始账户为pi，密码是raspberry。\n\n![](使用树莓派构建一台服务器，永久运行网站/7.png)\n\n连接成功，如上图所示。这样我们的系统就正确无误的安装好了。\n\n>ps: 如果是手机开启热点当做一个路由器的话，咱们手机下载一个名叫android terminal的app，然后输入`ip neigh`指令，就可以查到连接到手机的设备的ip信息了。\n\n## 6.优化咱们树莓派的系统\n\n### 6.1修改源\n\n因为国外的源，咱们在国内的连接过去网速很慢，所以我们需要修改为国内的源，我修改的是中科大的源。\n\n#### 6.1.1修改sources.list文件\n\n```javascript\nsudo nano /etc/apt/sources.list \n--注释其他内容，添加以下:\ndeb http://mirrors.ustc.edu.cn/raspbian/raspbian/raspbian stretch main contrib non-free rpi\n```\n\n#### 6.1.2修改raspi.list文件\n\n```javascript\nsudo nano /etc/apt/sources.list.d/raspi.list\n--注释其他内容，添加以下:\ndeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch main ui\n```\n\n#### 6.1.3执行更新\n\n```javascript\nsudo apt-get update\nsudo apt-get upgrade\n```\n\n### 6.2修改时区\n\n```javascript\nsudo dpkg-reconfigure tzdata\n```\n找到亚洲Asia，然后选择shanghai就可以了\n\n### 6.3开机自启ssh\n第一种：\n\n```javascript\nsudo raspi-config\n```\n\n进入选择找到interfacing option选择，然后找到ssh，按回车使能enable就可以了\n\n第二种：\n  在终端命令行中启动SSH服务后，如果系统重启或关机后启动，SSH服务默认是关闭的，依然需要手动启动，为了方便可以设置SSH服务开机自动启动，打开/etc/rc.local文件，在语句exit 0之前加入：\n`/etc/init.d/ssh start`\n\n建议都试试，反之我的是可以了。\n\n## 7.安装nginx\n\n```shell\n#安装\nsudo apt-get install nginx\n#启动\nsudo /etc/init.d/nginx start\n#重启\nsudo /etc/init.d/nginx restart\n#停止\nsudo /etc/init.d/nginx stop\n```\n\n打开浏览器访问192.168.0.104（你的树莓派ip地址），可以看到nginx的页面，说明安装好了。\n我这边上传了我的博客，如下图\n\n![](使用树莓派构建一台服务器，永久运行网站/8.png)\n\n可以正常的看到页面了，但是这样只能在内网（局域网中）看到，我想让所有人都可以访问怎么办？\n\n## 8.内网穿透\n\n内网穿透，意思就是将内网（本地）的web应用通过nat穿透到公网上，从而让别人可以访问到。\n\n内网穿透目前主要由ngrok和frp两种，都非常好用，国内ngrok免费的有ittun、sunny和natapp，这三个都是免费的，前面两个可以自定义域名，后面的需要vip版本才可以自定义域名。\n\n我这三种都试过，我发现sunny的arm版本的ngrok客户端在我的树莓派运行不了，ittun的和natpp的ngrok都可以，由于需要自定义域名，我使用的是ittun的ngrok_arm版本的\n\n使用方法这三者官网都有详细说明，大家自行查看。\n\n这是正常运行时的截图，访问http://zerow.ittun.com/时可以看到控制台http请求日志\n\n![](使用树莓派构建一台服务器，永久运行网站/9.png)\n\n![](使用树莓派构建一台服务器，永久运行网站/10.png)\n\n因为需要ngrok在后台运行，所以我用的是screen会话使其可以在后台运行。但是开启自启，还没有实现，万一断电或者断网了，我必须手动去运行一下ngrok，这是目前没有解决的痛点。\n\n## 9.更多\n\n树莓派不仅仅只是可以用于运行一个网站，还有很多很多的功能等待你的开发，可以多去看看[树莓派实验室](http://shumeipai.nxez.com/)里面，很多大神都写了很多实用的教程。\n\n我的zero w状态信息如下：\n\n![](使用树莓派构建一台服务器，永久运行网站/11.png)\n\n在上面开启了一个nginx和ngrok服务，内存剩余还有250MB，还是很舒服的，cpu温度也不算高，运行两天了，基本在37-39之间。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","source":"_posts/使用树莓派构建一台服务器，永久运行网站.md","raw":"---\ntitle: 使用树莓派构建一台服务器，永久运行网站\ndate: 2019-05-10 19:22:44\ntags: [树莓派,Linux]\ntoc: true \ncategories: Linux\n---\n# 一、前言\n由于本人在这段时候，看到了一个叫做树莓派的东东，初步了解之后觉得很有意思，于是想把整个过程记录下来。\n# 二、树莓派是什么？\nRaspberry Pi(中文名为**树莓派**,简写为RPi，(或者RasPi / RPI) 是为学习计算机编程教育而设计)，只有信用卡大小的微型电脑，其系统基于Linux。随着Windows 10 IoT的发布，我们也将可以用上运行Windows的树莓派。\n自问世以来，受众多计算机发烧友和创客的追捧，曾经一“派”难求。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是**麻雀虽小，五脏俱全**。\n## 1.用我的话理解\n用我的话理解就是树莓派就是一台主机，你可以外接显示器，键盘鼠标，u盘等等外设，因为它体积很小，而且又有很多串口和外接的口，可以直接调用很多底层硬件。\n## 2.市面上的型号\n市面上大多是**3代B+型**，淘宝一搜树莓派一大堆都是，价钱纯主板（不要任何外设）在230+左右，有点小贵，超过我的预算，所以我继续寻找廉价的，终于让我发现了一款100+的树莓派。\n## 3.树莓派zero w\n树莓派zero w是一款mini的树莓派，体质只有3b+的1/3。实际到手后，你会发现它真的超级小，超级可爱。以下是我的实物图，你可以看看大小到底有多mini。\n\n![](使用树莓派构建一台服务器，永久运行网站/1.jpg)\n\n你可以看到，最上面是一根普通的黑色签字笔，接下来是一个即插即用型的外接wifi网卡，然后是一个USB读卡器，最底下的就是我们今天的主角zero w。它真的超级小，有木有。**真的是完美的诠释了那句“麻雀虽小，五脏俱全”的话。**\n\nzero w这款树莓派的主要参数如下：\n\n- BCM2835处理器，1GHz主频，512MB RAM\n- BCM43438 WiFi / BT芯片\n- micro-USB电源接口\n- micro-USB OTG接口\n- miniHDMI端口\n- 复合视频和重置扩展接口\n- 脆弱的CSI摄像头接口\n- micro-SD卡座，存放操作系统\n- 40-pin GPIO扩展接口\n- 尺寸：65mm*30mm\n\n你别看它的cpu只有1核，内存只有512MB，就觉得它可能什么都做不了，但是实际上它的性能还是很好的，用于跑一个网站真的是小case。\n## 4.更多树莓派\n关于更多树莓派型号或者使用教程你可以去[树莓派实验室](http://shumeipai.nxez.com/)这个网站，上面有丰富的资源。\n\n# 三、树莓派zero w安装系统\n## 1.准备\n你可能提前需要准备的东西如下:\n\n- 16GB or 32GB 的SanDisk内存卡（注意是以前那种放在手机上，很小的哦）\n- 一根最普通不过的usb安卓数据线（not type-c）\n- u盘格式化工具（推荐使用 SDFormatter）\n- 系统烧写工具（Win32DiskImager）\n- 树莓派系统（可以去官网下载）\n\n我使用的是**Raspbian Stretch Lite**这个系统镜像，这个系统是官方制作的，lite是无桌面版的，只有黑漆漆的控制台，优点是体积小，省性能和内存。\n\n名字带有desktop的是有桌面ui的，对不熟悉liunx系统的朋友可能更友好，但是体积很大，占用的性能也会更高。\n\n![](使用树莓派构建一台服务器，永久运行网站/2.png)\n\n## 2.第一步下载系统镜像\n下载好你需要的系统镜像后，如下图\n\n![](使用树莓派构建一台服务器，永久运行网站/3.png)\n\n一开始只有一个zip的压缩包，大小大概360MB左右，你需要把它解压，得到上图的文件夹\n\n![](使用树莓派构建一台服务器，永久运行网站/4.png)\n\n然后进入文件夹可以看到一个img的镜像，大小为1.7GB左右\n\n>ps：这个官方的Raspbian镜像，如果是其他第三方的镜像，可能下载后的压缩包解压后不是img镜像，这种情况请另行百度解决\n\n## 3.使用Win32DiskImager往内存卡中写入镜像\n\n![](使用树莓派构建一台服务器，永久运行网站/5.png)\n\n把内存卡插入读卡器后，插入电脑。\n打开Win32DiskImager软件后，选择img镜像，设备选择你的U盘，然后点击写入就可以了，写入完成后会弹出成功的提示框。\n\n>ps: 我上图没有选择设备，因为的没插入读卡器，仅仅是示范而已\n\n## 4.修改boot分区的文件\n\n先别急着拔出读卡器，此时，我们电脑可以看到u盘中只有一个名为boot的分区，大小可能只有40MB左右，不要着急，因为window不识别内存卡中liunx系统的其他分区。\n\n### 4.1新建ssh文件\n因为我们的zero w有一个mini hdmi的接口，但是我不需要屏幕，所以需要使用ssh连接到zero w中的系统，所以需要在第一次开机就能开启ssh功能。 \n我们进入boot分区内，然后**新建**一个名为**ssh**的文件，**注意不要后缀名！！！！也不要往里面写任何东西！！**\n### 4.2新建wpa_supplicant.conf文件\n因为ssh连接是需要ip地址的，所以我们需要将zero w在第一次开机自动连接wifi，使其和我们的电脑处于一个局域网，这样我们才可以通过ssh连接到zero w的系统。\n同样的在boot分区内，新建一个名为wpa_supplicant.conf的文件，然后往里面写入如下内容后保存：\n\n```conf\ncountry=CN\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\nnetwork={\nssid=\"你的wifi名字\"\npsk=\"你的wifi密码\"\n}\n```\n\n## 5.组装我们的最小主机并连接\n\n取出读卡器中的内存卡，然后插入到zero w中，使用一根usb安卓数据线连接电源（5V1A）即可。\n等待几分钟，期间我们的zero w的指示灯会一直闪烁，很正常，等待指示灯常亮的时候，我们去路由器上，查看一下树莓派的ip地址。\n\n![](使用树莓派构建一台服务器，永久运行网站/6.png)\n\n可以看到我们zero w的ip为192.168.0.104，然后使用ssh连接工具（推荐使用putty）连接树莓派，初始账户为pi，密码是raspberry。\n\n![](使用树莓派构建一台服务器，永久运行网站/7.png)\n\n连接成功，如上图所示。这样我们的系统就正确无误的安装好了。\n\n>ps: 如果是手机开启热点当做一个路由器的话，咱们手机下载一个名叫android terminal的app，然后输入`ip neigh`指令，就可以查到连接到手机的设备的ip信息了。\n\n## 6.优化咱们树莓派的系统\n\n### 6.1修改源\n\n因为国外的源，咱们在国内的连接过去网速很慢，所以我们需要修改为国内的源，我修改的是中科大的源。\n\n#### 6.1.1修改sources.list文件\n\n```javascript\nsudo nano /etc/apt/sources.list \n--注释其他内容，添加以下:\ndeb http://mirrors.ustc.edu.cn/raspbian/raspbian/raspbian stretch main contrib non-free rpi\n```\n\n#### 6.1.2修改raspi.list文件\n\n```javascript\nsudo nano /etc/apt/sources.list.d/raspi.list\n--注释其他内容，添加以下:\ndeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch main ui\n```\n\n#### 6.1.3执行更新\n\n```javascript\nsudo apt-get update\nsudo apt-get upgrade\n```\n\n### 6.2修改时区\n\n```javascript\nsudo dpkg-reconfigure tzdata\n```\n找到亚洲Asia，然后选择shanghai就可以了\n\n### 6.3开机自启ssh\n第一种：\n\n```javascript\nsudo raspi-config\n```\n\n进入选择找到interfacing option选择，然后找到ssh，按回车使能enable就可以了\n\n第二种：\n  在终端命令行中启动SSH服务后，如果系统重启或关机后启动，SSH服务默认是关闭的，依然需要手动启动，为了方便可以设置SSH服务开机自动启动，打开/etc/rc.local文件，在语句exit 0之前加入：\n`/etc/init.d/ssh start`\n\n建议都试试，反之我的是可以了。\n\n## 7.安装nginx\n\n```shell\n#安装\nsudo apt-get install nginx\n#启动\nsudo /etc/init.d/nginx start\n#重启\nsudo /etc/init.d/nginx restart\n#停止\nsudo /etc/init.d/nginx stop\n```\n\n打开浏览器访问192.168.0.104（你的树莓派ip地址），可以看到nginx的页面，说明安装好了。\n我这边上传了我的博客，如下图\n\n![](使用树莓派构建一台服务器，永久运行网站/8.png)\n\n可以正常的看到页面了，但是这样只能在内网（局域网中）看到，我想让所有人都可以访问怎么办？\n\n## 8.内网穿透\n\n内网穿透，意思就是将内网（本地）的web应用通过nat穿透到公网上，从而让别人可以访问到。\n\n内网穿透目前主要由ngrok和frp两种，都非常好用，国内ngrok免费的有ittun、sunny和natapp，这三个都是免费的，前面两个可以自定义域名，后面的需要vip版本才可以自定义域名。\n\n我这三种都试过，我发现sunny的arm版本的ngrok客户端在我的树莓派运行不了，ittun的和natpp的ngrok都可以，由于需要自定义域名，我使用的是ittun的ngrok_arm版本的\n\n使用方法这三者官网都有详细说明，大家自行查看。\n\n这是正常运行时的截图，访问http://zerow.ittun.com/时可以看到控制台http请求日志\n\n![](使用树莓派构建一台服务器，永久运行网站/9.png)\n\n![](使用树莓派构建一台服务器，永久运行网站/10.png)\n\n因为需要ngrok在后台运行，所以我用的是screen会话使其可以在后台运行。但是开启自启，还没有实现，万一断电或者断网了，我必须手动去运行一下ngrok，这是目前没有解决的痛点。\n\n## 9.更多\n\n树莓派不仅仅只是可以用于运行一个网站，还有很多很多的功能等待你的开发，可以多去看看[树莓派实验室](http://shumeipai.nxez.com/)里面，很多大神都写了很多实用的教程。\n\n我的zero w状态信息如下：\n\n![](使用树莓派构建一台服务器，永久运行网站/11.png)\n\n在上面开启了一个nginx和ngrok服务，内存剩余还有250MB，还是很舒服的，cpu温度也不算高，运行两天了，基本在37-39之间。\n\n![](https://inner.ink/pqs/img/huanhu.gif)","slug":"使用树莓派构建一台服务器，永久运行网站","published":1,"updated":"2019-05-10T13:08:49.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djis0022kstn3h78j48k","content":"<h1 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h1><p>由于本人在这段时候，看到了一个叫做树莓派的东东，初步了解之后觉得很有意思，于是想把整个过程记录下来。</p>\n<h1 id=\"二、树莓派是什么？\"><a href=\"#二、树莓派是什么？\" class=\"headerlink\" title=\"二、树莓派是什么？\"></a>二、树莓派是什么？</h1><p>Raspberry Pi(中文名为<strong>树莓派</strong>,简写为RPi，(或者RasPi / RPI) 是为学习计算机编程教育而设计)，只有信用卡大小的微型电脑，其系统基于Linux。随着Windows 10 IoT的发布，我们也将可以用上运行Windows的树莓派。<br>自问世以来，受众多计算机发烧友和创客的追捧，曾经一“派”难求。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是<strong>麻雀虽小，五脏俱全</strong>。</p>\n<h2 id=\"1-用我的话理解\"><a href=\"#1-用我的话理解\" class=\"headerlink\" title=\"1.用我的话理解\"></a>1.用我的话理解</h2><p>用我的话理解就是树莓派就是一台主机，你可以外接显示器，键盘鼠标，u盘等等外设，因为它体积很小，而且又有很多串口和外接的口，可以直接调用很多底层硬件。</p>\n<h2 id=\"2-市面上的型号\"><a href=\"#2-市面上的型号\" class=\"headerlink\" title=\"2.市面上的型号\"></a>2.市面上的型号</h2><p>市面上大多是<strong>3代B+型</strong>，淘宝一搜树莓派一大堆都是，价钱纯主板（不要任何外设）在230+左右，有点小贵，超过我的预算，所以我继续寻找廉价的，终于让我发现了一款100+的树莓派。</p>\n<h2 id=\"3-树莓派zero-w\"><a href=\"#3-树莓派zero-w\" class=\"headerlink\" title=\"3.树莓派zero w\"></a>3.树莓派zero w</h2><p>树莓派zero w是一款mini的树莓派，体质只有3b+的1/3。实际到手后，你会发现它真的超级小，超级可爱。以下是我的实物图，你可以看看大小到底有多mini。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/1.jpg\" alt=\"\"></p>\n<p>你可以看到，最上面是一根普通的黑色签字笔，接下来是一个即插即用型的外接wifi网卡，然后是一个USB读卡器，最底下的就是我们今天的主角zero w。它真的超级小，有木有。<strong>真的是完美的诠释了那句“麻雀虽小，五脏俱全”的话。</strong></p>\n<p>zero w这款树莓派的主要参数如下：</p>\n<ul>\n<li>BCM2835处理器，1GHz主频，512MB RAM</li>\n<li>BCM43438 WiFi / BT芯片</li>\n<li>micro-USB电源接口</li>\n<li>micro-USB OTG接口</li>\n<li>miniHDMI端口</li>\n<li>复合视频和重置扩展接口</li>\n<li>脆弱的CSI摄像头接口</li>\n<li>micro-SD卡座，存放操作系统</li>\n<li>40-pin GPIO扩展接口</li>\n<li>尺寸：65mm*30mm</li>\n</ul>\n<p>你别看它的cpu只有1核，内存只有512MB，就觉得它可能什么都做不了，但是实际上它的性能还是很好的，用于跑一个网站真的是小case。</p>\n<h2 id=\"4-更多树莓派\"><a href=\"#4-更多树莓派\" class=\"headerlink\" title=\"4.更多树莓派\"></a>4.更多树莓派</h2><p>关于更多树莓派型号或者使用教程你可以去<a href=\"http://shumeipai.nxez.com/\" target=\"_blank\" rel=\"noopener\">树莓派实验室</a>这个网站，上面有丰富的资源。</p>\n<h1 id=\"三、树莓派zero-w安装系统\"><a href=\"#三、树莓派zero-w安装系统\" class=\"headerlink\" title=\"三、树莓派zero w安装系统\"></a>三、树莓派zero w安装系统</h1><h2 id=\"1-准备\"><a href=\"#1-准备\" class=\"headerlink\" title=\"1.准备\"></a>1.准备</h2><p>你可能提前需要准备的东西如下:</p>\n<ul>\n<li>16GB or 32GB 的SanDisk内存卡（注意是以前那种放在手机上，很小的哦）</li>\n<li>一根最普通不过的usb安卓数据线（not type-c）</li>\n<li>u盘格式化工具（推荐使用 SDFormatter）</li>\n<li>系统烧写工具（Win32DiskImager）</li>\n<li>树莓派系统（可以去官网下载）</li>\n</ul>\n<p>我使用的是<strong>Raspbian Stretch Lite</strong>这个系统镜像，这个系统是官方制作的，lite是无桌面版的，只有黑漆漆的控制台，优点是体积小，省性能和内存。</p>\n<p>名字带有desktop的是有桌面ui的，对不熟悉liunx系统的朋友可能更友好，但是体积很大，占用的性能也会更高。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/2.png\" alt=\"\"></p>\n<h2 id=\"2-第一步下载系统镜像\"><a href=\"#2-第一步下载系统镜像\" class=\"headerlink\" title=\"2.第一步下载系统镜像\"></a>2.第一步下载系统镜像</h2><p>下载好你需要的系统镜像后，如下图</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/3.png\" alt=\"\"></p>\n<p>一开始只有一个zip的压缩包，大小大概360MB左右，你需要把它解压，得到上图的文件夹</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/4.png\" alt=\"\"></p>\n<p>然后进入文件夹可以看到一个img的镜像，大小为1.7GB左右</p>\n<blockquote>\n<p>ps：这个官方的Raspbian镜像，如果是其他第三方的镜像，可能下载后的压缩包解压后不是img镜像，这种情况请另行百度解决</p>\n</blockquote>\n<h2 id=\"3-使用Win32DiskImager往内存卡中写入镜像\"><a href=\"#3-使用Win32DiskImager往内存卡中写入镜像\" class=\"headerlink\" title=\"3.使用Win32DiskImager往内存卡中写入镜像\"></a>3.使用Win32DiskImager往内存卡中写入镜像</h2><p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/5.png\" alt=\"\"></p>\n<p>把内存卡插入读卡器后，插入电脑。<br>打开Win32DiskImager软件后，选择img镜像，设备选择你的U盘，然后点击写入就可以了，写入完成后会弹出成功的提示框。</p>\n<blockquote>\n<p>ps: 我上图没有选择设备，因为的没插入读卡器，仅仅是示范而已</p>\n</blockquote>\n<h2 id=\"4-修改boot分区的文件\"><a href=\"#4-修改boot分区的文件\" class=\"headerlink\" title=\"4.修改boot分区的文件\"></a>4.修改boot分区的文件</h2><p>先别急着拔出读卡器，此时，我们电脑可以看到u盘中只有一个名为boot的分区，大小可能只有40MB左右，不要着急，因为window不识别内存卡中liunx系统的其他分区。</p>\n<h3 id=\"4-1新建ssh文件\"><a href=\"#4-1新建ssh文件\" class=\"headerlink\" title=\"4.1新建ssh文件\"></a>4.1新建ssh文件</h3><p>因为我们的zero w有一个mini hdmi的接口，但是我不需要屏幕，所以需要使用ssh连接到zero w中的系统，所以需要在第一次开机就能开启ssh功能。<br>我们进入boot分区内，然后<strong>新建</strong>一个名为<strong>ssh</strong>的文件，<strong>注意不要后缀名！！！！也不要往里面写任何东西！！</strong></p>\n<h3 id=\"4-2新建wpa-supplicant-conf文件\"><a href=\"#4-2新建wpa-supplicant-conf文件\" class=\"headerlink\" title=\"4.2新建wpa_supplicant.conf文件\"></a>4.2新建wpa_supplicant.conf文件</h3><p>因为ssh连接是需要ip地址的，所以我们需要将zero w在第一次开机自动连接wifi，使其和我们的电脑处于一个局域网，这样我们才可以通过ssh连接到zero w的系统。<br>同样的在boot分区内，新建一个名为wpa_supplicant.conf的文件，然后往里面写入如下内容后保存：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">country=CN</span><br><span class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class=\"line\">update_config=1</span><br><span class=\"line\"></span><br><span class=\"line\">network=&#123;</span><br><span class=\"line\">ssid=&quot;你的wifi名字&quot;</span><br><span class=\"line\">psk=&quot;你的wifi密码&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-组装我们的最小主机并连接\"><a href=\"#5-组装我们的最小主机并连接\" class=\"headerlink\" title=\"5.组装我们的最小主机并连接\"></a>5.组装我们的最小主机并连接</h2><p>取出读卡器中的内存卡，然后插入到zero w中，使用一根usb安卓数据线连接电源（5V1A）即可。<br>等待几分钟，期间我们的zero w的指示灯会一直闪烁，很正常，等待指示灯常亮的时候，我们去路由器上，查看一下树莓派的ip地址。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/6.png\" alt=\"\"></p>\n<p>可以看到我们zero w的ip为192.168.0.104，然后使用ssh连接工具（推荐使用putty）连接树莓派，初始账户为pi，密码是raspberry。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/7.png\" alt=\"\"></p>\n<p>连接成功，如上图所示。这样我们的系统就正确无误的安装好了。</p>\n<blockquote>\n<p>ps: 如果是手机开启热点当做一个路由器的话，咱们手机下载一个名叫android terminal的app，然后输入<code>ip neigh</code>指令，就可以查到连接到手机的设备的ip信息了。</p>\n</blockquote>\n<h2 id=\"6-优化咱们树莓派的系统\"><a href=\"#6-优化咱们树莓派的系统\" class=\"headerlink\" title=\"6.优化咱们树莓派的系统\"></a>6.优化咱们树莓派的系统</h2><h3 id=\"6-1修改源\"><a href=\"#6-1修改源\" class=\"headerlink\" title=\"6.1修改源\"></a>6.1修改源</h3><p>因为国外的源，咱们在国内的连接过去网速很慢，所以我们需要修改为国内的源，我修改的是中科大的源。</p>\n<h4 id=\"6-1-1修改sources-list文件\"><a href=\"#6-1-1修改sources-list文件\" class=\"headerlink\" title=\"6.1.1修改sources.list文件\"></a>6.1.1修改sources.list文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/apt/sources.list </span><br><span class=\"line\">--注释其他内容，添加以下:</span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/raspbian/raspbian/raspbian stretch main contrib non-free rpi</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-1-2修改raspi-list文件\"><a href=\"#6-1-2修改raspi-list文件\" class=\"headerlink\" title=\"6.1.2修改raspi.list文件\"></a>6.1.2修改raspi.list文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/apt/sources.list.d/raspi.list</span><br><span class=\"line\">--注释其他内容，添加以下:</span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch main ui</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-1-3执行更新\"><a href=\"#6-1-3执行更新\" class=\"headerlink\" title=\"6.1.3执行更新\"></a>6.1.3执行更新</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-2修改时区\"><a href=\"#6-2修改时区\" class=\"headerlink\" title=\"6.2修改时区\"></a>6.2修改时区</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure>\n<p>找到亚洲Asia，然后选择shanghai就可以了</p>\n<h3 id=\"6-3开机自启ssh\"><a href=\"#6-3开机自启ssh\" class=\"headerlink\" title=\"6.3开机自启ssh\"></a>6.3开机自启ssh</h3><p>第一种：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo raspi-config</span><br></pre></td></tr></table></figure>\n<p>进入选择找到interfacing option选择，然后找到ssh，按回车使能enable就可以了</p>\n<p>第二种：<br>  在终端命令行中启动SSH服务后，如果系统重启或关机后启动，SSH服务默认是关闭的，依然需要手动启动，为了方便可以设置SSH服务开机自动启动，打开/etc/rc.local文件，在语句exit 0之前加入：<br><code>/etc/init.d/ssh start</code></p>\n<p>建议都试试，反之我的是可以了。</p>\n<h2 id=\"7-安装nginx\"><a href=\"#7-安装nginx\" class=\"headerlink\" title=\"7.安装nginx\"></a>7.安装nginx</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>安装</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"meta\">#</span>启动</span><br><span class=\"line\">sudo /etc/init.d/nginx start</span><br><span class=\"line\"><span class=\"meta\">#</span>重启</span><br><span class=\"line\">sudo /etc/init.d/nginx restart</span><br><span class=\"line\"><span class=\"meta\">#</span>停止</span><br><span class=\"line\">sudo /etc/init.d/nginx stop</span><br></pre></td></tr></table></figure>\n<p>打开浏览器访问192.168.0.104（你的树莓派ip地址），可以看到nginx的页面，说明安装好了。<br>我这边上传了我的博客，如下图</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/8.png\" alt=\"\"></p>\n<p>可以正常的看到页面了，但是这样只能在内网（局域网中）看到，我想让所有人都可以访问怎么办？</p>\n<h2 id=\"8-内网穿透\"><a href=\"#8-内网穿透\" class=\"headerlink\" title=\"8.内网穿透\"></a>8.内网穿透</h2><p>内网穿透，意思就是将内网（本地）的web应用通过nat穿透到公网上，从而让别人可以访问到。</p>\n<p>内网穿透目前主要由ngrok和frp两种，都非常好用，国内ngrok免费的有ittun、sunny和natapp，这三个都是免费的，前面两个可以自定义域名，后面的需要vip版本才可以自定义域名。</p>\n<p>我这三种都试过，我发现sunny的arm版本的ngrok客户端在我的树莓派运行不了，ittun的和natpp的ngrok都可以，由于需要自定义域名，我使用的是ittun的ngrok_arm版本的</p>\n<p>使用方法这三者官网都有详细说明，大家自行查看。</p>\n<p>这是正常运行时的截图，访问<a href=\"http://zerow.ittun.com/时可以看到控制台http请求日志\" target=\"_blank\" rel=\"noopener\">http://zerow.ittun.com/时可以看到控制台http请求日志</a></p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/9.png\" alt=\"\"></p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/10.png\" alt=\"\"></p>\n<p>因为需要ngrok在后台运行，所以我用的是screen会话使其可以在后台运行。但是开启自启，还没有实现，万一断电或者断网了，我必须手动去运行一下ngrok，这是目前没有解决的痛点。</p>\n<h2 id=\"9-更多\"><a href=\"#9-更多\" class=\"headerlink\" title=\"9.更多\"></a>9.更多</h2><p>树莓派不仅仅只是可以用于运行一个网站，还有很多很多的功能等待你的开发，可以多去看看<a href=\"http://shumeipai.nxez.com/\" target=\"_blank\" rel=\"noopener\">树莓派实验室</a>里面，很多大神都写了很多实用的教程。</p>\n<p>我的zero w状态信息如下：</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/11.png\" alt=\"\"></p>\n<p>在上面开启了一个nginx和ngrok服务，内存剩余还有250MB，还是很舒服的，cpu温度也不算高，运行两天了，基本在37-39之间。</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h1><p>由于本人在这段时候，看到了一个叫做树莓派的东东，初步了解之后觉得很有意思，于是想把整个过程记录下来。</p>\n<h1 id=\"二、树莓派是什么？\"><a href=\"#二、树莓派是什么？\" class=\"headerlink\" title=\"二、树莓派是什么？\"></a>二、树莓派是什么？</h1><p>Raspberry Pi(中文名为<strong>树莓派</strong>,简写为RPi，(或者RasPi / RPI) 是为学习计算机编程教育而设计)，只有信用卡大小的微型电脑，其系统基于Linux。随着Windows 10 IoT的发布，我们也将可以用上运行Windows的树莓派。<br>自问世以来，受众多计算机发烧友和创客的追捧，曾经一“派”难求。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是<strong>麻雀虽小，五脏俱全</strong>。</p>\n<h2 id=\"1-用我的话理解\"><a href=\"#1-用我的话理解\" class=\"headerlink\" title=\"1.用我的话理解\"></a>1.用我的话理解</h2><p>用我的话理解就是树莓派就是一台主机，你可以外接显示器，键盘鼠标，u盘等等外设，因为它体积很小，而且又有很多串口和外接的口，可以直接调用很多底层硬件。</p>\n<h2 id=\"2-市面上的型号\"><a href=\"#2-市面上的型号\" class=\"headerlink\" title=\"2.市面上的型号\"></a>2.市面上的型号</h2><p>市面上大多是<strong>3代B+型</strong>，淘宝一搜树莓派一大堆都是，价钱纯主板（不要任何外设）在230+左右，有点小贵，超过我的预算，所以我继续寻找廉价的，终于让我发现了一款100+的树莓派。</p>\n<h2 id=\"3-树莓派zero-w\"><a href=\"#3-树莓派zero-w\" class=\"headerlink\" title=\"3.树莓派zero w\"></a>3.树莓派zero w</h2><p>树莓派zero w是一款mini的树莓派，体质只有3b+的1/3。实际到手后，你会发现它真的超级小，超级可爱。以下是我的实物图，你可以看看大小到底有多mini。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/1.jpg\" alt=\"\"></p>\n<p>你可以看到，最上面是一根普通的黑色签字笔，接下来是一个即插即用型的外接wifi网卡，然后是一个USB读卡器，最底下的就是我们今天的主角zero w。它真的超级小，有木有。<strong>真的是完美的诠释了那句“麻雀虽小，五脏俱全”的话。</strong></p>\n<p>zero w这款树莓派的主要参数如下：</p>\n<ul>\n<li>BCM2835处理器，1GHz主频，512MB RAM</li>\n<li>BCM43438 WiFi / BT芯片</li>\n<li>micro-USB电源接口</li>\n<li>micro-USB OTG接口</li>\n<li>miniHDMI端口</li>\n<li>复合视频和重置扩展接口</li>\n<li>脆弱的CSI摄像头接口</li>\n<li>micro-SD卡座，存放操作系统</li>\n<li>40-pin GPIO扩展接口</li>\n<li>尺寸：65mm*30mm</li>\n</ul>\n<p>你别看它的cpu只有1核，内存只有512MB，就觉得它可能什么都做不了，但是实际上它的性能还是很好的，用于跑一个网站真的是小case。</p>\n<h2 id=\"4-更多树莓派\"><a href=\"#4-更多树莓派\" class=\"headerlink\" title=\"4.更多树莓派\"></a>4.更多树莓派</h2><p>关于更多树莓派型号或者使用教程你可以去<a href=\"http://shumeipai.nxez.com/\" target=\"_blank\" rel=\"noopener\">树莓派实验室</a>这个网站，上面有丰富的资源。</p>\n<h1 id=\"三、树莓派zero-w安装系统\"><a href=\"#三、树莓派zero-w安装系统\" class=\"headerlink\" title=\"三、树莓派zero w安装系统\"></a>三、树莓派zero w安装系统</h1><h2 id=\"1-准备\"><a href=\"#1-准备\" class=\"headerlink\" title=\"1.准备\"></a>1.准备</h2><p>你可能提前需要准备的东西如下:</p>\n<ul>\n<li>16GB or 32GB 的SanDisk内存卡（注意是以前那种放在手机上，很小的哦）</li>\n<li>一根最普通不过的usb安卓数据线（not type-c）</li>\n<li>u盘格式化工具（推荐使用 SDFormatter）</li>\n<li>系统烧写工具（Win32DiskImager）</li>\n<li>树莓派系统（可以去官网下载）</li>\n</ul>\n<p>我使用的是<strong>Raspbian Stretch Lite</strong>这个系统镜像，这个系统是官方制作的，lite是无桌面版的，只有黑漆漆的控制台，优点是体积小，省性能和内存。</p>\n<p>名字带有desktop的是有桌面ui的，对不熟悉liunx系统的朋友可能更友好，但是体积很大，占用的性能也会更高。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/2.png\" alt=\"\"></p>\n<h2 id=\"2-第一步下载系统镜像\"><a href=\"#2-第一步下载系统镜像\" class=\"headerlink\" title=\"2.第一步下载系统镜像\"></a>2.第一步下载系统镜像</h2><p>下载好你需要的系统镜像后，如下图</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/3.png\" alt=\"\"></p>\n<p>一开始只有一个zip的压缩包，大小大概360MB左右，你需要把它解压，得到上图的文件夹</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/4.png\" alt=\"\"></p>\n<p>然后进入文件夹可以看到一个img的镜像，大小为1.7GB左右</p>\n<blockquote>\n<p>ps：这个官方的Raspbian镜像，如果是其他第三方的镜像，可能下载后的压缩包解压后不是img镜像，这种情况请另行百度解决</p>\n</blockquote>\n<h2 id=\"3-使用Win32DiskImager往内存卡中写入镜像\"><a href=\"#3-使用Win32DiskImager往内存卡中写入镜像\" class=\"headerlink\" title=\"3.使用Win32DiskImager往内存卡中写入镜像\"></a>3.使用Win32DiskImager往内存卡中写入镜像</h2><p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/5.png\" alt=\"\"></p>\n<p>把内存卡插入读卡器后，插入电脑。<br>打开Win32DiskImager软件后，选择img镜像，设备选择你的U盘，然后点击写入就可以了，写入完成后会弹出成功的提示框。</p>\n<blockquote>\n<p>ps: 我上图没有选择设备，因为的没插入读卡器，仅仅是示范而已</p>\n</blockquote>\n<h2 id=\"4-修改boot分区的文件\"><a href=\"#4-修改boot分区的文件\" class=\"headerlink\" title=\"4.修改boot分区的文件\"></a>4.修改boot分区的文件</h2><p>先别急着拔出读卡器，此时，我们电脑可以看到u盘中只有一个名为boot的分区，大小可能只有40MB左右，不要着急，因为window不识别内存卡中liunx系统的其他分区。</p>\n<h3 id=\"4-1新建ssh文件\"><a href=\"#4-1新建ssh文件\" class=\"headerlink\" title=\"4.1新建ssh文件\"></a>4.1新建ssh文件</h3><p>因为我们的zero w有一个mini hdmi的接口，但是我不需要屏幕，所以需要使用ssh连接到zero w中的系统，所以需要在第一次开机就能开启ssh功能。<br>我们进入boot分区内，然后<strong>新建</strong>一个名为<strong>ssh</strong>的文件，<strong>注意不要后缀名！！！！也不要往里面写任何东西！！</strong></p>\n<h3 id=\"4-2新建wpa-supplicant-conf文件\"><a href=\"#4-2新建wpa-supplicant-conf文件\" class=\"headerlink\" title=\"4.2新建wpa_supplicant.conf文件\"></a>4.2新建wpa_supplicant.conf文件</h3><p>因为ssh连接是需要ip地址的，所以我们需要将zero w在第一次开机自动连接wifi，使其和我们的电脑处于一个局域网，这样我们才可以通过ssh连接到zero w的系统。<br>同样的在boot分区内，新建一个名为wpa_supplicant.conf的文件，然后往里面写入如下内容后保存：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">country=CN</span><br><span class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class=\"line\">update_config=1</span><br><span class=\"line\"></span><br><span class=\"line\">network=&#123;</span><br><span class=\"line\">ssid=&quot;你的wifi名字&quot;</span><br><span class=\"line\">psk=&quot;你的wifi密码&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-组装我们的最小主机并连接\"><a href=\"#5-组装我们的最小主机并连接\" class=\"headerlink\" title=\"5.组装我们的最小主机并连接\"></a>5.组装我们的最小主机并连接</h2><p>取出读卡器中的内存卡，然后插入到zero w中，使用一根usb安卓数据线连接电源（5V1A）即可。<br>等待几分钟，期间我们的zero w的指示灯会一直闪烁，很正常，等待指示灯常亮的时候，我们去路由器上，查看一下树莓派的ip地址。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/6.png\" alt=\"\"></p>\n<p>可以看到我们zero w的ip为192.168.0.104，然后使用ssh连接工具（推荐使用putty）连接树莓派，初始账户为pi，密码是raspberry。</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/7.png\" alt=\"\"></p>\n<p>连接成功，如上图所示。这样我们的系统就正确无误的安装好了。</p>\n<blockquote>\n<p>ps: 如果是手机开启热点当做一个路由器的话，咱们手机下载一个名叫android terminal的app，然后输入<code>ip neigh</code>指令，就可以查到连接到手机的设备的ip信息了。</p>\n</blockquote>\n<h2 id=\"6-优化咱们树莓派的系统\"><a href=\"#6-优化咱们树莓派的系统\" class=\"headerlink\" title=\"6.优化咱们树莓派的系统\"></a>6.优化咱们树莓派的系统</h2><h3 id=\"6-1修改源\"><a href=\"#6-1修改源\" class=\"headerlink\" title=\"6.1修改源\"></a>6.1修改源</h3><p>因为国外的源，咱们在国内的连接过去网速很慢，所以我们需要修改为国内的源，我修改的是中科大的源。</p>\n<h4 id=\"6-1-1修改sources-list文件\"><a href=\"#6-1-1修改sources-list文件\" class=\"headerlink\" title=\"6.1.1修改sources.list文件\"></a>6.1.1修改sources.list文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/apt/sources.list </span><br><span class=\"line\">--注释其他内容，添加以下:</span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/raspbian/raspbian/raspbian stretch main contrib non-free rpi</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-1-2修改raspi-list文件\"><a href=\"#6-1-2修改raspi-list文件\" class=\"headerlink\" title=\"6.1.2修改raspi.list文件\"></a>6.1.2修改raspi.list文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/apt/sources.list.d/raspi.list</span><br><span class=\"line\">--注释其他内容，添加以下:</span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch main ui</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-1-3执行更新\"><a href=\"#6-1-3执行更新\" class=\"headerlink\" title=\"6.1.3执行更新\"></a>6.1.3执行更新</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-2修改时区\"><a href=\"#6-2修改时区\" class=\"headerlink\" title=\"6.2修改时区\"></a>6.2修改时区</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure>\n<p>找到亚洲Asia，然后选择shanghai就可以了</p>\n<h3 id=\"6-3开机自启ssh\"><a href=\"#6-3开机自启ssh\" class=\"headerlink\" title=\"6.3开机自启ssh\"></a>6.3开机自启ssh</h3><p>第一种：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo raspi-config</span><br></pre></td></tr></table></figure>\n<p>进入选择找到interfacing option选择，然后找到ssh，按回车使能enable就可以了</p>\n<p>第二种：<br>  在终端命令行中启动SSH服务后，如果系统重启或关机后启动，SSH服务默认是关闭的，依然需要手动启动，为了方便可以设置SSH服务开机自动启动，打开/etc/rc.local文件，在语句exit 0之前加入：<br><code>/etc/init.d/ssh start</code></p>\n<p>建议都试试，反之我的是可以了。</p>\n<h2 id=\"7-安装nginx\"><a href=\"#7-安装nginx\" class=\"headerlink\" title=\"7.安装nginx\"></a>7.安装nginx</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>安装</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"><span class=\"meta\">#</span>启动</span><br><span class=\"line\">sudo /etc/init.d/nginx start</span><br><span class=\"line\"><span class=\"meta\">#</span>重启</span><br><span class=\"line\">sudo /etc/init.d/nginx restart</span><br><span class=\"line\"><span class=\"meta\">#</span>停止</span><br><span class=\"line\">sudo /etc/init.d/nginx stop</span><br></pre></td></tr></table></figure>\n<p>打开浏览器访问192.168.0.104（你的树莓派ip地址），可以看到nginx的页面，说明安装好了。<br>我这边上传了我的博客，如下图</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/8.png\" alt=\"\"></p>\n<p>可以正常的看到页面了，但是这样只能在内网（局域网中）看到，我想让所有人都可以访问怎么办？</p>\n<h2 id=\"8-内网穿透\"><a href=\"#8-内网穿透\" class=\"headerlink\" title=\"8.内网穿透\"></a>8.内网穿透</h2><p>内网穿透，意思就是将内网（本地）的web应用通过nat穿透到公网上，从而让别人可以访问到。</p>\n<p>内网穿透目前主要由ngrok和frp两种，都非常好用，国内ngrok免费的有ittun、sunny和natapp，这三个都是免费的，前面两个可以自定义域名，后面的需要vip版本才可以自定义域名。</p>\n<p>我这三种都试过，我发现sunny的arm版本的ngrok客户端在我的树莓派运行不了，ittun的和natpp的ngrok都可以，由于需要自定义域名，我使用的是ittun的ngrok_arm版本的</p>\n<p>使用方法这三者官网都有详细说明，大家自行查看。</p>\n<p>这是正常运行时的截图，访问<a href=\"http://zerow.ittun.com/时可以看到控制台http请求日志\" target=\"_blank\" rel=\"noopener\">http://zerow.ittun.com/时可以看到控制台http请求日志</a></p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/9.png\" alt=\"\"></p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/10.png\" alt=\"\"></p>\n<p>因为需要ngrok在后台运行，所以我用的是screen会话使其可以在后台运行。但是开启自启，还没有实现，万一断电或者断网了，我必须手动去运行一下ngrok，这是目前没有解决的痛点。</p>\n<h2 id=\"9-更多\"><a href=\"#9-更多\" class=\"headerlink\" title=\"9.更多\"></a>9.更多</h2><p>树莓派不仅仅只是可以用于运行一个网站，还有很多很多的功能等待你的开发，可以多去看看<a href=\"http://shumeipai.nxez.com/\" target=\"_blank\" rel=\"noopener\">树莓派实验室</a>里面，很多大神都写了很多实用的教程。</p>\n<p>我的zero w状态信息如下：</p>\n<p><img src=\"/2019/05/10/使用树莓派构建一台服务器，永久运行网站/11.png\" alt=\"\"></p>\n<p>在上面开启了一个nginx和ngrok服务，内存剩余还有250MB，还是很舒服的，cpu温度也不算高，运行两天了，基本在37-39之间。</p>\n<p><img src=\"https://inner.ink/pqs/img/huanhu.gif\" alt=\"\"></p>\n"},{"title":"用hexo和github搭建个人博客小站全攻略","date":"2018-08-20T00:58:52.000Z","toc":true,"_content":"# 如何用hexo与github搭建一个属于你自己的个人博客站点呢？\n***\n## 一.了解hexo与github\n\n### 1.hexo是什么？\n>**[hexo](https://hexo.io/zh-cn/docs/) 是一个快速、简洁且高效的博客框架。**Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n### 2.github是什么？\n\n>+ 1.**gitHub是一个面向开源及私有软件项目的托管平台**，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。\n>+ 2.一个**博客网站**建立好之后，想让所有人去访问，必须要有**服务器和域名**，仅仅在你的电脑上运行是远远不够的，而服务器和域名需要购买和备案(国内)，这其中要不但要花钱还要花时间去备案，所以对于一个博客站点来说，这些代价无疑是巨大的。\n>+ 3.**github是免费的**，可以把你写好的博客网站托管在github上边，通过**Github Pages**实现个人网站。\n>+ 4.**Github Pages是Github免费提供给开发者的一款托管个人网站的产品**，它可以免费提供一个域名`username.github.io`去访问你的博客网站，而`username`就是你在注册github的用户名，至于更详细的内容请接着往下看。\n>+ 5.我的小站：[pengqiangsheng.github.io](https://pengqiangsheng.github.io)\n\n### 3.如何安装？\n>安装hexo前，首先检查你的电脑是否安装下列应用程序：\n>1.[Node.js](https://nodejs.org/en/)\n>2.[Git](https://git-scm.com/)\n>安装Node.js和Git之后我们可以运行使用<kbd>Win</kbd>+<kbd>R</kbd>打开运行窗口，然后输入`cmd`进入命令提示符：\n>`$ node --version`\n>![](用hexo和github搭建个人博客小站全攻略/1.png)\n>如果看到上述内容说明Node.js已经安装成功了\n>`$ git --version`\n>![](用hexo和github搭建个人博客小站全攻略/2.png)\n>如果看到上述内容说明git已经安装成功了\n>如果出现提示“不是内部或外部命令...”请看第5点的注意事项\n### 4.安装hexo\n>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo\n>`$ npm install -g hexo-cli`\n>等待安装完成后\n>`$ hexo --version`\n>![](用hexo和github搭建个人博客小站全攻略/3.png)\n>看到这些信息说明hexo安装完成\n### 5.注意事项\n>1.如果出现提示“node不是内部或外部命令，也不是可运行的程序或批处理文件”此类的提示可能有两个原因\n\n>+ 环境变量 \n>\t百度“xxx环境变量如何添加”\n>+ 管理员权限的命令提示符\n>\t如果环境变量添加完成后还是不行，请运行管理员权限的命令提示符\n\n>2.关于想Node.js与Git的更深入的了解的小伙伴可以自行百度\n\n## 二.Hexo建站\n\n### 1.在你电脑的一个你熟悉的位置新建一个文件夹hexo\n>![](用hexo和github搭建个人博客小站全攻略/4.png)\n### 2.在命令提示符中进入这个文件夹后执行hexo init\n>`$ hexo init`耐心等待一小会时间\n>![](用hexo和github搭建个人博客小站全攻略/5-1.png)\n>![](用hexo和github搭建个人博客小站全攻略/5-2.png)\n>如果看到以上信息说明hexo init成功了，接着打开刚刚创建的文件夹，可以看到这样的目录结构：\n>hexo\n>|--node_modules\n>|--scaffolds\n>|--source(存放文章)\n>|--themes(主题)\n>|----.gitignore\n>|----config.yml(站点配置文件)\n>|----db.json\n>|----package.json\n>|----package-lock.json\n>这里对hexo目录就不进行太多的讲解\n>需要详细了解的朋友，请转到: **[文档|hexo](https://hexo.io/zh-cn/docs/)**\n>![](用hexo和github搭建个人博客小站全攻略/5-3.png)\n### 3.部署你的博客网站到本地进行预览\n>按照顺序三步走\n\n>+ 清除缓存文件 (db.json) 和已生成的静态文件 (public)\n>`$ hexo clean`\n>+ 生成静态页面至public目录\n>`$ hexo generate`\n>+ 开启预览访问端口（默认端口4000，'ctrl + c'关闭server)\n>`$ hexo server`\n\n### 4.打开浏览器\n>访问[http://localhost:4000/](http://localhost:4000/)\n>访问后，应该可以看到如下页面，说明你的博客小站搭建成功了！\n>这个页面的主题是hexo官方自带主题landscape\n>![](用hexo和github搭建个人博客小站全攻略/5-4.png)\n### 5.主题配置\n>这里呢，我推荐使用**[Next主题](http://theme-next.iissnan.com/)**\n\n>+ 进入hexo根目录\n>`$ cd your-hexo-site`\n>+ 使用git clone下载Next主题到thems文件夹下\n>`$ git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n>等待下载完成后可以在hexo/themes文件夹下看到：\n>![](用hexo和github搭建个人博客小站全攻略/next.png)\n>打开hexo根目录下的config.yml文件\n>![](用hexo和github搭建个人博客小站全攻略/hexo-config.png)\n>找到字段`theme: landscape`\n>把`landscape`换成`next`，然后保存\n>接着按照部署到本地的方法执行这三步\n>`$ hexo clean`\n>`$ hexo generate`\n>`$ hexo server`\n>然后打开你的浏览器访问[http://localhost:4000/](http://localhost:4000/)\n>你会神奇的发现主题已经换成next的简约风格\n>![](用hexo和github搭建个人博客小站全攻略/5-6.png)\n### 6.更多关于Next主题的内容\n>请访问：**[Next使用文档](http://theme-next.iissnan.com/getting-started.html)**\n\n## 三.在Github上托管hexo博客\n\n### 1.注册github账号\n>访问[github](https://github.com/)\n>输入账号，邮箱，密码进行注册\n>![](用hexo和github搭建个人博客小站全攻略/6-1.png)\n### 2.新建一个项目\n>![](用hexo和github搭建个人博客小站全攻略/6-2.png)\n### 3.配置项目信息\n>注意项目名字格式必须是:`username.github.io`\n>`username`就是你注册时的用户名\n>![](用hexo和github搭建个人博客小站全攻略/6-5.png)\n### 4.创建好之后来到项目页面\n>复制一下https的项目地址\n>![](用hexo和github搭建个人博客小站全攻略/6-6.png)\n### 5.上传本地hexo博客项目到github上\n>有两种方式，一种是https传输，另一种是ssh秘钥传输\n\n>+ https传输\n>这种方式流程较为简单，但每次上传代码都需要输入github账号和密码\n>+ ssh秘钥传输\n>这种方式配置流程比较复杂，但配置完成后上传代码更为便捷\n#### 5.1 https方式上传代码\n>打开hexo根目录下的config.yml文件\n>找到`deploy:`字段，修改如下：\n```\ndeploy:\n  type: git\n  repo: https://github.com/Johnlly/johnlly.github.io.git\n  branch: master\n```\n>repo后填的参数就是你的项目地址，然后保存\n>打开命令提示符进入hexo目录\n>`$ hexo deploy`既可把本地代码上传至github\n>如果出现ERROR Deployer not found: git\n>请先执行`npm install --save hexo-deployer-git`\n>然后再`$ hexo deploy`\n>执行过程中会让你输入github的账号和密码\n>账号密码验证成功后提示以下信息说明上传代码成功\n>![](用hexo和github搭建个人博客小站全攻略/6-7.png)\n#### 5.2 ssh秘钥传输\n##### 5.2.1 检查本机现有的ssh秘钥\n>输入以下两条命令查看你是否有名为id_rsa和id_dsa.pub的2个文件\n>如果没有转到步骤2，否则请跳到第3步\n>`$ cd ~/.ssh`\n>`$ ls`\n##### 5.2.2 创建一个新的ssh秘钥\n>`$ ssh-keygen -t rsa -C \"注册Github用的邮箱\"`\n>输入命令后遇到需要你输入的时候，请按回车键，一共三次回车。\n>现在你已经生成了一个ssh秘钥了\n##### 5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)\n>`$ clip < ~/.ssh/id_rsa.pub`\n>运行这条命令可以将秘钥的内容复制到剪切板\n>然后打开github，添加ssh秘钥\n>![](用hexo和github搭建个人博客小站全攻略/6-10.png)\n##### 5.2.4 测试ssh秘钥是否成功添加到GitHub\n>`$ ssh -T git@github.com`注意就是运行此命令\n>执行过程中会有如下提示，选择yes即可\n>Are you sure you want to continue connecting (yes/no)? **yes**\n>你会看到如下有关成功的标志\n>You've successfully authenticated, but GitHub does not provide shell access.\n##### 5.2.5 用ssh方式上传代码至GitHub\n>打开hexo根目录下的config.yml文件\n>找到`deploy:`字段，修改如下：\n```\ndeploy:\n  type: git\n  repo: git@github.com:johnlly/johnlly.github.io.git\n  branch: master\n```\n>打开命令提示符进入hexo目录\n>执行`$ hexo deploy`即可上传\n#### 5.3 打开你的github项目页面\n>看到如下信息,你的博客代码已经成功的托管在github上了\n>![](用hexo和github搭建个人博客小站全攻略/6-8.png)\n#### 5.4 打开浏览器\n>输入`username.github.io`，`username`就是你的github用户名\n>例如我的[https://johnlly.github.io/](https://johnlly.github.io/)可以访问到页面\n>至此就大功告成了，剩下的就是主题的配置和文章的撰写了\n>![](用hexo和github搭建个人博客小站全攻略/6-9.png)\n#### 后续更新...","source":"_posts/用hexo和github搭建个人博客小站全攻略.md","raw":"---\ntitle: 用hexo和github搭建个人博客小站全攻略\ndate: 2018-08-20 08:58:52\ntoc: true \ntags: [hexo,github] \ncategories: hexo\n---\n# 如何用hexo与github搭建一个属于你自己的个人博客站点呢？\n***\n## 一.了解hexo与github\n\n### 1.hexo是什么？\n>**[hexo](https://hexo.io/zh-cn/docs/) 是一个快速、简洁且高效的博客框架。**Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n### 2.github是什么？\n\n>+ 1.**gitHub是一个面向开源及私有软件项目的托管平台**，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。\n>+ 2.一个**博客网站**建立好之后，想让所有人去访问，必须要有**服务器和域名**，仅仅在你的电脑上运行是远远不够的，而服务器和域名需要购买和备案(国内)，这其中要不但要花钱还要花时间去备案，所以对于一个博客站点来说，这些代价无疑是巨大的。\n>+ 3.**github是免费的**，可以把你写好的博客网站托管在github上边，通过**Github Pages**实现个人网站。\n>+ 4.**Github Pages是Github免费提供给开发者的一款托管个人网站的产品**，它可以免费提供一个域名`username.github.io`去访问你的博客网站，而`username`就是你在注册github的用户名，至于更详细的内容请接着往下看。\n>+ 5.我的小站：[pengqiangsheng.github.io](https://pengqiangsheng.github.io)\n\n### 3.如何安装？\n>安装hexo前，首先检查你的电脑是否安装下列应用程序：\n>1.[Node.js](https://nodejs.org/en/)\n>2.[Git](https://git-scm.com/)\n>安装Node.js和Git之后我们可以运行使用<kbd>Win</kbd>+<kbd>R</kbd>打开运行窗口，然后输入`cmd`进入命令提示符：\n>`$ node --version`\n>![](用hexo和github搭建个人博客小站全攻略/1.png)\n>如果看到上述内容说明Node.js已经安装成功了\n>`$ git --version`\n>![](用hexo和github搭建个人博客小站全攻略/2.png)\n>如果看到上述内容说明git已经安装成功了\n>如果出现提示“不是内部或外部命令...”请看第5点的注意事项\n### 4.安装hexo\n>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo\n>`$ npm install -g hexo-cli`\n>等待安装完成后\n>`$ hexo --version`\n>![](用hexo和github搭建个人博客小站全攻略/3.png)\n>看到这些信息说明hexo安装完成\n### 5.注意事项\n>1.如果出现提示“node不是内部或外部命令，也不是可运行的程序或批处理文件”此类的提示可能有两个原因\n\n>+ 环境变量 \n>\t百度“xxx环境变量如何添加”\n>+ 管理员权限的命令提示符\n>\t如果环境变量添加完成后还是不行，请运行管理员权限的命令提示符\n\n>2.关于想Node.js与Git的更深入的了解的小伙伴可以自行百度\n\n## 二.Hexo建站\n\n### 1.在你电脑的一个你熟悉的位置新建一个文件夹hexo\n>![](用hexo和github搭建个人博客小站全攻略/4.png)\n### 2.在命令提示符中进入这个文件夹后执行hexo init\n>`$ hexo init`耐心等待一小会时间\n>![](用hexo和github搭建个人博客小站全攻略/5-1.png)\n>![](用hexo和github搭建个人博客小站全攻略/5-2.png)\n>如果看到以上信息说明hexo init成功了，接着打开刚刚创建的文件夹，可以看到这样的目录结构：\n>hexo\n>|--node_modules\n>|--scaffolds\n>|--source(存放文章)\n>|--themes(主题)\n>|----.gitignore\n>|----config.yml(站点配置文件)\n>|----db.json\n>|----package.json\n>|----package-lock.json\n>这里对hexo目录就不进行太多的讲解\n>需要详细了解的朋友，请转到: **[文档|hexo](https://hexo.io/zh-cn/docs/)**\n>![](用hexo和github搭建个人博客小站全攻略/5-3.png)\n### 3.部署你的博客网站到本地进行预览\n>按照顺序三步走\n\n>+ 清除缓存文件 (db.json) 和已生成的静态文件 (public)\n>`$ hexo clean`\n>+ 生成静态页面至public目录\n>`$ hexo generate`\n>+ 开启预览访问端口（默认端口4000，'ctrl + c'关闭server)\n>`$ hexo server`\n\n### 4.打开浏览器\n>访问[http://localhost:4000/](http://localhost:4000/)\n>访问后，应该可以看到如下页面，说明你的博客小站搭建成功了！\n>这个页面的主题是hexo官方自带主题landscape\n>![](用hexo和github搭建个人博客小站全攻略/5-4.png)\n### 5.主题配置\n>这里呢，我推荐使用**[Next主题](http://theme-next.iissnan.com/)**\n\n>+ 进入hexo根目录\n>`$ cd your-hexo-site`\n>+ 使用git clone下载Next主题到thems文件夹下\n>`$ git clone https://github.com/iissnan/hexo-theme-next themes/next`\n\n>等待下载完成后可以在hexo/themes文件夹下看到：\n>![](用hexo和github搭建个人博客小站全攻略/next.png)\n>打开hexo根目录下的config.yml文件\n>![](用hexo和github搭建个人博客小站全攻略/hexo-config.png)\n>找到字段`theme: landscape`\n>把`landscape`换成`next`，然后保存\n>接着按照部署到本地的方法执行这三步\n>`$ hexo clean`\n>`$ hexo generate`\n>`$ hexo server`\n>然后打开你的浏览器访问[http://localhost:4000/](http://localhost:4000/)\n>你会神奇的发现主题已经换成next的简约风格\n>![](用hexo和github搭建个人博客小站全攻略/5-6.png)\n### 6.更多关于Next主题的内容\n>请访问：**[Next使用文档](http://theme-next.iissnan.com/getting-started.html)**\n\n## 三.在Github上托管hexo博客\n\n### 1.注册github账号\n>访问[github](https://github.com/)\n>输入账号，邮箱，密码进行注册\n>![](用hexo和github搭建个人博客小站全攻略/6-1.png)\n### 2.新建一个项目\n>![](用hexo和github搭建个人博客小站全攻略/6-2.png)\n### 3.配置项目信息\n>注意项目名字格式必须是:`username.github.io`\n>`username`就是你注册时的用户名\n>![](用hexo和github搭建个人博客小站全攻略/6-5.png)\n### 4.创建好之后来到项目页面\n>复制一下https的项目地址\n>![](用hexo和github搭建个人博客小站全攻略/6-6.png)\n### 5.上传本地hexo博客项目到github上\n>有两种方式，一种是https传输，另一种是ssh秘钥传输\n\n>+ https传输\n>这种方式流程较为简单，但每次上传代码都需要输入github账号和密码\n>+ ssh秘钥传输\n>这种方式配置流程比较复杂，但配置完成后上传代码更为便捷\n#### 5.1 https方式上传代码\n>打开hexo根目录下的config.yml文件\n>找到`deploy:`字段，修改如下：\n```\ndeploy:\n  type: git\n  repo: https://github.com/Johnlly/johnlly.github.io.git\n  branch: master\n```\n>repo后填的参数就是你的项目地址，然后保存\n>打开命令提示符进入hexo目录\n>`$ hexo deploy`既可把本地代码上传至github\n>如果出现ERROR Deployer not found: git\n>请先执行`npm install --save hexo-deployer-git`\n>然后再`$ hexo deploy`\n>执行过程中会让你输入github的账号和密码\n>账号密码验证成功后提示以下信息说明上传代码成功\n>![](用hexo和github搭建个人博客小站全攻略/6-7.png)\n#### 5.2 ssh秘钥传输\n##### 5.2.1 检查本机现有的ssh秘钥\n>输入以下两条命令查看你是否有名为id_rsa和id_dsa.pub的2个文件\n>如果没有转到步骤2，否则请跳到第3步\n>`$ cd ~/.ssh`\n>`$ ls`\n##### 5.2.2 创建一个新的ssh秘钥\n>`$ ssh-keygen -t rsa -C \"注册Github用的邮箱\"`\n>输入命令后遇到需要你输入的时候，请按回车键，一共三次回车。\n>现在你已经生成了一个ssh秘钥了\n##### 5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)\n>`$ clip < ~/.ssh/id_rsa.pub`\n>运行这条命令可以将秘钥的内容复制到剪切板\n>然后打开github，添加ssh秘钥\n>![](用hexo和github搭建个人博客小站全攻略/6-10.png)\n##### 5.2.4 测试ssh秘钥是否成功添加到GitHub\n>`$ ssh -T git@github.com`注意就是运行此命令\n>执行过程中会有如下提示，选择yes即可\n>Are you sure you want to continue connecting (yes/no)? **yes**\n>你会看到如下有关成功的标志\n>You've successfully authenticated, but GitHub does not provide shell access.\n##### 5.2.5 用ssh方式上传代码至GitHub\n>打开hexo根目录下的config.yml文件\n>找到`deploy:`字段，修改如下：\n```\ndeploy:\n  type: git\n  repo: git@github.com:johnlly/johnlly.github.io.git\n  branch: master\n```\n>打开命令提示符进入hexo目录\n>执行`$ hexo deploy`即可上传\n#### 5.3 打开你的github项目页面\n>看到如下信息,你的博客代码已经成功的托管在github上了\n>![](用hexo和github搭建个人博客小站全攻略/6-8.png)\n#### 5.4 打开浏览器\n>输入`username.github.io`，`username`就是你的github用户名\n>例如我的[https://johnlly.github.io/](https://johnlly.github.io/)可以访问到页面\n>至此就大功告成了，剩下的就是主题的配置和文章的撰写了\n>![](用hexo和github搭建个人博客小站全攻略/6-9.png)\n#### 后续更新...","slug":"用hexo和github搭建个人博客小站全攻略","published":1,"updated":"2019-04-13T01:13:58.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djit0023kstnj3zo1u20","content":"<h1 id=\"如何用hexo与github搭建一个属于你自己的个人博客站点呢？\"><a href=\"#如何用hexo与github搭建一个属于你自己的个人博客站点呢？\" class=\"headerlink\" title=\"如何用hexo与github搭建一个属于你自己的个人博客站点呢？\"></a>如何用hexo与github搭建一个属于你自己的个人博客站点呢？</h1><hr>\n<h2 id=\"一-了解hexo与github\"><a href=\"#一-了解hexo与github\" class=\"headerlink\" title=\"一.了解hexo与github\"></a>一.了解hexo与github</h2><h3 id=\"1-hexo是什么？\"><a href=\"#1-hexo是什么？\" class=\"headerlink\" title=\"1.hexo是什么？\"></a>1.hexo是什么？</h3><blockquote>\n<p><strong><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo</a> 是一个快速、简洁且高效的博客框架。</strong>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"2-github是什么？\"><a href=\"#2-github是什么？\" class=\"headerlink\" title=\"2.github是什么？\"></a>2.github是什么？</h3><blockquote>\n<ul>\n<li>1.<strong>gitHub是一个面向开源及私有软件项目的托管平台</strong>，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。</li>\n<li>2.一个<strong>博客网站</strong>建立好之后，想让所有人去访问，必须要有<strong>服务器和域名</strong>，仅仅在你的电脑上运行是远远不够的，而服务器和域名需要购买和备案(国内)，这其中要不但要花钱还要花时间去备案，所以对于一个博客站点来说，这些代价无疑是巨大的。</li>\n<li>3.<strong>github是免费的</strong>，可以把你写好的博客网站托管在github上边，通过<strong>Github Pages</strong>实现个人网站。</li>\n<li>4.<strong>Github Pages是Github免费提供给开发者的一款托管个人网站的产品</strong>，它可以免费提供一个域名<code>username.github.io</code>去访问你的博客网站，而<code>username</code>就是你在注册github的用户名，至于更详细的内容请接着往下看。</li>\n<li>5.我的小站：<a href=\"https://pengqiangsheng.github.io\" target=\"_blank\" rel=\"noopener\">pengqiangsheng.github.io</a></li>\n</ul>\n</blockquote>\n<h3 id=\"3-如何安装？\"><a href=\"#3-如何安装？\" class=\"headerlink\" title=\"3.如何安装？\"></a>3.如何安装？</h3><blockquote>\n<p>安装hexo前，首先检查你的电脑是否安装下列应用程序：<br>1.<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br>2.<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a><br>安装Node.js和Git之后我们可以运行使用<kbd>Win</kbd>+<kbd>R</kbd>打开运行窗口，然后输入<code>cmd</code>进入命令提示符：<br><code>$ node --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/1.png\" alt=\"\"><br>如果看到上述内容说明Node.js已经安装成功了<br><code>$ git --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/2.png\" alt=\"\"><br>如果看到上述内容说明git已经安装成功了<br>如果出现提示“不是内部或外部命令…”请看第5点的注意事项</p>\n</blockquote>\n<h3 id=\"4-安装hexo\"><a href=\"#4-安装hexo\" class=\"headerlink\" title=\"4.安装hexo\"></a>4.安装hexo</h3><blockquote>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo<br><code>$ npm install -g hexo-cli</code><br>等待安装完成后<br><code>$ hexo --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/3.png\" alt=\"\"><br>看到这些信息说明hexo安装完成</p>\n</blockquote>\n<h3 id=\"5-注意事项\"><a href=\"#5-注意事项\" class=\"headerlink\" title=\"5.注意事项\"></a>5.注意事项</h3><blockquote>\n<p>1.如果出现提示“node不是内部或外部命令，也不是可运行的程序或批处理文件”此类的提示可能有两个原因</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>环境变量<br> 百度“xxx环境变量如何添加”</li>\n<li>管理员权限的命令提示符<br> 如果环境变量添加完成后还是不行，请运行管理员权限的命令提示符</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>2.关于想Node.js与Git的更深入的了解的小伙伴可以自行百度</p>\n</blockquote>\n<h2 id=\"二-Hexo建站\"><a href=\"#二-Hexo建站\" class=\"headerlink\" title=\"二.Hexo建站\"></a>二.Hexo建站</h2><h3 id=\"1-在你电脑的一个你熟悉的位置新建一个文件夹hexo\"><a href=\"#1-在你电脑的一个你熟悉的位置新建一个文件夹hexo\" class=\"headerlink\" title=\"1.在你电脑的一个你熟悉的位置新建一个文件夹hexo\"></a>1.在你电脑的一个你熟悉的位置新建一个文件夹hexo</h3><blockquote>\n<p><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/4.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"2-在命令提示符中进入这个文件夹后执行hexo-init\"><a href=\"#2-在命令提示符中进入这个文件夹后执行hexo-init\" class=\"headerlink\" title=\"2.在命令提示符中进入这个文件夹后执行hexo init\"></a>2.在命令提示符中进入这个文件夹后执行hexo init</h3><blockquote>\n<p><code>$ hexo init</code>耐心等待一小会时间<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-1.png\" alt=\"\"><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-2.png\" alt=\"\"><br>如果看到以上信息说明hexo init成功了，接着打开刚刚创建的文件夹，可以看到这样的目录结构：<br>hexo<br>|–node_modules<br>|–scaffolds<br>|–source(存放文章)<br>|–themes(主题)<br>|—-.gitignore<br>|—-config.yml(站点配置文件)<br>|—-db.json<br>|—-package.json<br>|—-package-lock.json<br>这里对hexo目录就不进行太多的讲解<br>需要详细了解的朋友，请转到: <strong><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">文档|hexo</a></strong><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-3.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-部署你的博客网站到本地进行预览\"><a href=\"#3-部署你的博客网站到本地进行预览\" class=\"headerlink\" title=\"3.部署你的博客网站到本地进行预览\"></a>3.部署你的博客网站到本地进行预览</h3><blockquote>\n<p>按照顺序三步走</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>清除缓存文件 (db.json) 和已生成的静态文件 (public)<br><code>$ hexo clean</code></li>\n<li>生成静态页面至public目录<br><code>$ hexo generate</code></li>\n<li>开启预览访问端口（默认端口4000，’ctrl + c’关闭server)<br><code>$ hexo server</code></li>\n</ul>\n</blockquote>\n<h3 id=\"4-打开浏览器\"><a href=\"#4-打开浏览器\" class=\"headerlink\" title=\"4.打开浏览器\"></a>4.打开浏览器</h3><blockquote>\n<p>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>访问后，应该可以看到如下页面，说明你的博客小站搭建成功了！<br>这个页面的主题是hexo官方自带主题landscape<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-4.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-主题配置\"><a href=\"#5-主题配置\" class=\"headerlink\" title=\"5.主题配置\"></a>5.主题配置</h3><blockquote>\n<p>这里呢，我推荐使用<strong><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题</a></strong></p>\n</blockquote>\n<blockquote>\n<ul>\n<li>进入hexo根目录<br><code>$ cd your-hexo-site</code></li>\n<li>使用git clone下载Next主题到thems文件夹下<br><code>$ git clone https://github.com/iissnan/hexo-theme-next themes/next</code></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>等待下载完成后可以在hexo/themes文件夹下看到：<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/next.png\" alt=\"\"><br>打开hexo根目录下的config.yml文件<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/hexo-config.png\" alt=\"\"><br>找到字段<code>theme: landscape</code><br>把<code>landscape</code>换成<code>next</code>，然后保存<br>接着按照部署到本地的方法执行这三步<br><code>$ hexo clean</code><br><code>$ hexo generate</code><br><code>$ hexo server</code><br>然后打开你的浏览器访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>你会神奇的发现主题已经换成next的简约风格<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-6.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"6-更多关于Next主题的内容\"><a href=\"#6-更多关于Next主题的内容\" class=\"headerlink\" title=\"6.更多关于Next主题的内容\"></a>6.更多关于Next主题的内容</h3><blockquote>\n<p>请访问：<strong><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next使用文档</a></strong></p>\n</blockquote>\n<h2 id=\"三-在Github上托管hexo博客\"><a href=\"#三-在Github上托管hexo博客\" class=\"headerlink\" title=\"三.在Github上托管hexo博客\"></a>三.在Github上托管hexo博客</h2><h3 id=\"1-注册github账号\"><a href=\"#1-注册github账号\" class=\"headerlink\" title=\"1.注册github账号\"></a>1.注册github账号</h3><blockquote>\n<p>访问<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a><br>输入账号，邮箱，密码进行注册<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-1.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"2-新建一个项目\"><a href=\"#2-新建一个项目\" class=\"headerlink\" title=\"2.新建一个项目\"></a>2.新建一个项目</h3><blockquote>\n<p><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-2.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-配置项目信息\"><a href=\"#3-配置项目信息\" class=\"headerlink\" title=\"3.配置项目信息\"></a>3.配置项目信息</h3><blockquote>\n<p>注意项目名字格式必须是:<code>username.github.io</code><br><code>username</code>就是你注册时的用户名<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-5.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"4-创建好之后来到项目页面\"><a href=\"#4-创建好之后来到项目页面\" class=\"headerlink\" title=\"4.创建好之后来到项目页面\"></a>4.创建好之后来到项目页面</h3><blockquote>\n<p>复制一下https的项目地址<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-6.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-上传本地hexo博客项目到github上\"><a href=\"#5-上传本地hexo博客项目到github上\" class=\"headerlink\" title=\"5.上传本地hexo博客项目到github上\"></a>5.上传本地hexo博客项目到github上</h3><blockquote>\n<p>有两种方式，一种是https传输，另一种是ssh秘钥传输</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>https传输<br>这种方式流程较为简单，但每次上传代码都需要输入github账号和密码</li>\n<li>ssh秘钥传输<br>这种方式配置流程比较复杂，但配置完成后上传代码更为便捷</li>\n</ul>\n</blockquote>\n<h4 id=\"5-1-https方式上传代码\"><a href=\"#5-1-https方式上传代码\" class=\"headerlink\" title=\"5.1 https方式上传代码\"></a>5.1 https方式上传代码</h4><blockquote>\n<p>打开hexo根目录下的config.yml文件<br>找到<code>deploy:</code>字段，修改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/Johnlly/johnlly.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>repo后填的参数就是你的项目地址，然后保存<br>打开命令提示符进入hexo目录<br><code>$ hexo deploy</code>既可把本地代码上传至github<br>如果出现ERROR Deployer not found: git<br>请先执行<code>npm install --save hexo-deployer-git</code><br>然后再<code>$ hexo deploy</code><br>执行过程中会让你输入github的账号和密码<br>账号密码验证成功后提示以下信息说明上传代码成功<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-7.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"5-2-ssh秘钥传输\"><a href=\"#5-2-ssh秘钥传输\" class=\"headerlink\" title=\"5.2 ssh秘钥传输\"></a>5.2 ssh秘钥传输</h4><h5 id=\"5-2-1-检查本机现有的ssh秘钥\"><a href=\"#5-2-1-检查本机现有的ssh秘钥\" class=\"headerlink\" title=\"5.2.1 检查本机现有的ssh秘钥\"></a>5.2.1 检查本机现有的ssh秘钥</h5><blockquote>\n<p>输入以下两条命令查看你是否有名为id_rsa和id_dsa.pub的2个文件<br>如果没有转到步骤2，否则请跳到第3步<br><code>$ cd ~/.ssh</code><br><code>$ ls</code></p>\n</blockquote>\n<h5 id=\"5-2-2-创建一个新的ssh秘钥\"><a href=\"#5-2-2-创建一个新的ssh秘钥\" class=\"headerlink\" title=\"5.2.2 创建一个新的ssh秘钥\"></a>5.2.2 创建一个新的ssh秘钥</h5><blockquote>\n<p><code>$ ssh-keygen -t rsa -C &quot;注册Github用的邮箱&quot;</code><br>输入命令后遇到需要你输入的时候，请按回车键，一共三次回车。<br>现在你已经生成了一个ssh秘钥了</p>\n</blockquote>\n<h5 id=\"5-2-3-将你的SSH-key添加到GitHub-或者别的托管平台\"><a href=\"#5-2-3-将你的SSH-key添加到GitHub-或者别的托管平台\" class=\"headerlink\" title=\"5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)\"></a>5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)</h5><blockquote>\n<p><code>$ clip &lt; ~/.ssh/id_rsa.pub</code><br>运行这条命令可以将秘钥的内容复制到剪切板<br>然后打开github，添加ssh秘钥<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-10.png\" alt=\"\"></p>\n</blockquote>\n<h5 id=\"5-2-4-测试ssh秘钥是否成功添加到GitHub\"><a href=\"#5-2-4-测试ssh秘钥是否成功添加到GitHub\" class=\"headerlink\" title=\"5.2.4 测试ssh秘钥是否成功添加到GitHub\"></a>5.2.4 测试ssh秘钥是否成功添加到GitHub</h5><blockquote>\n<p><code>$ ssh -T git@github.com</code>注意就是运行此命令<br>执行过程中会有如下提示，选择yes即可<br>Are you sure you want to continue connecting (yes/no)? <strong>yes</strong><br>你会看到如下有关成功的标志<br>You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<h5 id=\"5-2-5-用ssh方式上传代码至GitHub\"><a href=\"#5-2-5-用ssh方式上传代码至GitHub\" class=\"headerlink\" title=\"5.2.5 用ssh方式上传代码至GitHub\"></a>5.2.5 用ssh方式上传代码至GitHub</h5><blockquote>\n<p>打开hexo根目录下的config.yml文件<br>找到<code>deploy:</code>字段，修改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:johnlly/johnlly.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>打开命令提示符进入hexo目录<br>执行<code>$ hexo deploy</code>即可上传</p>\n</blockquote>\n<h4 id=\"5-3-打开你的github项目页面\"><a href=\"#5-3-打开你的github项目页面\" class=\"headerlink\" title=\"5.3 打开你的github项目页面\"></a>5.3 打开你的github项目页面</h4><blockquote>\n<p>看到如下信息,你的博客代码已经成功的托管在github上了<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-8.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"5-4-打开浏览器\"><a href=\"#5-4-打开浏览器\" class=\"headerlink\" title=\"5.4 打开浏览器\"></a>5.4 打开浏览器</h4><blockquote>\n<p>输入<code>username.github.io</code>，<code>username</code>就是你的github用户名<br>例如我的<a href=\"https://johnlly.github.io/\" target=\"_blank\" rel=\"noopener\">https://johnlly.github.io/</a>可以访问到页面<br>至此就大功告成了，剩下的就是主题的配置和文章的撰写了<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-9.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"后续更新…\"><a href=\"#后续更新…\" class=\"headerlink\" title=\"后续更新…\"></a>后续更新…</h4>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何用hexo与github搭建一个属于你自己的个人博客站点呢？\"><a href=\"#如何用hexo与github搭建一个属于你自己的个人博客站点呢？\" class=\"headerlink\" title=\"如何用hexo与github搭建一个属于你自己的个人博客站点呢？\"></a>如何用hexo与github搭建一个属于你自己的个人博客站点呢？</h1><hr>\n<h2 id=\"一-了解hexo与github\"><a href=\"#一-了解hexo与github\" class=\"headerlink\" title=\"一.了解hexo与github\"></a>一.了解hexo与github</h2><h3 id=\"1-hexo是什么？\"><a href=\"#1-hexo是什么？\" class=\"headerlink\" title=\"1.hexo是什么？\"></a>1.hexo是什么？</h3><blockquote>\n<p><strong><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo</a> 是一个快速、简洁且高效的博客框架。</strong>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<h3 id=\"2-github是什么？\"><a href=\"#2-github是什么？\" class=\"headerlink\" title=\"2.github是什么？\"></a>2.github是什么？</h3><blockquote>\n<ul>\n<li>1.<strong>gitHub是一个面向开源及私有软件项目的托管平台</strong>，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。</li>\n<li>2.一个<strong>博客网站</strong>建立好之后，想让所有人去访问，必须要有<strong>服务器和域名</strong>，仅仅在你的电脑上运行是远远不够的，而服务器和域名需要购买和备案(国内)，这其中要不但要花钱还要花时间去备案，所以对于一个博客站点来说，这些代价无疑是巨大的。</li>\n<li>3.<strong>github是免费的</strong>，可以把你写好的博客网站托管在github上边，通过<strong>Github Pages</strong>实现个人网站。</li>\n<li>4.<strong>Github Pages是Github免费提供给开发者的一款托管个人网站的产品</strong>，它可以免费提供一个域名<code>username.github.io</code>去访问你的博客网站，而<code>username</code>就是你在注册github的用户名，至于更详细的内容请接着往下看。</li>\n<li>5.我的小站：<a href=\"https://pengqiangsheng.github.io\" target=\"_blank\" rel=\"noopener\">pengqiangsheng.github.io</a></li>\n</ul>\n</blockquote>\n<h3 id=\"3-如何安装？\"><a href=\"#3-如何安装？\" class=\"headerlink\" title=\"3.如何安装？\"></a>3.如何安装？</h3><blockquote>\n<p>安装hexo前，首先检查你的电脑是否安装下列应用程序：<br>1.<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br>2.<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a><br>安装Node.js和Git之后我们可以运行使用<kbd>Win</kbd>+<kbd>R</kbd>打开运行窗口，然后输入<code>cmd</code>进入命令提示符：<br><code>$ node --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/1.png\" alt=\"\"><br>如果看到上述内容说明Node.js已经安装成功了<br><code>$ git --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/2.png\" alt=\"\"><br>如果看到上述内容说明git已经安装成功了<br>如果出现提示“不是内部或外部命令…”请看第5点的注意事项</p>\n</blockquote>\n<h3 id=\"4-安装hexo\"><a href=\"#4-安装hexo\" class=\"headerlink\" title=\"4.安装hexo\"></a>4.安装hexo</h3><blockquote>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo<br><code>$ npm install -g hexo-cli</code><br>等待安装完成后<br><code>$ hexo --version</code><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/3.png\" alt=\"\"><br>看到这些信息说明hexo安装完成</p>\n</blockquote>\n<h3 id=\"5-注意事项\"><a href=\"#5-注意事项\" class=\"headerlink\" title=\"5.注意事项\"></a>5.注意事项</h3><blockquote>\n<p>1.如果出现提示“node不是内部或外部命令，也不是可运行的程序或批处理文件”此类的提示可能有两个原因</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>环境变量<br> 百度“xxx环境变量如何添加”</li>\n<li>管理员权限的命令提示符<br> 如果环境变量添加完成后还是不行，请运行管理员权限的命令提示符</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>2.关于想Node.js与Git的更深入的了解的小伙伴可以自行百度</p>\n</blockquote>\n<h2 id=\"二-Hexo建站\"><a href=\"#二-Hexo建站\" class=\"headerlink\" title=\"二.Hexo建站\"></a>二.Hexo建站</h2><h3 id=\"1-在你电脑的一个你熟悉的位置新建一个文件夹hexo\"><a href=\"#1-在你电脑的一个你熟悉的位置新建一个文件夹hexo\" class=\"headerlink\" title=\"1.在你电脑的一个你熟悉的位置新建一个文件夹hexo\"></a>1.在你电脑的一个你熟悉的位置新建一个文件夹hexo</h3><blockquote>\n<p><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/4.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"2-在命令提示符中进入这个文件夹后执行hexo-init\"><a href=\"#2-在命令提示符中进入这个文件夹后执行hexo-init\" class=\"headerlink\" title=\"2.在命令提示符中进入这个文件夹后执行hexo init\"></a>2.在命令提示符中进入这个文件夹后执行hexo init</h3><blockquote>\n<p><code>$ hexo init</code>耐心等待一小会时间<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-1.png\" alt=\"\"><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-2.png\" alt=\"\"><br>如果看到以上信息说明hexo init成功了，接着打开刚刚创建的文件夹，可以看到这样的目录结构：<br>hexo<br>|–node_modules<br>|–scaffolds<br>|–source(存放文章)<br>|–themes(主题)<br>|—-.gitignore<br>|—-config.yml(站点配置文件)<br>|—-db.json<br>|—-package.json<br>|—-package-lock.json<br>这里对hexo目录就不进行太多的讲解<br>需要详细了解的朋友，请转到: <strong><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">文档|hexo</a></strong><br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-3.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-部署你的博客网站到本地进行预览\"><a href=\"#3-部署你的博客网站到本地进行预览\" class=\"headerlink\" title=\"3.部署你的博客网站到本地进行预览\"></a>3.部署你的博客网站到本地进行预览</h3><blockquote>\n<p>按照顺序三步走</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>清除缓存文件 (db.json) 和已生成的静态文件 (public)<br><code>$ hexo clean</code></li>\n<li>生成静态页面至public目录<br><code>$ hexo generate</code></li>\n<li>开启预览访问端口（默认端口4000，’ctrl + c’关闭server)<br><code>$ hexo server</code></li>\n</ul>\n</blockquote>\n<h3 id=\"4-打开浏览器\"><a href=\"#4-打开浏览器\" class=\"headerlink\" title=\"4.打开浏览器\"></a>4.打开浏览器</h3><blockquote>\n<p>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>访问后，应该可以看到如下页面，说明你的博客小站搭建成功了！<br>这个页面的主题是hexo官方自带主题landscape<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-4.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-主题配置\"><a href=\"#5-主题配置\" class=\"headerlink\" title=\"5.主题配置\"></a>5.主题配置</h3><blockquote>\n<p>这里呢，我推荐使用<strong><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题</a></strong></p>\n</blockquote>\n<blockquote>\n<ul>\n<li>进入hexo根目录<br><code>$ cd your-hexo-site</code></li>\n<li>使用git clone下载Next主题到thems文件夹下<br><code>$ git clone https://github.com/iissnan/hexo-theme-next themes/next</code></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>等待下载完成后可以在hexo/themes文件夹下看到：<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/next.png\" alt=\"\"><br>打开hexo根目录下的config.yml文件<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/hexo-config.png\" alt=\"\"><br>找到字段<code>theme: landscape</code><br>把<code>landscape</code>换成<code>next</code>，然后保存<br>接着按照部署到本地的方法执行这三步<br><code>$ hexo clean</code><br><code>$ hexo generate</code><br><code>$ hexo server</code><br>然后打开你的浏览器访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>你会神奇的发现主题已经换成next的简约风格<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/5-6.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"6-更多关于Next主题的内容\"><a href=\"#6-更多关于Next主题的内容\" class=\"headerlink\" title=\"6.更多关于Next主题的内容\"></a>6.更多关于Next主题的内容</h3><blockquote>\n<p>请访问：<strong><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next使用文档</a></strong></p>\n</blockquote>\n<h2 id=\"三-在Github上托管hexo博客\"><a href=\"#三-在Github上托管hexo博客\" class=\"headerlink\" title=\"三.在Github上托管hexo博客\"></a>三.在Github上托管hexo博客</h2><h3 id=\"1-注册github账号\"><a href=\"#1-注册github账号\" class=\"headerlink\" title=\"1.注册github账号\"></a>1.注册github账号</h3><blockquote>\n<p>访问<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a><br>输入账号，邮箱，密码进行注册<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-1.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"2-新建一个项目\"><a href=\"#2-新建一个项目\" class=\"headerlink\" title=\"2.新建一个项目\"></a>2.新建一个项目</h3><blockquote>\n<p><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-2.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"3-配置项目信息\"><a href=\"#3-配置项目信息\" class=\"headerlink\" title=\"3.配置项目信息\"></a>3.配置项目信息</h3><blockquote>\n<p>注意项目名字格式必须是:<code>username.github.io</code><br><code>username</code>就是你注册时的用户名<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-5.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"4-创建好之后来到项目页面\"><a href=\"#4-创建好之后来到项目页面\" class=\"headerlink\" title=\"4.创建好之后来到项目页面\"></a>4.创建好之后来到项目页面</h3><blockquote>\n<p>复制一下https的项目地址<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-6.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"5-上传本地hexo博客项目到github上\"><a href=\"#5-上传本地hexo博客项目到github上\" class=\"headerlink\" title=\"5.上传本地hexo博客项目到github上\"></a>5.上传本地hexo博客项目到github上</h3><blockquote>\n<p>有两种方式，一种是https传输，另一种是ssh秘钥传输</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>https传输<br>这种方式流程较为简单，但每次上传代码都需要输入github账号和密码</li>\n<li>ssh秘钥传输<br>这种方式配置流程比较复杂，但配置完成后上传代码更为便捷</li>\n</ul>\n</blockquote>\n<h4 id=\"5-1-https方式上传代码\"><a href=\"#5-1-https方式上传代码\" class=\"headerlink\" title=\"5.1 https方式上传代码\"></a>5.1 https方式上传代码</h4><blockquote>\n<p>打开hexo根目录下的config.yml文件<br>找到<code>deploy:</code>字段，修改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/Johnlly/johnlly.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>repo后填的参数就是你的项目地址，然后保存<br>打开命令提示符进入hexo目录<br><code>$ hexo deploy</code>既可把本地代码上传至github<br>如果出现ERROR Deployer not found: git<br>请先执行<code>npm install --save hexo-deployer-git</code><br>然后再<code>$ hexo deploy</code><br>执行过程中会让你输入github的账号和密码<br>账号密码验证成功后提示以下信息说明上传代码成功<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-7.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"5-2-ssh秘钥传输\"><a href=\"#5-2-ssh秘钥传输\" class=\"headerlink\" title=\"5.2 ssh秘钥传输\"></a>5.2 ssh秘钥传输</h4><h5 id=\"5-2-1-检查本机现有的ssh秘钥\"><a href=\"#5-2-1-检查本机现有的ssh秘钥\" class=\"headerlink\" title=\"5.2.1 检查本机现有的ssh秘钥\"></a>5.2.1 检查本机现有的ssh秘钥</h5><blockquote>\n<p>输入以下两条命令查看你是否有名为id_rsa和id_dsa.pub的2个文件<br>如果没有转到步骤2，否则请跳到第3步<br><code>$ cd ~/.ssh</code><br><code>$ ls</code></p>\n</blockquote>\n<h5 id=\"5-2-2-创建一个新的ssh秘钥\"><a href=\"#5-2-2-创建一个新的ssh秘钥\" class=\"headerlink\" title=\"5.2.2 创建一个新的ssh秘钥\"></a>5.2.2 创建一个新的ssh秘钥</h5><blockquote>\n<p><code>$ ssh-keygen -t rsa -C &quot;注册Github用的邮箱&quot;</code><br>输入命令后遇到需要你输入的时候，请按回车键，一共三次回车。<br>现在你已经生成了一个ssh秘钥了</p>\n</blockquote>\n<h5 id=\"5-2-3-将你的SSH-key添加到GitHub-或者别的托管平台\"><a href=\"#5-2-3-将你的SSH-key添加到GitHub-或者别的托管平台\" class=\"headerlink\" title=\"5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)\"></a>5.2.3 将你的SSH key添加到GitHub(或者别的托管平台)</h5><blockquote>\n<p><code>$ clip &lt; ~/.ssh/id_rsa.pub</code><br>运行这条命令可以将秘钥的内容复制到剪切板<br>然后打开github，添加ssh秘钥<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-10.png\" alt=\"\"></p>\n</blockquote>\n<h5 id=\"5-2-4-测试ssh秘钥是否成功添加到GitHub\"><a href=\"#5-2-4-测试ssh秘钥是否成功添加到GitHub\" class=\"headerlink\" title=\"5.2.4 测试ssh秘钥是否成功添加到GitHub\"></a>5.2.4 测试ssh秘钥是否成功添加到GitHub</h5><blockquote>\n<p><code>$ ssh -T git@github.com</code>注意就是运行此命令<br>执行过程中会有如下提示，选择yes即可<br>Are you sure you want to continue connecting (yes/no)? <strong>yes</strong><br>你会看到如下有关成功的标志<br>You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<h5 id=\"5-2-5-用ssh方式上传代码至GitHub\"><a href=\"#5-2-5-用ssh方式上传代码至GitHub\" class=\"headerlink\" title=\"5.2.5 用ssh方式上传代码至GitHub\"></a>5.2.5 用ssh方式上传代码至GitHub</h5><blockquote>\n<p>打开hexo根目录下的config.yml文件<br>找到<code>deploy:</code>字段，修改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:johnlly/johnlly.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>打开命令提示符进入hexo目录<br>执行<code>$ hexo deploy</code>即可上传</p>\n</blockquote>\n<h4 id=\"5-3-打开你的github项目页面\"><a href=\"#5-3-打开你的github项目页面\" class=\"headerlink\" title=\"5.3 打开你的github项目页面\"></a>5.3 打开你的github项目页面</h4><blockquote>\n<p>看到如下信息,你的博客代码已经成功的托管在github上了<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-8.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"5-4-打开浏览器\"><a href=\"#5-4-打开浏览器\" class=\"headerlink\" title=\"5.4 打开浏览器\"></a>5.4 打开浏览器</h4><blockquote>\n<p>输入<code>username.github.io</code>，<code>username</code>就是你的github用户名<br>例如我的<a href=\"https://johnlly.github.io/\" target=\"_blank\" rel=\"noopener\">https://johnlly.github.io/</a>可以访问到页面<br>至此就大功告成了，剩下的就是主题的配置和文章的撰写了<br><img src=\"/2018/08/20/用hexo和github搭建个人博客小站全攻略/6-9.png\" alt=\"\"></p>\n</blockquote>\n<h4 id=\"后续更新…\"><a href=\"#后续更新…\" class=\"headerlink\" title=\"后续更新…\"></a>后续更新…</h4>"},{"title":"经典游戏贪吃蛇Snake","date":"2018-08-24T05:42:31.000Z","_content":"# H5小游戏100例: 贪吃蛇\n\n贪吃蛇的经典玩法有两种：\n1. 积分闯关\n2. 一吃到底\n\n第一种是笔者小时候在掌上游戏机最先体验到的（不小心暴露了年龄），具体玩法是蛇吃完一定数量的食物后就通关，通关后速度会加快；第二种是诺基亚在1997年在其自家手机上安装的游戏，它的玩法是吃到没食物为止。笔者要实现的就是第二种玩法。\n\n## MVC设计模式\n\n基于贪吃蛇的经典，笔者在实现它时也使用一种经典的设计模型：MVC（即：Model - View - Control）。游戏的各种状态与数据结构由 Model 来管理；View 用于显示 Model 的变化；用户与游戏的交互由 Control 完成（Control 提供各种游戏API接口）。\n\nModel 是游戏的核心也是本文的主要内容；View 会涉及到部分性能问题；Control 负责业务逻辑。 这样设计的好处是： Model完全独立，View 是 Model 的状态机，Model 与 View 都由 Control 来驱动。\n\n## Model\n看一张贪吃蛇的经典图片。  \n\n![诺基亚](http://7xv39r.com1.z0.glb.clouddn.com/20170922_nokia.png?v=1)\n\n贪吃蛇有四个关键的参与对象：\n1. 蛇（snake）\n2. 食物（food）\n3. 墙（bounds）\n4. 舞台（zone）\n\n舞台是一个 `m * n`  的矩阵（二维数组），矩阵的索引边界是舞台的墙，矩阵上的成员用于标记食物和蛇的位置。\n\n空舞台如下：\n```javascript\n[\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n]\n```\n\n食物（F）和蛇（S）出现在舞台上：\n```javascript\n[\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,F,0,0,0,0,0,0,0],\n\t[0,0,0,S,S,S,S,0,0,0],\n\t[0,0,0,0,0,0,S,0,0,0],\n\t[0,0,0,0,S,S,S,0,0,0],\n\t[0,0,0,0,S,0,0,0,0,0],\n\t[0,0,0,0,S,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n]\n```\n由于操作二维数组不如一维数组方便，所以笔者使用的是一维数组， 如下：\n```javascript\n[\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,F,0,0,0,0,0,0,0,\n\t0,0,0,S,S,S,S,0,0,0,\n\t0,0,0,0,0,0,S,0,0,0,\n\t0,0,0,0,S,S,S,0,0,0,\n\t0,0,0,0,S,0,0,0,0,0,\n\t0,0,0,0,S,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n]\n```\n舞台矩阵上蛇与食物只是舞台对二者的映射，它们彼此都有独立的数据结构：\n\n- 蛇是一串坐标索引链表；\n- 食物是一个指向舞台坐标的索引值。\n\n### 蛇的活动\n\n蛇的活动有三种，如下：\n- 移动（move）\n- 吃食（eat）\n- 碰撞（collision）\n\n#### 移动\n\n蛇在移动时，内部发生了什么变化？ \n\n![蠕动](http://7xv39r.com1.z0.glb.clouddn.com/20170922_snake.gif) \n\n蛇链表在一次移动过程中做了两件事：**向表头插入一个新节点，同时剔除表尾一个旧节点**。用一个数组来代表蛇链表，那么蛇的移动就是以下的伪代码：\n```javascript\nfunction move(next) {\n\tsnake.pop() & snake.unshift(next); \n} \n```\n**数组作为蛇链表合适吗？**\n这是笔者最开始思考的问题，毕竟数组的 `unshift & pop` 可以无缝表示蛇的移动。不过，方便不代表性能好，`unshift` 向数组插入元素的时间复杂度是 O(n)， `pop` 剔除数组尾元素的时间复杂度是 O(1)。\n\n蛇的移动是一个高频率的动作，如果一次动作的算法复杂度为 O(n) 并且蛇的长度比较大，那么游戏的性能会有问题。笔者想实现的贪吃蛇理论上讲是一条长蛇，所以笔者在本文章的回复是 ------ **数组不适合作为蛇链表**。\n\n**蛇链表必须是真正的链表结构。**\n链表删除或插入一个节点的时间复杂度为O(1)，用链表作为蛇链表的数据结构能提高游戏的性能。javascript 没有现成的链表结构，笔者写了一个叫 [Chain](https://github.com/leeenx/es6-utils#chain) 的链表类，`Chain` 提供了 `unshfit & pop`。以下伪代码是创建一条蛇链表：\n\n```javascript\nlet snake = new Chain(); \n```\n\n_由于篇幅问题这里就不介绍 `Chain` 是如何实现的，有兴趣的同学可以移步到: [https://github.com/leeenx/es6-utils#chain](https://github.com/leeenx/es6-utils#chain)_\n\n#### 吃食 & 碰撞\n\n「吃食」与「碰撞」区别在于吃食撞上了「食物」，碰撞撞上了「墙」。笔者认为「吃食」与「碰撞」属于蛇一次「移动」的三个可能结果的两个分支。蛇移动的三个可能结果是：「前进」、「吃食」和「碰撞」。\n\n回头看一下蛇移动的伪代码：\n```javascript\nfunction move(next) {\n\tsnake.pop() & snake.unshift(next); \n} \n```\n代码中的 `next` 表示蛇头即将进入的格子的索引值，只有当这个格子是`0`时蛇才能「前进」，当这个格子是 `S` 表示「碰撞」自己，当这个格子是 `F`表示吃食。\n\n**好像少了撞墙？**\n笔者在设计过程中，并没有把墙设计在舞台的矩阵中，而是通过索引出界的方式来表示撞墙。简单地说就是 `next === -1` 时表示出界和撞墙。\n\n以下伪代码表示蛇的整上活动过程：\n```javascript\n// B 表示撞墙\nlet cell = -1 === next ? B : zone[next]; \nswitch(cell) {\n\t// 吃食\n\tcase F: eat(); break; \n\t// 撞到自己\n\tcase S: collision(S); break; \n\t// 撞墙\n\tcase B: collision(B): break; \n\t// 前进\n\tdefault: move; \n}\n```\n\n### 随机投食\n随机投食是指随机挑选舞台的一个索引值用于映射食物的位置。这似乎很简单，可以直接这样写：\n```javascript\n// 伪代码\nfood = Math.random(zone.length) >> 0; \n```\n如果考虑到投食的前提 ------ 不与蛇身重叠，你会发现上面的随机代码并不能保证投食位置不与蛇身重叠。由于这个算法的安全性带有赌博性质，且把它称作「赌博算法」。为了保证投食的安全性，笔者把算法扩展了一下：\n```javascript\n// 伪代码\nfunction feed() {\n\tlet index = Math.random(zone.length) >> 0; \n\t// 当前位置是否被占用\n\treturn zone[index] === S ? feed() : index; \n}\nfood = feed(); \n```\n上面的代码虽然在理论上可以保证投食的绝对安全，不过笔者把这个算法称作「不要命的赌徒算法」，因为上面的算法有致命的BUG ------ 超长递归 or 死循环。\n\n为了解决上面的致命问题，笔者设计了下面的算法来做随机投食：\n```javascript\n// 伪代码\nfunction feed() {\n\t// 未被占用的空格数\n\tlet len = zone.length - snake.length; \n\t// 无法投食\n\tif(len === 0) return ; \n\t// zone的索引\n\tlet index = 0, \n\t// 空格计数器\n\tcount = 0, \n\t// 第 rnd 个空格子是最终要投食的位置\n\trnd = Math.random() * count >> 0 + 1; \n\t// 累计空格数\n\twhile(count !== rnd) {\n\t\t// 当前格子为空，count总数增一\n\t\tzone[index++] === 0 && ++count; \n\t}\n\treturn index - 1; \n}\nfood = feed(); \n```\n这个算法的平均复杂度为 O(n/2)。由于投食是一个低频操作，所以 O(n/2)的复杂度并不会带来任何性能问题。不过，笔者觉得这个算法的复杂度还是有点高了。回头看一下最开始的「赌博算法」，虽然「赌博算法」很不靠谱，但是它有一个优势 ------ 时间复杂度为 O(1)。 \n\n「赌博算法」的靠谱概率 = (zone.length - snake.length) / zone.length。`snake.length` 是一个动态值，它的变化范围是：`0 ~ zone.length`。推导出「赌博算法」的平均靠谱概率是：\n>**「赌博算法」平均靠谱概率 = 50%**\n\n看来「赌博算法」还是可以利用一下的。于是笔者重新设计了一个算法：\n```javascript\n// 伪代码\nfunction bet() {\n\tlet rnd = Math.random() * zone.length >> 0; \n\treturn zone[rnd] === 0 ? rnd : -1; \n}\nfunction feed() {\n\t...\n}\nfood = bet(); \nif(food === -1) food = feed(); \n```\n新算法的平均复杂度可以有效地降低到 O(n/4)，人生有时候需要点运气 : )。\n\n\n## View\n\n在 View 可以根据喜好选择一款游戏渲染引擎，笔者在 View 层选择了 `PIXI` 作为游戏游戏渲染引擎。\n\nView 的任务主要有两个：\n1. 绘制游戏的界面；\n2. 渲染 Model 里的各种数据结构\n\n也就是说 View 是使用渲染引擎还原设计稿的过程。本文的目的是介绍「贪吃蛇」的实现思路，如何使用一个渲染引擎不是本文讨论的范畴，笔者想介绍的是：「如何提高渲染的效率」。\n\n在 View 中显示 Model 的蛇可以简单地如以下伪代码：\n```javascript\n// 清空 View 上的蛇\nview.snake.clean(); \nmodel.snake.forEach(\n\t(node) => {\n\t\t// 创建 View 上的蛇节点\n\t\tlet viewNode = createViewNode(node); \n\t\t// 并合一条新蛇\n\t\tview.snake.push(viewNode); \n\t}\n); \n```\n上面代码的时间复杂度是 O(n)。上面介绍过蛇的移动是一个高频的活动，我们要尽量避免高频率地运行 O(n) 的代码。来分析蛇的三种活动：「移动」，「吃食」，「碰撞」。\n\n首先，Model 发生了「碰撞」，View 应该是直接暂停渲染 Model 里的状态，游戏处在死亡状态，接下来的事由 Control 处理。\n\nModel 中的蛇（链表）在一次「移动」过程中做了两件事：**向表头插入一个新节点，同时剔除表尾一个旧节点**；蛇（链表）在一次「吃食」过程中只做一件事：**向表头插入一个新节点**。\n\n![对比](http://7xv39r.com1.z0.glb.clouddn.com/20170923_before_after.png) \n\n如果在 View 中对 Model 的蛇链表做差异化检查，View 只增量更新差异部分的话，算法的时间复杂度即可降低至 O(1) ~ O(2) 。以下是优化后的伪代码：\n\n```javascript\nlet snakeA = model.snake, snakeB = view.snake; \n// 增量更新尾部\nwhile(snakeB.length <= snakeA.length) { \n\theadA = snakeA.next(); \n\t// 头节点匹配\n\tif(headA.data === headB.data) break; \n\t// 不匹配\n\telse { \n\t\t// 向snakeB插入头节点\n\t\tif(snakeA.HEAD === headA.index) {\n\t\t\tsnakeB.unshift(headA.data); \n\t\t}\n\t\t// 向snakeB插入第二个节点\n\t\telse snakeB.insertAfter(0, headA.data); \n\t}\n}\n// 增量更新头部 \nlet tailA = snakeA.last(), tailB; \nwhile(snakeB.length !== 0) { \n\ttailB = snakeB.last(); \n\t// 尾节点匹配\n\tif(tailA.data === tailB.data) break; \n\t// 不匹配\n\telse snakeB.pop(); \n}\n```\n\n\n## Control\n\nControl 主要做 3 件事：\n1. 游戏与用户的互动 \n2. 驱动 Model \n3. 同步 View 与 Model \n\n「游戏与用户的互动」是指向外提供游戏过程需要使用到的 APIs 与 各类事件。笔者规划的 APIs 如下：\n\n| name | type | detail |\n| :-- | :-- | :-- |\n| init | method | 初始化游戏 |\n| start | method | 开始游戏 |\n| restart | method | 重新开始游戏 |\n| pause | method | 暂停 |\n| resume | method | 恢复 | \n| turn | method | 控制蛇的转向。如：turn(\"left\") |\n| destroy | method | 销毁游戏 |\n| speed | property | 蛇的移动速度 |\n\n事件如下：\n\n| name | detail | \n| :-- | :-- |\n| countdown |  倒时计 |\n| eat | 吃到食物 |\n| before-eat | 吃到食物前触发 |\n| gameover | 游戏结束 |\n\n事件统一挂载在游戏实例下的 `event` 对象下。\n```javascript\nsnake.event.on(\"countdown\", (time) => console.log(\"剩余时间：\", time)); \n```\n\n「驱动 Model 」只做一件事 ------ **将 Model 的蛇的方向更新为用户指定的方向**。\n「同步 View 与 Model 」也比较简单，检查 Model 是否有更新，如果有更新通知 View 更新游戏界面。\n\n## 结语\n\n本文转载自：[https://github.com/leeenx/snake](https://github.com/leeenx/snake)\n\n下面是本文介绍的贪吃蛇的线上 [DEMO](https://leeenx.github.io/snake/src/snake.html) 的二维码： \n\n![demo](http://7xv39r.com1.z0.glb.clouddn.com/20170923_qr.png) \n\n游戏的源码托管在：https://github.com/leeenx/snake\n\n感谢耐心阅读完本文章的读者。本文仅代表笔者的个人观点，如有不妥之处请不吝赐教。\n","source":"_posts/经典游戏贪吃蛇Snake.md","raw":"---\ntitle: 经典游戏贪吃蛇Snake\ndate: 2018-08-24 13:42:31\ntags: [javascript,github] \ncategories: javascript\n---\n# H5小游戏100例: 贪吃蛇\n\n贪吃蛇的经典玩法有两种：\n1. 积分闯关\n2. 一吃到底\n\n第一种是笔者小时候在掌上游戏机最先体验到的（不小心暴露了年龄），具体玩法是蛇吃完一定数量的食物后就通关，通关后速度会加快；第二种是诺基亚在1997年在其自家手机上安装的游戏，它的玩法是吃到没食物为止。笔者要实现的就是第二种玩法。\n\n## MVC设计模式\n\n基于贪吃蛇的经典，笔者在实现它时也使用一种经典的设计模型：MVC（即：Model - View - Control）。游戏的各种状态与数据结构由 Model 来管理；View 用于显示 Model 的变化；用户与游戏的交互由 Control 完成（Control 提供各种游戏API接口）。\n\nModel 是游戏的核心也是本文的主要内容；View 会涉及到部分性能问题；Control 负责业务逻辑。 这样设计的好处是： Model完全独立，View 是 Model 的状态机，Model 与 View 都由 Control 来驱动。\n\n## Model\n看一张贪吃蛇的经典图片。  \n\n![诺基亚](http://7xv39r.com1.z0.glb.clouddn.com/20170922_nokia.png?v=1)\n\n贪吃蛇有四个关键的参与对象：\n1. 蛇（snake）\n2. 食物（food）\n3. 墙（bounds）\n4. 舞台（zone）\n\n舞台是一个 `m * n`  的矩阵（二维数组），矩阵的索引边界是舞台的墙，矩阵上的成员用于标记食物和蛇的位置。\n\n空舞台如下：\n```javascript\n[\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n]\n```\n\n食物（F）和蛇（S）出现在舞台上：\n```javascript\n[\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,F,0,0,0,0,0,0,0],\n\t[0,0,0,S,S,S,S,0,0,0],\n\t[0,0,0,0,0,0,S,0,0,0],\n\t[0,0,0,0,S,S,S,0,0,0],\n\t[0,0,0,0,S,0,0,0,0,0],\n\t[0,0,0,0,S,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n\t[0,0,0,0,0,0,0,0,0,0],\n]\n```\n由于操作二维数组不如一维数组方便，所以笔者使用的是一维数组， 如下：\n```javascript\n[\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,F,0,0,0,0,0,0,0,\n\t0,0,0,S,S,S,S,0,0,0,\n\t0,0,0,0,0,0,S,0,0,0,\n\t0,0,0,0,S,S,S,0,0,0,\n\t0,0,0,0,S,0,0,0,0,0,\n\t0,0,0,0,S,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n\t0,0,0,0,0,0,0,0,0,0,\n]\n```\n舞台矩阵上蛇与食物只是舞台对二者的映射，它们彼此都有独立的数据结构：\n\n- 蛇是一串坐标索引链表；\n- 食物是一个指向舞台坐标的索引值。\n\n### 蛇的活动\n\n蛇的活动有三种，如下：\n- 移动（move）\n- 吃食（eat）\n- 碰撞（collision）\n\n#### 移动\n\n蛇在移动时，内部发生了什么变化？ \n\n![蠕动](http://7xv39r.com1.z0.glb.clouddn.com/20170922_snake.gif) \n\n蛇链表在一次移动过程中做了两件事：**向表头插入一个新节点，同时剔除表尾一个旧节点**。用一个数组来代表蛇链表，那么蛇的移动就是以下的伪代码：\n```javascript\nfunction move(next) {\n\tsnake.pop() & snake.unshift(next); \n} \n```\n**数组作为蛇链表合适吗？**\n这是笔者最开始思考的问题，毕竟数组的 `unshift & pop` 可以无缝表示蛇的移动。不过，方便不代表性能好，`unshift` 向数组插入元素的时间复杂度是 O(n)， `pop` 剔除数组尾元素的时间复杂度是 O(1)。\n\n蛇的移动是一个高频率的动作，如果一次动作的算法复杂度为 O(n) 并且蛇的长度比较大，那么游戏的性能会有问题。笔者想实现的贪吃蛇理论上讲是一条长蛇，所以笔者在本文章的回复是 ------ **数组不适合作为蛇链表**。\n\n**蛇链表必须是真正的链表结构。**\n链表删除或插入一个节点的时间复杂度为O(1)，用链表作为蛇链表的数据结构能提高游戏的性能。javascript 没有现成的链表结构，笔者写了一个叫 [Chain](https://github.com/leeenx/es6-utils#chain) 的链表类，`Chain` 提供了 `unshfit & pop`。以下伪代码是创建一条蛇链表：\n\n```javascript\nlet snake = new Chain(); \n```\n\n_由于篇幅问题这里就不介绍 `Chain` 是如何实现的，有兴趣的同学可以移步到: [https://github.com/leeenx/es6-utils#chain](https://github.com/leeenx/es6-utils#chain)_\n\n#### 吃食 & 碰撞\n\n「吃食」与「碰撞」区别在于吃食撞上了「食物」，碰撞撞上了「墙」。笔者认为「吃食」与「碰撞」属于蛇一次「移动」的三个可能结果的两个分支。蛇移动的三个可能结果是：「前进」、「吃食」和「碰撞」。\n\n回头看一下蛇移动的伪代码：\n```javascript\nfunction move(next) {\n\tsnake.pop() & snake.unshift(next); \n} \n```\n代码中的 `next` 表示蛇头即将进入的格子的索引值，只有当这个格子是`0`时蛇才能「前进」，当这个格子是 `S` 表示「碰撞」自己，当这个格子是 `F`表示吃食。\n\n**好像少了撞墙？**\n笔者在设计过程中，并没有把墙设计在舞台的矩阵中，而是通过索引出界的方式来表示撞墙。简单地说就是 `next === -1` 时表示出界和撞墙。\n\n以下伪代码表示蛇的整上活动过程：\n```javascript\n// B 表示撞墙\nlet cell = -1 === next ? B : zone[next]; \nswitch(cell) {\n\t// 吃食\n\tcase F: eat(); break; \n\t// 撞到自己\n\tcase S: collision(S); break; \n\t// 撞墙\n\tcase B: collision(B): break; \n\t// 前进\n\tdefault: move; \n}\n```\n\n### 随机投食\n随机投食是指随机挑选舞台的一个索引值用于映射食物的位置。这似乎很简单，可以直接这样写：\n```javascript\n// 伪代码\nfood = Math.random(zone.length) >> 0; \n```\n如果考虑到投食的前提 ------ 不与蛇身重叠，你会发现上面的随机代码并不能保证投食位置不与蛇身重叠。由于这个算法的安全性带有赌博性质，且把它称作「赌博算法」。为了保证投食的安全性，笔者把算法扩展了一下：\n```javascript\n// 伪代码\nfunction feed() {\n\tlet index = Math.random(zone.length) >> 0; \n\t// 当前位置是否被占用\n\treturn zone[index] === S ? feed() : index; \n}\nfood = feed(); \n```\n上面的代码虽然在理论上可以保证投食的绝对安全，不过笔者把这个算法称作「不要命的赌徒算法」，因为上面的算法有致命的BUG ------ 超长递归 or 死循环。\n\n为了解决上面的致命问题，笔者设计了下面的算法来做随机投食：\n```javascript\n// 伪代码\nfunction feed() {\n\t// 未被占用的空格数\n\tlet len = zone.length - snake.length; \n\t// 无法投食\n\tif(len === 0) return ; \n\t// zone的索引\n\tlet index = 0, \n\t// 空格计数器\n\tcount = 0, \n\t// 第 rnd 个空格子是最终要投食的位置\n\trnd = Math.random() * count >> 0 + 1; \n\t// 累计空格数\n\twhile(count !== rnd) {\n\t\t// 当前格子为空，count总数增一\n\t\tzone[index++] === 0 && ++count; \n\t}\n\treturn index - 1; \n}\nfood = feed(); \n```\n这个算法的平均复杂度为 O(n/2)。由于投食是一个低频操作，所以 O(n/2)的复杂度并不会带来任何性能问题。不过，笔者觉得这个算法的复杂度还是有点高了。回头看一下最开始的「赌博算法」，虽然「赌博算法」很不靠谱，但是它有一个优势 ------ 时间复杂度为 O(1)。 \n\n「赌博算法」的靠谱概率 = (zone.length - snake.length) / zone.length。`snake.length` 是一个动态值，它的变化范围是：`0 ~ zone.length`。推导出「赌博算法」的平均靠谱概率是：\n>**「赌博算法」平均靠谱概率 = 50%**\n\n看来「赌博算法」还是可以利用一下的。于是笔者重新设计了一个算法：\n```javascript\n// 伪代码\nfunction bet() {\n\tlet rnd = Math.random() * zone.length >> 0; \n\treturn zone[rnd] === 0 ? rnd : -1; \n}\nfunction feed() {\n\t...\n}\nfood = bet(); \nif(food === -1) food = feed(); \n```\n新算法的平均复杂度可以有效地降低到 O(n/4)，人生有时候需要点运气 : )。\n\n\n## View\n\n在 View 可以根据喜好选择一款游戏渲染引擎，笔者在 View 层选择了 `PIXI` 作为游戏游戏渲染引擎。\n\nView 的任务主要有两个：\n1. 绘制游戏的界面；\n2. 渲染 Model 里的各种数据结构\n\n也就是说 View 是使用渲染引擎还原设计稿的过程。本文的目的是介绍「贪吃蛇」的实现思路，如何使用一个渲染引擎不是本文讨论的范畴，笔者想介绍的是：「如何提高渲染的效率」。\n\n在 View 中显示 Model 的蛇可以简单地如以下伪代码：\n```javascript\n// 清空 View 上的蛇\nview.snake.clean(); \nmodel.snake.forEach(\n\t(node) => {\n\t\t// 创建 View 上的蛇节点\n\t\tlet viewNode = createViewNode(node); \n\t\t// 并合一条新蛇\n\t\tview.snake.push(viewNode); \n\t}\n); \n```\n上面代码的时间复杂度是 O(n)。上面介绍过蛇的移动是一个高频的活动，我们要尽量避免高频率地运行 O(n) 的代码。来分析蛇的三种活动：「移动」，「吃食」，「碰撞」。\n\n首先，Model 发生了「碰撞」，View 应该是直接暂停渲染 Model 里的状态，游戏处在死亡状态，接下来的事由 Control 处理。\n\nModel 中的蛇（链表）在一次「移动」过程中做了两件事：**向表头插入一个新节点，同时剔除表尾一个旧节点**；蛇（链表）在一次「吃食」过程中只做一件事：**向表头插入一个新节点**。\n\n![对比](http://7xv39r.com1.z0.glb.clouddn.com/20170923_before_after.png) \n\n如果在 View 中对 Model 的蛇链表做差异化检查，View 只增量更新差异部分的话，算法的时间复杂度即可降低至 O(1) ~ O(2) 。以下是优化后的伪代码：\n\n```javascript\nlet snakeA = model.snake, snakeB = view.snake; \n// 增量更新尾部\nwhile(snakeB.length <= snakeA.length) { \n\theadA = snakeA.next(); \n\t// 头节点匹配\n\tif(headA.data === headB.data) break; \n\t// 不匹配\n\telse { \n\t\t// 向snakeB插入头节点\n\t\tif(snakeA.HEAD === headA.index) {\n\t\t\tsnakeB.unshift(headA.data); \n\t\t}\n\t\t// 向snakeB插入第二个节点\n\t\telse snakeB.insertAfter(0, headA.data); \n\t}\n}\n// 增量更新头部 \nlet tailA = snakeA.last(), tailB; \nwhile(snakeB.length !== 0) { \n\ttailB = snakeB.last(); \n\t// 尾节点匹配\n\tif(tailA.data === tailB.data) break; \n\t// 不匹配\n\telse snakeB.pop(); \n}\n```\n\n\n## Control\n\nControl 主要做 3 件事：\n1. 游戏与用户的互动 \n2. 驱动 Model \n3. 同步 View 与 Model \n\n「游戏与用户的互动」是指向外提供游戏过程需要使用到的 APIs 与 各类事件。笔者规划的 APIs 如下：\n\n| name | type | detail |\n| :-- | :-- | :-- |\n| init | method | 初始化游戏 |\n| start | method | 开始游戏 |\n| restart | method | 重新开始游戏 |\n| pause | method | 暂停 |\n| resume | method | 恢复 | \n| turn | method | 控制蛇的转向。如：turn(\"left\") |\n| destroy | method | 销毁游戏 |\n| speed | property | 蛇的移动速度 |\n\n事件如下：\n\n| name | detail | \n| :-- | :-- |\n| countdown |  倒时计 |\n| eat | 吃到食物 |\n| before-eat | 吃到食物前触发 |\n| gameover | 游戏结束 |\n\n事件统一挂载在游戏实例下的 `event` 对象下。\n```javascript\nsnake.event.on(\"countdown\", (time) => console.log(\"剩余时间：\", time)); \n```\n\n「驱动 Model 」只做一件事 ------ **将 Model 的蛇的方向更新为用户指定的方向**。\n「同步 View 与 Model 」也比较简单，检查 Model 是否有更新，如果有更新通知 View 更新游戏界面。\n\n## 结语\n\n本文转载自：[https://github.com/leeenx/snake](https://github.com/leeenx/snake)\n\n下面是本文介绍的贪吃蛇的线上 [DEMO](https://leeenx.github.io/snake/src/snake.html) 的二维码： \n\n![demo](http://7xv39r.com1.z0.glb.clouddn.com/20170923_qr.png) \n\n游戏的源码托管在：https://github.com/leeenx/snake\n\n感谢耐心阅读完本文章的读者。本文仅代表笔者的个人观点，如有不妥之处请不吝赐教。\n","slug":"经典游戏贪吃蛇Snake","published":1,"updated":"2019-04-13T01:13:58.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvm1djiu0025kstnk0jn07xo","content":"<h1 id=\"H5小游戏100例-贪吃蛇\"><a href=\"#H5小游戏100例-贪吃蛇\" class=\"headerlink\" title=\"H5小游戏100例: 贪吃蛇\"></a>H5小游戏100例: 贪吃蛇</h1><p>贪吃蛇的经典玩法有两种：</p>\n<ol>\n<li>积分闯关</li>\n<li>一吃到底</li>\n</ol>\n<p>第一种是笔者小时候在掌上游戏机最先体验到的（不小心暴露了年龄），具体玩法是蛇吃完一定数量的食物后就通关，通关后速度会加快；第二种是诺基亚在1997年在其自家手机上安装的游戏，它的玩法是吃到没食物为止。笔者要实现的就是第二种玩法。</p>\n<h2 id=\"MVC设计模式\"><a href=\"#MVC设计模式\" class=\"headerlink\" title=\"MVC设计模式\"></a>MVC设计模式</h2><p>基于贪吃蛇的经典，笔者在实现它时也使用一种经典的设计模型：MVC（即：Model - View - Control）。游戏的各种状态与数据结构由 Model 来管理；View 用于显示 Model 的变化；用户与游戏的交互由 Control 完成（Control 提供各种游戏API接口）。</p>\n<p>Model 是游戏的核心也是本文的主要内容；View 会涉及到部分性能问题；Control 负责业务逻辑。 这样设计的好处是： Model完全独立，View 是 Model 的状态机，Model 与 View 都由 Control 来驱动。</p>\n<h2 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h2><p>看一张贪吃蛇的经典图片。  </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170922_nokia.png?v=1\" alt=\"诺基亚\"></p>\n<p>贪吃蛇有四个关键的参与对象：</p>\n<ol>\n<li>蛇（snake）</li>\n<li>食物（food）</li>\n<li>墙（bounds）</li>\n<li>舞台（zone）</li>\n</ol>\n<p>舞台是一个 <code>m * n</code>  的矩阵（二维数组），矩阵的索引边界是舞台的墙，矩阵上的成员用于标记食物和蛇的位置。</p>\n<p>空舞台如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>食物（F）和蛇（S）出现在舞台上：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,F,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>由于操作二维数组不如一维数组方便，所以笔者使用的是一维数组， 如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,F,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>舞台矩阵上蛇与食物只是舞台对二者的映射，它们彼此都有独立的数据结构：</p>\n<ul>\n<li>蛇是一串坐标索引链表；</li>\n<li>食物是一个指向舞台坐标的索引值。</li>\n</ul>\n<h3 id=\"蛇的活动\"><a href=\"#蛇的活动\" class=\"headerlink\" title=\"蛇的活动\"></a>蛇的活动</h3><p>蛇的活动有三种，如下：</p>\n<ul>\n<li>移动（move）</li>\n<li>吃食（eat）</li>\n<li>碰撞（collision）</li>\n</ul>\n<h4 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h4><p>蛇在移动时，内部发生了什么变化？ </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170922_snake.gif\" alt=\"蠕动\"> </p>\n<p>蛇链表在一次移动过程中做了两件事：<strong>向表头插入一个新节点，同时剔除表尾一个旧节点</strong>。用一个数组来代表蛇链表，那么蛇的移动就是以下的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">next</span>) </span>&#123;</span><br><span class=\"line\">\tsnake.pop() &amp; snake.unshift(next); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>数组作为蛇链表合适吗？</strong><br>这是笔者最开始思考的问题，毕竟数组的 <code>unshift &amp; pop</code> 可以无缝表示蛇的移动。不过，方便不代表性能好，<code>unshift</code> 向数组插入元素的时间复杂度是 O(n)， <code>pop</code> 剔除数组尾元素的时间复杂度是 O(1)。</p>\n<p>蛇的移动是一个高频率的动作，如果一次动作的算法复杂度为 O(n) 并且蛇的长度比较大，那么游戏的性能会有问题。笔者想实现的贪吃蛇理论上讲是一条长蛇，所以笔者在本文章的回复是 —— <strong>数组不适合作为蛇链表</strong>。</p>\n<p><strong>蛇链表必须是真正的链表结构。</strong><br>链表删除或插入一个节点的时间复杂度为O(1)，用链表作为蛇链表的数据结构能提高游戏的性能。javascript 没有现成的链表结构，笔者写了一个叫 <a href=\"https://github.com/leeenx/es6-utils#chain\" target=\"_blank\" rel=\"noopener\">Chain</a> 的链表类，<code>Chain</code> 提供了 <code>unshfit &amp; pop</code>。以下伪代码是创建一条蛇链表：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> snake = <span class=\"keyword\">new</span> Chain();</span><br></pre></td></tr></table></figure>\n<p><em>由于篇幅问题这里就不介绍 <code>Chain</code> 是如何实现的，有兴趣的同学可以移步到: <a href=\"https://github.com/leeenx/es6-utils#chain\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/es6-utils#chain</a></em></p>\n<h4 id=\"吃食-amp-碰撞\"><a href=\"#吃食-amp-碰撞\" class=\"headerlink\" title=\"吃食 &amp; 碰撞\"></a>吃食 &amp; 碰撞</h4><p>「吃食」与「碰撞」区别在于吃食撞上了「食物」，碰撞撞上了「墙」。笔者认为「吃食」与「碰撞」属于蛇一次「移动」的三个可能结果的两个分支。蛇移动的三个可能结果是：「前进」、「吃食」和「碰撞」。</p>\n<p>回头看一下蛇移动的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">next</span>) </span>&#123;</span><br><span class=\"line\">\tsnake.pop() &amp; snake.unshift(next); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>代码中的 <code>next</code> 表示蛇头即将进入的格子的索引值，只有当这个格子是<code>0</code>时蛇才能「前进」，当这个格子是 <code>S</code> 表示「碰撞」自己，当这个格子是 <code>F</code>表示吃食。</p>\n<p><strong>好像少了撞墙？</strong><br>笔者在设计过程中，并没有把墙设计在舞台的矩阵中，而是通过索引出界的方式来表示撞墙。简单地说就是 <code>next === -1</code> 时表示出界和撞墙。</p>\n<p>以下伪代码表示蛇的整上活动过程：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// B 表示撞墙</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> cell = <span class=\"number\">-1</span> === next ? B : zone[next]; </span><br><span class=\"line\"><span class=\"keyword\">switch</span>(cell) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 吃食</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> F: eat(); <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 撞到自己</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> S: collision(S); <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 撞墙</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> B: collision(B): <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 前进</span></span><br><span class=\"line\">\t<span class=\"keyword\">default</span>: move; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"随机投食\"><a href=\"#随机投食\" class=\"headerlink\" title=\"随机投食\"></a>随机投食</h3><p>随机投食是指随机挑选舞台的一个索引值用于映射食物的位置。这似乎很简单，可以直接这样写：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\">food = <span class=\"built_in\">Math</span>.random(zone.length) &gt;&gt; <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<p>如果考虑到投食的前提 —— 不与蛇身重叠，你会发现上面的随机代码并不能保证投食位置不与蛇身重叠。由于这个算法的安全性带有赌博性质，且把它称作「赌博算法」。为了保证投食的安全性，笔者把算法扩展了一下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> index = <span class=\"built_in\">Math</span>.random(zone.length) &gt;&gt; <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 当前位置是否被占用</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> zone[index] === S ? feed() : index; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>上面的代码虽然在理论上可以保证投食的绝对安全，不过笔者把这个算法称作「不要命的赌徒算法」，因为上面的算法有致命的BUG —— 超长递归 or 死循环。</p>\n<p>为了解决上面的致命问题，笔者设计了下面的算法来做随机投食：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 未被占用的空格数</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> len = zone.length - snake.length; </span><br><span class=\"line\">\t<span class=\"comment\">// 无法投食</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> ; </span><br><span class=\"line\">\t<span class=\"comment\">// zone的索引</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>, </span><br><span class=\"line\">\t<span class=\"comment\">// 空格计数器</span></span><br><span class=\"line\">\tcount = <span class=\"number\">0</span>, </span><br><span class=\"line\">\t<span class=\"comment\">// 第 rnd 个空格子是最终要投食的位置</span></span><br><span class=\"line\">\trnd = <span class=\"built_in\">Math</span>.random() * count &gt;&gt; <span class=\"number\">0</span> + <span class=\"number\">1</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 累计空格数</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(count !== rnd) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 当前格子为空，count总数增一</span></span><br><span class=\"line\">\t\tzone[index++] === <span class=\"number\">0</span> &amp;&amp; ++count; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index - <span class=\"number\">1</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>这个算法的平均复杂度为 O(n/2)。由于投食是一个低频操作，所以 O(n/2)的复杂度并不会带来任何性能问题。不过，笔者觉得这个算法的复杂度还是有点高了。回头看一下最开始的「赌博算法」，虽然「赌博算法」很不靠谱，但是它有一个优势 —— 时间复杂度为 O(1)。 </p>\n<p>「赌博算法」的靠谱概率 = (zone.length - snake.length) / zone.length。<code>snake.length</code> 是一个动态值，它的变化范围是：<code>0 ~ zone.length</code>。推导出「赌博算法」的平均靠谱概率是：</p>\n<blockquote>\n<p><strong>「赌博算法」平均靠谱概率 = 50%</strong></p>\n</blockquote>\n<p>看来「赌博算法」还是可以利用一下的。于是笔者重新设计了一个算法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bet</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> rnd = <span class=\"built_in\">Math</span>.random() * zone.length &gt;&gt; <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> zone[rnd] === <span class=\"number\">0</span> ? rnd : <span class=\"number\">-1</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = bet(); </span><br><span class=\"line\"><span class=\"keyword\">if</span>(food === <span class=\"number\">-1</span>) food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>新算法的平均复杂度可以有效地降低到 O(n/4)，人生有时候需要点运气 : )。</p>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>在 View 可以根据喜好选择一款游戏渲染引擎，笔者在 View 层选择了 <code>PIXI</code> 作为游戏游戏渲染引擎。</p>\n<p>View 的任务主要有两个：</p>\n<ol>\n<li>绘制游戏的界面；</li>\n<li>渲染 Model 里的各种数据结构</li>\n</ol>\n<p>也就是说 View 是使用渲染引擎还原设计稿的过程。本文的目的是介绍「贪吃蛇」的实现思路，如何使用一个渲染引擎不是本文讨论的范畴，笔者想介绍的是：「如何提高渲染的效率」。</p>\n<p>在 View 中显示 Model 的蛇可以简单地如以下伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 清空 View 上的蛇</span></span><br><span class=\"line\">view.snake.clean(); </span><br><span class=\"line\">model.snake.forEach(</span><br><span class=\"line\">\t(node) =&gt; &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建 View 上的蛇节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> viewNode = createViewNode(node); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 并合一条新蛇</span></span><br><span class=\"line\">\t\tview.snake.push(viewNode); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>上面代码的时间复杂度是 O(n)。上面介绍过蛇的移动是一个高频的活动，我们要尽量避免高频率地运行 O(n) 的代码。来分析蛇的三种活动：「移动」，「吃食」，「碰撞」。</p>\n<p>首先，Model 发生了「碰撞」，View 应该是直接暂停渲染 Model 里的状态，游戏处在死亡状态，接下来的事由 Control 处理。</p>\n<p>Model 中的蛇（链表）在一次「移动」过程中做了两件事：<strong>向表头插入一个新节点，同时剔除表尾一个旧节点</strong>；蛇（链表）在一次「吃食」过程中只做一件事：<strong>向表头插入一个新节点</strong>。</p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170923_before_after.png\" alt=\"对比\"> </p>\n<p>如果在 View 中对 Model 的蛇链表做差异化检查，View 只增量更新差异部分的话，算法的时间复杂度即可降低至 O(1) ~ O(2) 。以下是优化后的伪代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> snakeA = model.snake, snakeB = view.snake; </span><br><span class=\"line\"><span class=\"comment\">// 增量更新尾部</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(snakeB.length &lt;= snakeA.length) &#123; </span><br><span class=\"line\">\theadA = snakeA.next(); </span><br><span class=\"line\">\t<span class=\"comment\">// 头节点匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(headA.data === headB.data) <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 不匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">// 向snakeB插入头节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(snakeA.HEAD === headA.index) &#123;</span><br><span class=\"line\">\t\t\tsnakeB.unshift(headA.data); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 向snakeB插入第二个节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> snakeB.insertAfter(<span class=\"number\">0</span>, headA.data); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 增量更新头部 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tailA = snakeA.last(), tailB; </span><br><span class=\"line\"><span class=\"keyword\">while</span>(snakeB.length !== <span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">\ttailB = snakeB.last(); </span><br><span class=\"line\">\t<span class=\"comment\">// 尾节点匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tailA.data === tailB.data) <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 不匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> snakeB.pop(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Control\"><a href=\"#Control\" class=\"headerlink\" title=\"Control\"></a>Control</h2><p>Control 主要做 3 件事：</p>\n<ol>\n<li>游戏与用户的互动 </li>\n<li>驱动 Model </li>\n<li>同步 View 与 Model </li>\n</ol>\n<p>「游戏与用户的互动」是指向外提供游戏过程需要使用到的 APIs 与 各类事件。笔者规划的 APIs 如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name</th>\n<th style=\"text-align:left\">type</th>\n<th style=\"text-align:left\">detail</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">init</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">初始化游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">start</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">开始游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">restart</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">重新开始游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pause</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">resume</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">恢复</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">turn</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">控制蛇的转向。如：turn(“left”)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">destroy</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">销毁游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">speed</td>\n<td style=\"text-align:left\">property</td>\n<td style=\"text-align:left\">蛇的移动速度</td>\n</tr>\n</tbody>\n</table>\n<p>事件如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name</th>\n<th style=\"text-align:left\">detail</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">countdown</td>\n<td style=\"text-align:left\">倒时计</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">eat</td>\n<td style=\"text-align:left\">吃到食物</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">before-eat</td>\n<td style=\"text-align:left\">吃到食物前触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gameover</td>\n<td style=\"text-align:left\">游戏结束</td>\n</tr>\n</tbody>\n</table>\n<p>事件统一挂载在游戏实例下的 <code>event</code> 对象下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">snake.event.on(<span class=\"string\">\"countdown\"</span>, (time) =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">\"剩余时间：\"</span>, time));</span><br></pre></td></tr></table></figure></p>\n<p>「驱动 Model 」只做一件事 —— <strong>将 Model 的蛇的方向更新为用户指定的方向</strong>。<br>「同步 View 与 Model 」也比较简单，检查 Model 是否有更新，如果有更新通知 View 更新游戏界面。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本文转载自：<a href=\"https://github.com/leeenx/snake\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/snake</a></p>\n<p>下面是本文介绍的贪吃蛇的线上 <a href=\"https://leeenx.github.io/snake/src/snake.html\" target=\"_blank\" rel=\"noopener\">DEMO</a> 的二维码： </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170923_qr.png\" alt=\"demo\"> </p>\n<p>游戏的源码托管在：<a href=\"https://github.com/leeenx/snake\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/snake</a></p>\n<p>感谢耐心阅读完本文章的读者。本文仅代表笔者的个人观点，如有不妥之处请不吝赐教。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"H5小游戏100例-贪吃蛇\"><a href=\"#H5小游戏100例-贪吃蛇\" class=\"headerlink\" title=\"H5小游戏100例: 贪吃蛇\"></a>H5小游戏100例: 贪吃蛇</h1><p>贪吃蛇的经典玩法有两种：</p>\n<ol>\n<li>积分闯关</li>\n<li>一吃到底</li>\n</ol>\n<p>第一种是笔者小时候在掌上游戏机最先体验到的（不小心暴露了年龄），具体玩法是蛇吃完一定数量的食物后就通关，通关后速度会加快；第二种是诺基亚在1997年在其自家手机上安装的游戏，它的玩法是吃到没食物为止。笔者要实现的就是第二种玩法。</p>\n<h2 id=\"MVC设计模式\"><a href=\"#MVC设计模式\" class=\"headerlink\" title=\"MVC设计模式\"></a>MVC设计模式</h2><p>基于贪吃蛇的经典，笔者在实现它时也使用一种经典的设计模型：MVC（即：Model - View - Control）。游戏的各种状态与数据结构由 Model 来管理；View 用于显示 Model 的变化；用户与游戏的交互由 Control 完成（Control 提供各种游戏API接口）。</p>\n<p>Model 是游戏的核心也是本文的主要内容；View 会涉及到部分性能问题；Control 负责业务逻辑。 这样设计的好处是： Model完全独立，View 是 Model 的状态机，Model 与 View 都由 Control 来驱动。</p>\n<h2 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h2><p>看一张贪吃蛇的经典图片。  </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170922_nokia.png?v=1\" alt=\"诺基亚\"></p>\n<p>贪吃蛇有四个关键的参与对象：</p>\n<ol>\n<li>蛇（snake）</li>\n<li>食物（food）</li>\n<li>墙（bounds）</li>\n<li>舞台（zone）</li>\n</ol>\n<p>舞台是一个 <code>m * n</code>  的矩阵（二维数组），矩阵的索引边界是舞台的墙，矩阵上的成员用于标记食物和蛇的位置。</p>\n<p>空舞台如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>食物（F）和蛇（S）出现在舞台上：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,F,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>由于操作二维数组不如一维数组方便，所以笔者使用的是一维数组， 如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,F,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,S,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,S,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>舞台矩阵上蛇与食物只是舞台对二者的映射，它们彼此都有独立的数据结构：</p>\n<ul>\n<li>蛇是一串坐标索引链表；</li>\n<li>食物是一个指向舞台坐标的索引值。</li>\n</ul>\n<h3 id=\"蛇的活动\"><a href=\"#蛇的活动\" class=\"headerlink\" title=\"蛇的活动\"></a>蛇的活动</h3><p>蛇的活动有三种，如下：</p>\n<ul>\n<li>移动（move）</li>\n<li>吃食（eat）</li>\n<li>碰撞（collision）</li>\n</ul>\n<h4 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h4><p>蛇在移动时，内部发生了什么变化？ </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170922_snake.gif\" alt=\"蠕动\"> </p>\n<p>蛇链表在一次移动过程中做了两件事：<strong>向表头插入一个新节点，同时剔除表尾一个旧节点</strong>。用一个数组来代表蛇链表，那么蛇的移动就是以下的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">next</span>) </span>&#123;</span><br><span class=\"line\">\tsnake.pop() &amp; snake.unshift(next); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>数组作为蛇链表合适吗？</strong><br>这是笔者最开始思考的问题，毕竟数组的 <code>unshift &amp; pop</code> 可以无缝表示蛇的移动。不过，方便不代表性能好，<code>unshift</code> 向数组插入元素的时间复杂度是 O(n)， <code>pop</code> 剔除数组尾元素的时间复杂度是 O(1)。</p>\n<p>蛇的移动是一个高频率的动作，如果一次动作的算法复杂度为 O(n) 并且蛇的长度比较大，那么游戏的性能会有问题。笔者想实现的贪吃蛇理论上讲是一条长蛇，所以笔者在本文章的回复是 —— <strong>数组不适合作为蛇链表</strong>。</p>\n<p><strong>蛇链表必须是真正的链表结构。</strong><br>链表删除或插入一个节点的时间复杂度为O(1)，用链表作为蛇链表的数据结构能提高游戏的性能。javascript 没有现成的链表结构，笔者写了一个叫 <a href=\"https://github.com/leeenx/es6-utils#chain\" target=\"_blank\" rel=\"noopener\">Chain</a> 的链表类，<code>Chain</code> 提供了 <code>unshfit &amp; pop</code>。以下伪代码是创建一条蛇链表：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> snake = <span class=\"keyword\">new</span> Chain();</span><br></pre></td></tr></table></figure>\n<p><em>由于篇幅问题这里就不介绍 <code>Chain</code> 是如何实现的，有兴趣的同学可以移步到: <a href=\"https://github.com/leeenx/es6-utils#chain\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/es6-utils#chain</a></em></p>\n<h4 id=\"吃食-amp-碰撞\"><a href=\"#吃食-amp-碰撞\" class=\"headerlink\" title=\"吃食 &amp; 碰撞\"></a>吃食 &amp; 碰撞</h4><p>「吃食」与「碰撞」区别在于吃食撞上了「食物」，碰撞撞上了「墙」。笔者认为「吃食」与「碰撞」属于蛇一次「移动」的三个可能结果的两个分支。蛇移动的三个可能结果是：「前进」、「吃食」和「碰撞」。</p>\n<p>回头看一下蛇移动的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">next</span>) </span>&#123;</span><br><span class=\"line\">\tsnake.pop() &amp; snake.unshift(next); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>代码中的 <code>next</code> 表示蛇头即将进入的格子的索引值，只有当这个格子是<code>0</code>时蛇才能「前进」，当这个格子是 <code>S</code> 表示「碰撞」自己，当这个格子是 <code>F</code>表示吃食。</p>\n<p><strong>好像少了撞墙？</strong><br>笔者在设计过程中，并没有把墙设计在舞台的矩阵中，而是通过索引出界的方式来表示撞墙。简单地说就是 <code>next === -1</code> 时表示出界和撞墙。</p>\n<p>以下伪代码表示蛇的整上活动过程：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// B 表示撞墙</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> cell = <span class=\"number\">-1</span> === next ? B : zone[next]; </span><br><span class=\"line\"><span class=\"keyword\">switch</span>(cell) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 吃食</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> F: eat(); <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 撞到自己</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> S: collision(S); <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 撞墙</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> B: collision(B): <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 前进</span></span><br><span class=\"line\">\t<span class=\"keyword\">default</span>: move; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"随机投食\"><a href=\"#随机投食\" class=\"headerlink\" title=\"随机投食\"></a>随机投食</h3><p>随机投食是指随机挑选舞台的一个索引值用于映射食物的位置。这似乎很简单，可以直接这样写：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\">food = <span class=\"built_in\">Math</span>.random(zone.length) &gt;&gt; <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<p>如果考虑到投食的前提 —— 不与蛇身重叠，你会发现上面的随机代码并不能保证投食位置不与蛇身重叠。由于这个算法的安全性带有赌博性质，且把它称作「赌博算法」。为了保证投食的安全性，笔者把算法扩展了一下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> index = <span class=\"built_in\">Math</span>.random(zone.length) &gt;&gt; <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 当前位置是否被占用</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> zone[index] === S ? feed() : index; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>上面的代码虽然在理论上可以保证投食的绝对安全，不过笔者把这个算法称作「不要命的赌徒算法」，因为上面的算法有致命的BUG —— 超长递归 or 死循环。</p>\n<p>为了解决上面的致命问题，笔者设计了下面的算法来做随机投食：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 未被占用的空格数</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> len = zone.length - snake.length; </span><br><span class=\"line\">\t<span class=\"comment\">// 无法投食</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> ; </span><br><span class=\"line\">\t<span class=\"comment\">// zone的索引</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>, </span><br><span class=\"line\">\t<span class=\"comment\">// 空格计数器</span></span><br><span class=\"line\">\tcount = <span class=\"number\">0</span>, </span><br><span class=\"line\">\t<span class=\"comment\">// 第 rnd 个空格子是最终要投食的位置</span></span><br><span class=\"line\">\trnd = <span class=\"built_in\">Math</span>.random() * count &gt;&gt; <span class=\"number\">0</span> + <span class=\"number\">1</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 累计空格数</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(count !== rnd) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 当前格子为空，count总数增一</span></span><br><span class=\"line\">\t\tzone[index++] === <span class=\"number\">0</span> &amp;&amp; ++count; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> index - <span class=\"number\">1</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>这个算法的平均复杂度为 O(n/2)。由于投食是一个低频操作，所以 O(n/2)的复杂度并不会带来任何性能问题。不过，笔者觉得这个算法的复杂度还是有点高了。回头看一下最开始的「赌博算法」，虽然「赌博算法」很不靠谱，但是它有一个优势 —— 时间复杂度为 O(1)。 </p>\n<p>「赌博算法」的靠谱概率 = (zone.length - snake.length) / zone.length。<code>snake.length</code> 是一个动态值，它的变化范围是：<code>0 ~ zone.length</code>。推导出「赌博算法」的平均靠谱概率是：</p>\n<blockquote>\n<p><strong>「赌博算法」平均靠谱概率 = 50%</strong></p>\n</blockquote>\n<p>看来「赌博算法」还是可以利用一下的。于是笔者重新设计了一个算法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bet</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> rnd = <span class=\"built_in\">Math</span>.random() * zone.length &gt;&gt; <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> zone[rnd] === <span class=\"number\">0</span> ? rnd : <span class=\"number\">-1</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">feed</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">food = bet(); </span><br><span class=\"line\"><span class=\"keyword\">if</span>(food === <span class=\"number\">-1</span>) food = feed();</span><br></pre></td></tr></table></figure></p>\n<p>新算法的平均复杂度可以有效地降低到 O(n/4)，人生有时候需要点运气 : )。</p>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>在 View 可以根据喜好选择一款游戏渲染引擎，笔者在 View 层选择了 <code>PIXI</code> 作为游戏游戏渲染引擎。</p>\n<p>View 的任务主要有两个：</p>\n<ol>\n<li>绘制游戏的界面；</li>\n<li>渲染 Model 里的各种数据结构</li>\n</ol>\n<p>也就是说 View 是使用渲染引擎还原设计稿的过程。本文的目的是介绍「贪吃蛇」的实现思路，如何使用一个渲染引擎不是本文讨论的范畴，笔者想介绍的是：「如何提高渲染的效率」。</p>\n<p>在 View 中显示 Model 的蛇可以简单地如以下伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 清空 View 上的蛇</span></span><br><span class=\"line\">view.snake.clean(); </span><br><span class=\"line\">model.snake.forEach(</span><br><span class=\"line\">\t(node) =&gt; &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建 View 上的蛇节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> viewNode = createViewNode(node); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 并合一条新蛇</span></span><br><span class=\"line\">\t\tview.snake.push(viewNode); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>上面代码的时间复杂度是 O(n)。上面介绍过蛇的移动是一个高频的活动，我们要尽量避免高频率地运行 O(n) 的代码。来分析蛇的三种活动：「移动」，「吃食」，「碰撞」。</p>\n<p>首先，Model 发生了「碰撞」，View 应该是直接暂停渲染 Model 里的状态，游戏处在死亡状态，接下来的事由 Control 处理。</p>\n<p>Model 中的蛇（链表）在一次「移动」过程中做了两件事：<strong>向表头插入一个新节点，同时剔除表尾一个旧节点</strong>；蛇（链表）在一次「吃食」过程中只做一件事：<strong>向表头插入一个新节点</strong>。</p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170923_before_after.png\" alt=\"对比\"> </p>\n<p>如果在 View 中对 Model 的蛇链表做差异化检查，View 只增量更新差异部分的话，算法的时间复杂度即可降低至 O(1) ~ O(2) 。以下是优化后的伪代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> snakeA = model.snake, snakeB = view.snake; </span><br><span class=\"line\"><span class=\"comment\">// 增量更新尾部</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(snakeB.length &lt;= snakeA.length) &#123; </span><br><span class=\"line\">\theadA = snakeA.next(); </span><br><span class=\"line\">\t<span class=\"comment\">// 头节点匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(headA.data === headB.data) <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 不匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">// 向snakeB插入头节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(snakeA.HEAD === headA.index) &#123;</span><br><span class=\"line\">\t\t\tsnakeB.unshift(headA.data); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 向snakeB插入第二个节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> snakeB.insertAfter(<span class=\"number\">0</span>, headA.data); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 增量更新头部 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tailA = snakeA.last(), tailB; </span><br><span class=\"line\"><span class=\"keyword\">while</span>(snakeB.length !== <span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">\ttailB = snakeB.last(); </span><br><span class=\"line\">\t<span class=\"comment\">// 尾节点匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tailA.data === tailB.data) <span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t<span class=\"comment\">// 不匹配</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> snakeB.pop(); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Control\"><a href=\"#Control\" class=\"headerlink\" title=\"Control\"></a>Control</h2><p>Control 主要做 3 件事：</p>\n<ol>\n<li>游戏与用户的互动 </li>\n<li>驱动 Model </li>\n<li>同步 View 与 Model </li>\n</ol>\n<p>「游戏与用户的互动」是指向外提供游戏过程需要使用到的 APIs 与 各类事件。笔者规划的 APIs 如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name</th>\n<th style=\"text-align:left\">type</th>\n<th style=\"text-align:left\">detail</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">init</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">初始化游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">start</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">开始游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">restart</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">重新开始游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pause</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">resume</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">恢复</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">turn</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">控制蛇的转向。如：turn(“left”)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">destroy</td>\n<td style=\"text-align:left\">method</td>\n<td style=\"text-align:left\">销毁游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">speed</td>\n<td style=\"text-align:left\">property</td>\n<td style=\"text-align:left\">蛇的移动速度</td>\n</tr>\n</tbody>\n</table>\n<p>事件如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name</th>\n<th style=\"text-align:left\">detail</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">countdown</td>\n<td style=\"text-align:left\">倒时计</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">eat</td>\n<td style=\"text-align:left\">吃到食物</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">before-eat</td>\n<td style=\"text-align:left\">吃到食物前触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gameover</td>\n<td style=\"text-align:left\">游戏结束</td>\n</tr>\n</tbody>\n</table>\n<p>事件统一挂载在游戏实例下的 <code>event</code> 对象下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">snake.event.on(<span class=\"string\">\"countdown\"</span>, (time) =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">\"剩余时间：\"</span>, time));</span><br></pre></td></tr></table></figure></p>\n<p>「驱动 Model 」只做一件事 —— <strong>将 Model 的蛇的方向更新为用户指定的方向</strong>。<br>「同步 View 与 Model 」也比较简单，检查 Model 是否有更新，如果有更新通知 View 更新游戏界面。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本文转载自：<a href=\"https://github.com/leeenx/snake\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/snake</a></p>\n<p>下面是本文介绍的贪吃蛇的线上 <a href=\"https://leeenx.github.io/snake/src/snake.html\" target=\"_blank\" rel=\"noopener\">DEMO</a> 的二维码： </p>\n<p><img src=\"http://7xv39r.com1.z0.glb.clouddn.com/20170923_qr.png\" alt=\"demo\"> </p>\n<p>游戏的源码托管在：<a href=\"https://github.com/leeenx/snake\" target=\"_blank\" rel=\"noopener\">https://github.com/leeenx/snake</a></p>\n<p>感谢耐心阅读完本文章的读者。本文仅代表笔者的个人观点，如有不妥之处请不吝赐教。</p>\n"}],"PostAsset":[{"_id":"source/_posts/中国福州鼓山半日游/4.jpg","slug":"4.jpg","post":"cjvm1djg90009kstnpk4ozts2","modified":1,"renderable":0},{"_id":"source/_posts/中国福州鼓山半日游/9.jpg","slug":"9.jpg","post":"cjvm1djg90009kstnpk4ozts2","modified":1,"renderable":0},{"_id":"source/_posts/中国福州鼓山半日游/6.jpg","slug":"6.jpg","post":"cjvm1djg90009kstnpk4ozts2","modified":1,"renderable":0},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-1.png","slug":"6-1.png","post":"cjvm1djit0023kstnj3zo1u20","modified":1,"renderable":0},{"_id":"source/_posts/中国福州鼓山半日游/7.jpg","slug":"7.jpg","post":"cjvm1djg90009kstnpk4ozts2","modified":1,"renderable":0},{"_id":"source/_posts/小飞机ss-ssr的部署方法/11.png","slug":"11.png","post":"cjvm1djgd000dkstnv4atcybj","modified":1,"renderable":0},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/1.png","post":"cjvm1djfv0000kstnqcpktryv","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/2.jpg","post":"cjvm1djfv0000kstnqcpktryv","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/3.jpg","post":"cjvm1djfv0000kstnqcpktryv","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Centos部署ngrok内网穿透服务器/4.png","post":"cjvm1djfv0000kstnqcpktryv","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/关于php执行shell命令的一些体会/1.png","post":"cjvm1djgc000ckstnxpy8r9pe","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/关于php执行shell命令的一些体会/2.png","post":"cjvm1djgc000ckstnxpy8r9pe","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/关于php执行shell命令的一些体会/3.png","post":"cjvm1djgc000ckstnxpy8r9pe","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/关于php执行shell命令的一些体会/4.png","post":"cjvm1djgc000ckstnxpy8r9pe","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/关于php执行shell命令的一些体会/huanhu.gif","post":"cjvm1djgc000ckstnxpy8r9pe","slug":"huanhu.gif","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/0.png","post":"cjvm1djgi000okstnp4657t41","slug":"0.png","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/1.png","post":"cjvm1djgi000okstnp4657t41","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/2.png","post":"cjvm1djgi000okstnp4657t41","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/3.jpg","post":"cjvm1djgi000okstnp4657t41","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/4.jpg","post":"cjvm1djgi000okstnp4657t41","slug":"4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/5.png","post":"cjvm1djgi000okstnp4657t41","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/6.png","slug":"6.png","post":"cjvm1djgi000okstnp4657t41","modified":1,"renderable":0},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/huanhu.gif","post":"cjvm1djgi000okstnp4657t41","slug":"huanhu.gif","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/nb.gif","post":"cjvm1djgi000okstnp4657t41","slug":"nb.gif","modified":1,"renderable":1},{"_id":"source/_posts/用nginx配置反向代理实现二级域名配置到公网ip的不同端口的应用/wen.gif","post":"cjvm1djgi000okstnp4657t41","slug":"wen.gif","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/1.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/10.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/11.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/2.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/3.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/4.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/5.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/6.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/7.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/8.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/github更新项目/9.png","post":"cjvm1djg80008kstnwdw1mcev","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/1.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/10.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"10.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/11.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"11.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/12.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"12.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/13.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"13.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/2.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/3.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/5.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"5.jpg","modified":1,"renderable":1},{"_id":"source/_posts/中国福州鼓山半日游/8.jpg","post":"cjvm1djg90009kstnpk4ozts2","slug":"8.jpg","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/1.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/10.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/11.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/12.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/13.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/2.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/3.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/4.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/5.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/6.png","slug":"6.png","post":"cjvm1djgf000hkstnyjzcbxff","modified":1,"renderable":0},{"_id":"source/_posts/深海迷航联机教程/7.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/8.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/深海迷航联机教程/9.png","post":"cjvm1djgf000hkstnyjzcbxff","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/1.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/10.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/12.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/13.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/2.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/3.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/4.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/5.jpg","post":"cjvm1djgd000dkstnv4atcybj","slug":"5.jpg","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/6.jpg","post":"cjvm1djgd000dkstnv4atcybj","slug":"6.jpg","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/7.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/8.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/小飞机ss-ssr的部署方法/9.png","post":"cjvm1djgd000dkstnv4atcybj","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/1.png","post":"cjvm1djg50006kstn0068jzcw","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/10.png","post":"cjvm1djg50006kstn0068jzcw","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/11.png","post":"cjvm1djg50006kstn0068jzcw","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/12.png","post":"cjvm1djg50006kstn0068jzcw","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/13.png","post":"cjvm1djg50006kstn0068jzcw","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/14.png","post":"cjvm1djg50006kstn0068jzcw","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/15.png","post":"cjvm1djg50006kstn0068jzcw","slug":"15.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/16.png","post":"cjvm1djg50006kstn0068jzcw","slug":"16.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/2.png","post":"cjvm1djg50006kstn0068jzcw","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/3.png","post":"cjvm1djg50006kstn0068jzcw","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/4.png","post":"cjvm1djg50006kstn0068jzcw","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/5.png","post":"cjvm1djg50006kstn0068jzcw","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/6.png","post":"cjvm1djg50006kstn0068jzcw","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/7.png","post":"cjvm1djg50006kstn0068jzcw","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/8.png","post":"cjvm1djg50006kstn0068jzcw","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/docker-gogs-nginx配置Git服务自动部署Web应用/9.png","post":"cjvm1djg50006kstn0068jzcw","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/1.jpg","post":"cjvm1djis0022kstn3h78j48k","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/10.png","post":"cjvm1djis0022kstn3h78j48k","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/11.png","post":"cjvm1djis0022kstn3h78j48k","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/2.png","post":"cjvm1djis0022kstn3h78j48k","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/3.png","post":"cjvm1djis0022kstn3h78j48k","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/4.png","post":"cjvm1djis0022kstn3h78j48k","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/5.png","post":"cjvm1djis0022kstn3h78j48k","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/6.png","post":"cjvm1djis0022kstn3h78j48k","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/7.png","post":"cjvm1djis0022kstn3h78j48k","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/8.png","post":"cjvm1djis0022kstn3h78j48k","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/使用树莓派构建一台服务器，永久运行网站/9.png","post":"cjvm1djis0022kstn3h78j48k","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/1.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/2.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/3.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/4.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-1.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"5-1.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-2.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"5-2.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-3.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"5-3.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-4.png","slug":"5-4.png","post":"cjvm1djit0023kstnj3zo1u20","modified":1,"renderable":0},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-5.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"5-5.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/5-6.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"5-6.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-10.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-10.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-2.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-2.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-3.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-3.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-4.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-4.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-5.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-5.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-6.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-6.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-7.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-7.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-8.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-8.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/6-9.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"6-9.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/hexo-config.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"hexo-config.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/next-config.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"next-config.png","modified":1,"renderable":1},{"_id":"source/_posts/用hexo和github搭建个人博客小站全攻略/next.png","post":"cjvm1djit0023kstnj3zo1u20","slug":"next.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjvm1djfv0000kstnqcpktryv","category_id":"cjvm1djg40004kstnhkstroog","_id":"cjvm1djge000fkstng2vrap69"},{"post_id":"cjvm1djg10002kstn4xqylzps","category_id":"cjvm1djg40004kstnhkstroog","_id":"cjvm1djgi000lkstntqatajqk"},{"post_id":"cjvm1djgd000dkstnv4atcybj","category_id":"cjvm1djg40004kstnhkstroog","_id":"cjvm1djgj000pkstn44i8w5aw"},{"post_id":"cjvm1djg50006kstn0068jzcw","category_id":"cjvm1djg40004kstnhkstroog","_id":"cjvm1djgk000qkstnklmgyyt6"},{"post_id":"cjvm1djg80008kstnwdw1mcev","category_id":"cjvm1djgi000kkstns1uzviq4","_id":"cjvm1djgl000ukstnb2wg97ni"},{"post_id":"cjvm1djg90009kstnpk4ozts2","category_id":"cjvm1djgk000rkstnkgr0vvuo","_id":"cjvm1djgm000ykstn0ry1yhg8"},{"post_id":"cjvm1djgc000ckstnxpy8r9pe","category_id":"cjvm1djgl000vkstn8papf26n","_id":"cjvm1djgn0011kstnzcu1qy0y"},{"post_id":"cjvm1djgf000hkstnyjzcbxff","category_id":"cjvm1djgn000zkstn4n8quye1","_id":"cjvm1djgo0015kstnwu43y0y2"},{"post_id":"cjvm1djgh000jkstnreb73wrh","category_id":"cjvm1djgo0012kstn1b5r3fyx","_id":"cjvm1djgp001akstnydrq9xsa"},{"post_id":"cjvm1djgi000okstnp4657t41","category_id":"cjvm1djgp0016kstn5gb6cx5w","_id":"cjvm1djgq001dkstn785hx9vz"},{"post_id":"cjvm1djis0022kstn3h78j48k","category_id":"cjvm1djg40004kstnhkstroog","_id":"cjvm1djiw0027kstnt814bzdq"},{"post_id":"cjvm1djit0023kstnj3zo1u20","category_id":"cjvm1djgo0012kstn1b5r3fyx","_id":"cjvm1djiw002akstn4bigssi4"},{"post_id":"cjvm1djiu0025kstnk0jn07xo","category_id":"cjvm1djiw0028kstncthyvh9c","_id":"cjvm1djj4002fkstneiwcwixl"}],"PostTag":[{"post_id":"cjvm1djfv0000kstnqcpktryv","tag_id":"cjvm1djg50005kstnsbe5rkj0","_id":"cjvm1djgh000ikstnc0b2d41p"},{"post_id":"cjvm1djfv0000kstnqcpktryv","tag_id":"cjvm1djga000bkstn94cb83bz","_id":"cjvm1djgi000mkstntvp8fsvw"},{"post_id":"cjvm1djg10002kstn4xqylzps","tag_id":"cjvm1djgf000gkstnt8z61p5y","_id":"cjvm1djgl000tkstnh0x5vybj"},{"post_id":"cjvm1djg10002kstn4xqylzps","tag_id":"cjvm1djgi000nkstniwekll8q","_id":"cjvm1djgm000wkstnrfyqegyp"},{"post_id":"cjvm1djg50006kstn0068jzcw","tag_id":"cjvm1djgk000skstnb0cxw79d","_id":"cjvm1djgo0014kstnjhrei5yg"},{"post_id":"cjvm1djg50006kstn0068jzcw","tag_id":"cjvm1djgm000xkstn8u6h99kv","_id":"cjvm1djgp0017kstnz0fpnlfj"},{"post_id":"cjvm1djg50006kstn0068jzcw","tag_id":"cjvm1djgn0010kstnec86y2e5","_id":"cjvm1djgp0019kstndsqvjt74"},{"post_id":"cjvm1djg80008kstnwdw1mcev","tag_id":"cjvm1djgo0013kstnn03qiipb","_id":"cjvm1djgq001bkstneg8eeuw5"},{"post_id":"cjvm1djg90009kstnpk4ozts2","tag_id":"cjvm1djgp0018kstne8urad01","_id":"cjvm1djgr001fkstn3senj8jr"},{"post_id":"cjvm1djg90009kstnpk4ozts2","tag_id":"cjvm1djgq001ckstn9ysn78ql","_id":"cjvm1djgr001gkstn2yiy1us7"},{"post_id":"cjvm1djgc000ckstnxpy8r9pe","tag_id":"cjvm1djgf000gkstnt8z61p5y","_id":"cjvm1djgu001lkstn4dubhag5"},{"post_id":"cjvm1djgc000ckstnxpy8r9pe","tag_id":"cjvm1djgi000nkstniwekll8q","_id":"cjvm1djgu001mkstn4g2dt3ir"},{"post_id":"cjvm1djgc000ckstnxpy8r9pe","tag_id":"cjvm1djgs001ikstnvlb3172c","_id":"cjvm1djgu001okstnlblhcwfi"},{"post_id":"cjvm1djgc000ckstnxpy8r9pe","tag_id":"cjvm1djgt001jkstnv4m9o6mm","_id":"cjvm1djgv001pkstnad8kuqwo"},{"post_id":"cjvm1djgd000dkstnv4atcybj","tag_id":"cjvm1djgt001kkstnbozgqvfe","_id":"cjvm1djgw001skstndjry8abq"},{"post_id":"cjvm1djgd000dkstnv4atcybj","tag_id":"cjvm1djgu001nkstnqqs4gjds","_id":"cjvm1djgx001tkstnmtgwhz4o"},{"post_id":"cjvm1djgd000dkstnv4atcybj","tag_id":"cjvm1djgv001qkstnrinxwrmk","_id":"cjvm1djgx001vkstn33gqntw3"},{"post_id":"cjvm1djgf000hkstnyjzcbxff","tag_id":"cjvm1djgw001rkstngm86fuy6","_id":"cjvm1djgx001wkstn1m2def68"},{"post_id":"cjvm1djgh000jkstnreb73wrh","tag_id":"cjvm1djgx001ukstnvvcb1nqe","_id":"cjvm1djgy001ykstn28x0jais"},{"post_id":"cjvm1djgi000okstnp4657t41","tag_id":"cjvm1djgm000xkstn8u6h99kv","_id":"cjvm1djgz0020kstng54ze0wi"},{"post_id":"cjvm1djgi000okstnp4657t41","tag_id":"cjvm1djgy001zkstnm5c58zbc","_id":"cjvm1djgz0021kstnnrhp1e8t"},{"post_id":"cjvm1djit0023kstnj3zo1u20","tag_id":"cjvm1djgx001ukstnvvcb1nqe","_id":"cjvm1djiv0026kstnx6gmopp0"},{"post_id":"cjvm1djit0023kstnj3zo1u20","tag_id":"cjvm1djgo0013kstnn03qiipb","_id":"cjvm1djiw0029kstngej76b4i"},{"post_id":"cjvm1djis0022kstn3h78j48k","tag_id":"cjvm1djiu0024kstnnm4ot03d","_id":"cjvm1djj0002ckstno39uijd7"},{"post_id":"cjvm1djis0022kstn3h78j48k","tag_id":"cjvm1djgi000nkstniwekll8q","_id":"cjvm1djj2002dkstnse58jii0"},{"post_id":"cjvm1djiu0025kstnk0jn07xo","tag_id":"cjvm1djiw002bkstnoyyd9v7x","_id":"cjvm1djj4002ekstn5x3t19la"},{"post_id":"cjvm1djiu0025kstnk0jn07xo","tag_id":"cjvm1djgo0013kstnn03qiipb","_id":"cjvm1djj4002gkstnrlx30svx"}],"Tag":[{"name":"Centos","_id":"cjvm1djg50005kstnsbe5rkj0"},{"name":"ngrok","_id":"cjvm1djga000bkstn94cb83bz"},{"name":"CentOs","_id":"cjvm1djgf000gkstnt8z61p5y"},{"name":"Linux","_id":"cjvm1djgi000nkstniwekll8q"},{"name":"docker","_id":"cjvm1djgk000skstnb0cxw79d"},{"name":"nginx","_id":"cjvm1djgm000xkstn8u6h99kv"},{"name":"gogs","_id":"cjvm1djgn0010kstnec86y2e5"},{"name":"github","_id":"cjvm1djgo0013kstnn03qiipb"},{"name":"travel","_id":"cjvm1djgp0018kstne8urad01"},{"name":"福州，鼓山","_id":"cjvm1djgq001ckstn9ysn78ql"},{"name":"php","_id":"cjvm1djgs001ikstnvlb3172c"},{"name":"shell","_id":"cjvm1djgt001jkstnv4m9o6mm"},{"name":"ssr","_id":"cjvm1djgt001kkstnbozgqvfe"},{"name":"ss","_id":"cjvm1djgu001nkstnqqs4gjds"},{"name":"小飞机","_id":"cjvm1djgv001qkstnrinxwrmk"},{"name":"深海迷航，联机","_id":"cjvm1djgw001rkstngm86fuy6"},{"name":"hexo","_id":"cjvm1djgx001ukstnvvcb1nqe"},{"name":"domain","_id":"cjvm1djgy001zkstnm5c58zbc"},{"name":"树莓派","_id":"cjvm1djiu0024kstnnm4ot03d"},{"name":"javascript","_id":"cjvm1djiw002bkstnoyyd9v7x"}]}}